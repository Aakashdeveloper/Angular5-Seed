{"version":3,"sources":["/Users/misko/work/angular/dist/packages-dist/language-service/bundles/language-service.umd.js"],"names":["$getModule","name","$provided","require","define","modules","cb","$deferred","$reflect","defineMetadata","getOwnMetadata","global","$resolved","module","exports","provided","result","Object","assign","reflect-metadata","apply","this","map","fs","path","ts","__extends","d","b","__","constructor","extendStatics","prototype","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","SchemaMetadata","MetadataFactory","makeMetadataFactory","props","factory","args","_i","arguments","length","values","__assign","ngMetadataName","isTypeOf","obj","Route","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","parseErrors","error","Error","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","_sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten$1","list","reduce","flat","item","flatItem","concat","jitSourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf$1$1","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path$$1","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","a","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","summaryFileName","fileName","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","isLoweredSymbol","LOWERED_SYMBOL","createLoweredSymbol","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ERROR_COMPONENT_TYPE","nullSafeIsEquivalent","base","other","isEquivalent","areAllEquivalent","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","_resolveProviders","isComponent","ProviderAstType","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector$1","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","listLazyRoutes","allLazyRoutes","transitiveModule","ROUTES","loadChildren","_collectLoadChildren","loadChildren_1","route","parseLazyRoute","routes","routes_1","routePath","routeName","referencedModule","moduleName","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","resolvedSymbol","addSummary","symbol","metadata","summary","json","forJitSerializer_1","ForJitSerializer","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","deserializeSummaries","symbolCache","libraryFileName","FromJsonDeserializer","deserialize","createForJitStub","outputCtx","createSummaryForJitFunction","fnName","ArrayType","Exported","isCall","__symbolic","isFunctionCall","isMethodCallOnVariable","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","files","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","modMeta","pipes","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","isNgSymbol","isDirective","isPipe","isNgModule","getNgModuleMetadata","isInjectable","isValueExportingNonSourceFile","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","errorCollector","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","strictInjectionParameters","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","compiler","AotCompiler","StyleCompiler","NgModuleCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","seen","summaries","createOutputContext","genFilePath","runtime","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","encodeURI","baseParts","createCommonjsModule","isFunction","isObject","tryCatcher","tryCatchTarget","errorObject","tryCatch","flattenUnsubscriptionErrors","errs","err","UnsubscriptionError_1","UnsubscriptionError","toSubscriber","nextOrObserver","complete","Subscriber_1","Subscriber","rxSubscriber","Observer","empty","noop$1","pipe","fns","pipeFromArray","prev","noop_1","noop","isScheduler","schedule","isPromise$2","subscribe","subscribeToResult","outerSubscriber","outerValue","outerIndex","destination","InnerSubscriber_1","InnerSubscriber","closed","Observable_1","Observable","_isScalar","next","syncErrorThrowable","isArrayLike","isPromise_1","root","setTimeout","iterator","iterator$$1","done","observable","obs","TypeError","isObject_1","mergeMap","project","resultSelector","concurrent","POSITIVE_INFINITY","lift","MergeMapOperator","identity","mergeAll","mergeMap_1","identity_1","merge$3","observables","call","mergeStatic$1","scheduler","last","isScheduler_1","mergeAll_1","ArrayObservable_1","ArrayObservable","merge$2","merge_1","refCount","RefCountOperator$1","multicast","subjectOrSubjectFactory","subjectFactory","MulticastOperator","connectable","ConnectableObservable_1","connectableObservableDescriptor","shareSubjectFactory","Subject_1","Subject","share$1","refCount_1","multicast_1","share","share_1","makeDecorator","parentClass","chainFn","DecoratorFactory","objOrType","metaCtor","annotationInstance","TypeDecorator","cls","ANNOTATIONS","makeMetadataCtor","annotationCls","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","unusedKey","parameters","PARAMETERS","annotation","getSymbolIterator","_symbolIterator","Symbol_1","_global","getOwnPropertyNames","scheduleMicroTask","Zone","current","looseIdentical","stringify$1","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef$1","resolveProvider","computeDeps","IDENT","EMPTY","useNew","provide","USE_VALUE$1","staticError","multiProviderMixError","recursivelyProcessProviders","records","MULTI_PROVIDER_FN","record","tryResolveToken","notFoundValue","resolveToken","NG_TEMP_TOKEN_PATH","CIRCULAR","NO_NEW_LINE","depRecords","depRecord","childRecord","NULL_INJECTOR","Injector","THROW_IF_NOT_FOUND","providerDeps","annotations","Optional","SkipSelf","Self","Inject$1","formatError","charAt","JSON","NEW_LINE","getDebugContext","ERROR_DEBUG_CONTEXT","getOriginalError","ERROR_ORIGINAL_ERROR","getErrorLogger","ERROR_LOGGER","defaultErrorLogger","wrappedError","originalError","findFirstClosedCycle","constructResolvingPath","injectionError","injector","constructResolvingMessage","errMsg","addKey","injectors","noProviderError","cyclicDependencyError","instantiationError","originalException","originalStack","first","invalidProviderError","noAnnotationError","typeOrFunc","signature","ii","parameter","outOfBoundsError","mixingMultiProvidersWithRegularProvidersError","provider1","provider2","isType","convertTsickleDecoratorIntoMetadata","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","getParentCtor","parentProto","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","constructDependencies","_EMPTY_LIST","ResolvedReflectiveFactory","resolveReflectiveProvider","ResolvedReflectiveProvider_","resolveReflectiveProviders","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","resolvedFactories","Type$1$1","params_1","t","_extractToken","optional","_createDependency","visibility","paramMetadata","InjectionToken","_mapProviders","_providers","getProviderAtIndex","isPromise$1","_appIdRandomProviderFactory","_randomChar","floor","random","_throwError","noComponentFactoryError","ERROR_COMPONENT","createScope","events","leave","scope","returnValue","trace","leaveScope","noopScope","arg0","arg1","checkStable","zone","_nesting","hasPendingMicrotasks","isStable","onMicrotaskEmpty","emit","runOutsideAngular","onStable","forkInnerZoneWithAngularBehavior","_inner","fork","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","hasPendingMacrotasks","macroTask","onHandleError","handleError","onError","onUnstable","isDevMode","_runModeLocked","_devMode","createPlatform","_platform","destroyed","ALLOW_MULTIPLE_PLATFORMS","PlatformRef","inits","PLATFORM_INITIALIZER","init","assertPlatform","requiredToken","platform","getPlatform","getNgZone","ngZoneOption","NoopNgZone","NgZone","enableLongStackTrace","_callAndReportToErrorHandler","errorHandler","ngZone","catch","optionsReducer","dst","objs","remove","splice","flatten$2","_queryElementChildren","predicate","matches","childNodes","DebugElement","_queryNodeChildren","parentNode","getDebugNode","nativeNode","_nativeNodeToDebugNode","indexDebugNode","removeDebugNodeFromIndex","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","isAObject","isBObject","isJsObject","comparator","iterator1","iterator2","item1","item2","iterateListLike","getPreviousIndex","addRemoveOffset","moveOffsets","previousIndex","moveOffset","getTypeNameForDebugging","_iterableDiffersFactory","defaultIterableDiffers","_keyValueDiffersFactory","defaultKeyValueDiffers","_localeFactory","locale","asTextData","view","asElementData","asProviderData","asPureExpressionData","asQueryList","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","viewWrappedDebugError","_addDebugContext","logError","isViewDebugError","viewDestroyedError","tokenKey","_tokenKeyCache","size","checkBinding","def","oldValues","state","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","Services","createDebugContext","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","eventName","event","componentView","handleEvent","declaredViewContainer","viewParentEl","renderNode","renderElement","renderText","elementEventFullName$1","isComponentView","isEmbeddedView","splitDepsDsl","getParentRenderElement","renderHost","renderParent","componentRendererType","encapsulation","ViewEncapsulation$1","Native","resolveDefinition","DEFINITION_CACHE","NOOP","rootRenderNodes","renderNodes","visitRootRenderNodes","nextSibling","renderer","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","rn","bindingFlags","embeddedViews","_embeddedViews","appendChild","insertBefore","removeChild","splitNamespace","NS_PREFIX_RE","createElement","elDef","rootSelectorOrNode","selectorOrNode","ns","createComment","parentEl","selectRootElement","name_2","setAttribute","listenToElementOutputs","outputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","outputIndex","checkAndUpdateElementInline","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","bindings","changed","checkAndUpdateElementValue","checkAndUpdateElementDynamic","binding","elData","renderNode$$1","setElementAttribute","setElementClass","setElementStyle","setElementProperty","renderValue","sanitizer","sanitize","removeAttribute","addClass","removeClass","SecurityContext$1","setStyle","removeStyle","setProperty","initNgModule","data","_def","provDef","_createProviderInstance$1","resolveNgModuleDep","_parent","tokenKey$$1","InjectorRefTokenKey$1","NgModuleRefTokenKey","providersByKey","providerInstance","UNDEFINED_VALUE","injectable","_createClass","_callFactory","depValues","callNgModuleLifecycle","lifecycles","instance","ngOnDestroy","attachEmbeddedView","parentView","elementData","viewIndex","addToArray","attachProjectedView","dirtyParentQueries","renderAttachEmbeddedView","vcElementData","dvcElementData","projectedViews","template","_projectedViews","markNodeAsProjectedTemplate","viewDef","nodeFlags","parentNodeDef","childFlags","detachEmbeddedView","removeFromArray","renderDetachView","detachProjectedView","moveEmbeddedView","oldViewIndex","newViewIndex","prevView","prevRenderNode","createViewContainerData","ViewContainerRef_","createChangeDetectorRef","ViewRef_","createTemplateData","TemplateRef_","createInjector","Injector_","createRendererV1","RendererAdapter","createNgModuleRef","moduleType","bootstrapComponents","NgModuleRef_","createProviderInstance","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","allowPrivateServices","subscription","eventHandlerClosure","unsubscribe","checkAndUpdateDirectiveInline","providerData","changes","updateProp","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveDynamic","callFactory","resolveDep","startView","ChangeDetectorRefTokenKey","RendererV1TokenKey","findCompView","Renderer2TokenKey","ElementRefTokenKey","ElementRef","ViewContainerRefTokenKey","viewContainer","TemplateRefTokenKey","InjectorRefTokenKey","providerDef_1","allProviders","publicProviders","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","WrappedValue","wrapped","SimpleChange","callLifecycleHooksChildrenFirst","parent_1","callProviderLifecycles","directChildFlags","callElementProvidersLifecycles","setCurrentNode","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","createQuery","QueryList","nodeMatchedQueries","tplDef","filterId","setDirty","checkAndUpdateQuery","queryList","dirty","directiveInstance","newValues","elementDef","calcQueryValues","reset","notify","boundValue","bindingType","notifyOnChanges","queryDef","valueType","matchedQueries","getQueryValue","childMatchedQueries","embeddedView","dvc","projectedView","queryValueType","appendNgContent","createPureExpression","checkAndUpdatePureExpressionInline","checkAndUpdatePureExpressionDynamic","createText","checkAndUpdateTextInline","_addInterpolationPart","checkAndUpdateTextDynamic","createEmbeddedView","anchorDef$$1","createView","initView","createViewNodes","createRootView","createComponentView","hostElement","compRenderer","rendererType","rendererFactory","createRenderer","componentProvider","disposables","outputCount","bindingCount","hostDef","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","checkNoChangesView","markProjectedViewsForCheck","updateDirectives","execEmbeddedViewsAction","CheckNoChanges","updateRenderer","checkAndUpdateView","CheckAndUpdate","checkAndUpdateNode","argStyle","checkAndUpdateNodeInline","checkAndUpdateNodeDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","destroyView","Destroy","destroyNode","destroyViewNodes","destroy","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","nodeCount","initServicesIfNeeded","initialized","services","createDebugServices","createProdServices","overrideProvider","clearProviderOverrides","createProdRootView","DebugContext_","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugClearProviderOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","elInjector","createRootData","RendererFactory2","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","Sanitizer","ErrorHandler","anchorDef","viewDef$$1","parentInjector","applyProviderOverridesToNgModule","override","providerOverrides","clear","elementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","elIndex","hasOverrides","hasDeprecatedOverrides","deprecatedBehavior","checkIndex","detectChanges","checkNoChanges","_currentView","_currentNodeIndex","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextDirectiveWithBinding","_currentAction","debugCheckRenderNodeFn","nextRenderNodeWithBinding","givenValues","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","camelCaseToDashCase","CAMEL_CASE_REGEXP","getRenderNodeIndex","renderNodeIndex","findHostElement","collectReferences","references","refName","self","oldAction","oldView","oldNodeIndex","getCurrentDebugContext","isParseSourceSpan","spanOf","inSpan","exclusive","offsetSpan","amount","isNarrower","spanA","spanB","hasTemplateReference","diDep","getSelectors","info","flatten","removeSuffix","uniqueByName","elements","elements_1","diagnosticInfoFromTemplateInfo","members","htmlAst","templateAst","findTemplateAstAt","allowWidening","visitEmbeddedTemplate","visitChildren","visitElement","inputs","visitDirective","RecursiveTemplateAstVisitor","findAstAt","excludeEmpty","NullAstVisitor","getExpressionCompletions","getType","language_services_4","tail","getPipes","receiverType","getBuiltinType","language_services_7","Any","getExpressionSymbol","compose","indexes","indexes_1","group","groups","name_1","attributeNames","defaultAttributes","eventNames","SchemaInformation","eventsOf","propertyNames","propertiesOf","getTemplateCompletions","templateInfo","templatePosition_1","path_1","mostSpecific","elementCompletions","astPosition_1","startTagSpan","tagLen","attributeCompletions","visitAttribute","valueSpan","attributeValueCompletions","visitText","entityCompletions","getSourceText","interpolationCompletions","contentType","TagContentType","PARSABLE_DATA","voidElementAttributeCompletions","visitComment","visitExpansion","visitExpansionCase","parentOf","attributeCompletionsForElement","getAttributeInfosForElement","fromHtml","nameOfAttr","htmlAttributes","htmlProperties","htmlEvents","selectorMap","applicableSelectors","selectorAndAttributeNames","attrs_1","selectorAndAttr","elementSelector","createElementCssSelector","SelectorMatcher","addSelectables","foldAttrs","expandedAttr","dinfo","ExpressionVisitor","language_services_2","widerPath_1","widerVisitor","htmlNames","hiddenHtmlElements","directiveElements","components","found","re","exec","NAMED_ENTITIES","templatePath","templateAttr","inputOutput","templates","duplicate","cloneAttr","lowerName","locateSymbol","templatePosition","symbol_1","span_1","attributeValueSymbol_1","inEvent","attribute","findAttribute","expressionOffset","visitNgContent","getTypeSymbol","OverrideKindSymbol","visitReference","visitVariable","visitEvent","handler","findOutputBinding","visitElementProperty","visitAttr","visitBoundText","expressionPosition","visitDirectiveProperty","findInputBinding","invertedInput","invertMap","fieldName","templateName","classSymbol","invertedOutputs","getDefinition","definition","getTemplateDiagnostics","astProvider","results","templates_1","getTemplateAst","DiagnosticKind","expressionDiagnostics","language_services_3","getDeclarationDiagnostics","declarations","declarations_1","declaration","report","declarationSpan","templateUrl","getHover","hoverTextOf","language","container","createLanguageService","LanguageServiceImpl","removeMissing","uniqueBySpan","findSuitableDefaultModule","resultSize","module_1","moduleSize","createLanguageServiceFromTypescript","service","ngHost","TypeScriptServiceHost","ngServer","setSite","findTsConfig","dirname","existsSync","candidate","parentDir","spanOf$1","getStart","getEnd","shrink","spanAt","position_1","getPositionOfLineAndCharacter","findChild","SyntaxKind","LastToken","forEachChild","getExternalFiles","projectHostMap","getTemplateReferences","angularOnlyFilter","ls","cleanupSemanticCache","getSyntacticDiagnostics","getSemanticDiagnostics","getCompilerOptionsDiagnostics","getSyntacticClassifications","getSemanticClassifications","getEncodedSyntacticClassifications","getEncodedSemanticClassifications","getCompletionsAtPosition","getCompletionEntryDetails","entryName","getCompletionEntrySymbol","getQuickInfoAtPosition","getNameOrDottedNameSpan","startPos","endPos","getBreakpointStatementAtPosition","getSignatureHelpItems","getRenameInfo","findRenameLocations","findInStrings","findInComments","getDefinitionAtPosition","getTypeDefinitionAtPosition","getImplementationAtPosition","getReferencesAtPosition","findReferences","getDocumentHighlights","filesToSearch","getOccurrencesAtPosition","getNavigateToItems","searchValue","getNavigationBarItems","getNavigationTree","getOutliningSpans","getTodoComments","descriptors","getBraceMatchingAtPosition","getIndentationAtPosition","getFormattingEditsForRange","getFormattingEditsForDocument","getFormattingEditsAfterKeystroke","getDocCommentTemplateAtPosition","isValidBraceCompletionAtPosition","openingBrace","getCodeFixesAtPosition","errorCodes","getEmitOutput","getProgram","dispose","getApplicableRefactors","positionOrRaneg","getEditsForRefactor","formatOptions","positionOrRange","refactorName","actionName","tryCall","oldLS","getSourceFile","tryFilenameCall","tryFilenameOneCall","tryFilenameTwoCall","p1","p2","tryFilenameThreeCall","p3","tryFilenameFourCall","p4","completionToEntry","sortText","kindModifiers","diagnosticToDiagnostic","messageText","category","DiagnosticCategory","tryOperation","attempting","projectService","logger","proxy","languageService","angularOnlyResults","maxResultCount","excludeDtsFiles","serviceHost","languageServiceHost","isGlobalCompletion","isMemberCompletion","isNewIdentifierLocation","entries","getCompletionsAt","results_1","ours","getHoverAt","displayParts","tags","documentation","textSpan","getDiagnostics","file_1","getDefinitionAt","ours_1","loc","containerName","containerKind","fs__default","path__default","ts__default","setPrototypeOf","__proto__","createInject","createInjectionToken","desc","_desc","createAttribute","attributeName","createContentChildren","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","createNgModule","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createInjectable","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","CatQuery","Types","DepFlags","Value","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","RenderElement","TemplateRef","ViewContainerRef","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION$1","TextAst","BoundTextAst","AttrAst","BoundElementPropertyAst","BoundEventAst","calcFullName","ReferenceAst","VariableAst","variables","BoundDirectivePropertyAst","directiveName","DirectiveAst","hostProperties","hostEvents","Builtin","NullTemplateVisitor","jitDevMode","_f","assertNoMembers","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileSummaryKind","Injectable","CompileStylesheetMetadata","styles","styleUrls","CompileTemplateMetadata","externalStylesheets","animations","ngContentSelectors","interpolation","toSummary","CompileDirectiveMetadata","isHost","hostListeners","componentViewType","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","childOf","Expansion","ExpansionCase","expSourceSpan","startSourceSpan","InterpolationConfig","fromArray","markers","style","RAW_TEXT","ESCAPABLE_RAW_TEXT","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","_dedupeBindings","names","reversedResult","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","RecursiveAstVisitor","AstTransformer","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","isClosedByChild","_getParentElementSkippingContainers","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","stackIndex","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","currentParent","lcParent","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","write","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_WriteVisitor$1","units","notes","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","interpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","textDef","directiveDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","_SELECTOR_REGEXP","classNames","_addResult","cssSel","inNot","hasElementSelector","getMatchingElementTemplate","classAttr","klass","notSelector","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","oldModule","modulesByToken","modSummary","mod","addedTokens","tokenRef","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","hasUnknownDeps","dependenciesMetadata","isSelf","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","read","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","of","visitArrayType","MapType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassField","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","ProviderViewContext","ProviderElementContext","viewContext","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","foundLocal","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","emitSourceMaps","referenceFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","metas","ElementSchemaRegistry","BOOLEAN$1","NUMBER$1","STRING$1","OBJECT$1","SCHEMA$1","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","hasHost","shouldScope","part_1","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","needsStyleShim","compileStyles","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","expanded","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","getUsedPipes","createDirectiveHostPropertyAsts","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","BIND_NAME_REGEXP","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","componentId","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","isHostComponent","refOutputVars","updates","actions","getOutputVar","targetStatements","viewStmts","preprocessUpdateExpression","nameResolver","viewName","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","_preprocessUpdateExpression","_visitElementOrTemplate","queryMatchesExpr","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","compAst","compRendererType","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","_addProviderNode","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","createUpdateStatements","allowEmptyExprs","updateBindingCount","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","GeneratedFile","srcFileUrl","sourceOrStmts","indexBySymbol","reexportedBy","processedSummaryBySymbol","processedSummaries","getKnownModuleName","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","declarationSymbol","ngModuleSummary","summary_1","importAs","reexportSymbol","__symbol","toSummaryFileName","baseSymbol","visitStaticSymbol","loadSummary","isLibrary","exportAsArr","exportAsBySymbol","exportAsArr_1","ngModuleSymbols","serializeSummaryWithDeps","ngModuleSymbol","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","allImportAs","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","_analyzeFile","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","enableSummariesForJit","dirSymbol","normalizedUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","loadingPromises","loadFilesSync","emitFlags","ngModuleIndex","typeIndex","dirId","_createTypeCheckBlock","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","arity","getTypeArity","getImportAs","importModule","_fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","importedFilePath","containingFilePath","fileNameToModuleName","stylesheetMetadata","compiledStylesheet","entryRoute","visitLazyRoute","seenRoutes","lazyRoutes","lazyRoutes_2","lazyRoute","lazyRoutes_1","ANGULAR_CORE","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","staticSymbol","findSymbolDeclaration","getResourcePath","containingFile","refSymbol","getSymbolByModule","recordModuleNameForFileName","recordImportAs","findDeclaration","tryFindDeclaration","ignoreErrorsFor","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","decorators","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","lcProperty","injectionToken","opaqueToken","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","PopulatedScope","ResolvedStaticSymbol","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","sourceSymbol","targetSymbol","invalidateFile","symbols_1","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","summarySymbols","metadataSymbols","this_1","moduleExport","export","exportSymbol","symName","resolvedModule","resolveModule","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","createResolvedSymbol","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor","VERSION","commonjsGlobal","window","compiler_1","expression_type","TypeDiagnostic","AstType","diagnostics","callable","reportWarning","normalize","Undefined","Null","Other","nullable","getNonNullableType","leftType","rightType","leftRawKind","getTypeKind","rightRawKind","leftKind","rightKind","operKind","errorAst","Boolean","anyType","getTypeUnion","selectSignature","public","signatures","indexed","argument","undefinedType","targetType","keyType","getArrayType","resolveMethodCall","expType","resolvePropertyRead","_anyType","_undefinedType","isAny","receiverInfo","expression_diagnostics","getTemplateExpressionDiagnostics","ExpressionDiagnosticsVisitor","includeEvent","getExpressionScope","getExpressionDiagnostics","analyzer","getReferences","processReferences","references_1","getDefinitionOf","templateOffset","getVarDeclarations","getTemplateContext","Unbound","refinedVariableType","templateElement","ngForDirective","ngForOfBinding","getElementType","getEventDeclaration","referenceTable","createSymbolTable","variableTable","eventsTable","mergeSymbolTable","diagnoseExpression","attributeValueLocation","directiveSummary","previousDirectiveSummary","typescript_symbols","getSymbolQuery","program","checker","fetchPipes","TypeScriptSymbolQuery","getClassMembers","getClassFromStaticSymbol","getTypeAtLocation","TypeWrapper","getClassMembersFromDeclaration","ClassDeclaration","classDeclaration","getPipesTable","PipesTable","typeCallable","getCallSignatures","signaturesOf","SignatureWrapper","toSymbols","symbolTable","table","own","findClassSymbolInContext","moduleSymbol","getExportsOfModule","isSymbolPrivate","valueDeclaration","isPrivate","getBuiltinTypeFromTs","setParents","AsExpression","TrueKeyword","AnyKeyword","NullKeyword","numeric","NumericLiteral","NoSubstitutionTemplateLiteral","VoidExpression","definitionFromTsSymbol","parentDeclarationOf","InterfaceDeclaration","SourceFile","getContainerOf","getFlags","SymbolFlags","ClassMember","getTypeParameterOf","typeArguments","typeKindOf","TypeFlags","StringLike","StringLiteral","NumberLike","Union","unionType","TypeParameter","getFromSymbolTable","toNumbers","compareNumbers","ModifierFlags","getCombinedModifierFlags","isReferenceType","ObjectFlags","objectFlags","Reference","typeCache","getTsTypeOf","elementType","tsType","nonNullableType","pipesCache","contextType","getTemplateRefContextType","SymbolWrapper","symbols$$2","MapSymbolTable","addAll","DeclaredSymbol","symbolTables","symbolTables_1","getSpanAt","getTypeOfSymbolAtLocation","constructorDeclaration","type_1","typeReference","getTypeWrapper","getSymbol","SymbolTableWrapper","getProperties","Alias","getAliasedSymbol","_members","Interface","getDeclaredTypeOfSymbol","typeWrapper","_tsType","getParameters","getReturnType","SignatureResultOverride","resultType","toSymbolTable","tsNumbers","symbols_2","symbols_3","_values","previous","symbols_4","PipeSymbol","EmptyTable","parameterType","findClassSymbol","findTransformMethodType","classType","getProperty","isModuleMetadata","isClassMetadata","isInterfaceMetadata","isMemberMetadata","isMethodMetadata","isConstructorMetadata","isFunctionMetadata","isMetadataSymbolicExpression","isMetadataSymbolicBinaryExpression","isMetadataSymbolicIndexExpression","isMetadataSymbolicCallExpression","isMetadataSymbolicPrefixExpression","isMetadataSymbolicIfExpression","isMetadataGlobalReferenceExpression","isMetadataSymbolicReferenceExpression","isMetadataModuleReferenceExpression","default","isMetadataImportedSymbolReferenceExpression","isMetadataImportDefaultReference","isMetadataSymbolicSelectExpression","isMetadataSymbolicSpreadExpression","isMetadataError","METADATA_VERSION","evaluator","isMethodCallOf","callExpression","PropertyAccessExpression","propertyAccessExpression","isCallOf","ident","everyNodeChild","getSourceFileOfNode","errorSymbol","getLineAndCharacterOfPosition","isPropertyAssignment","PropertyAssignment","arrayOrEmpty","spreadElementSyntaxKind","SpreadElement","SpreadElementExpression","Evaluator","nodeMap","recordExport","nameOf","evaluateNode","received","getText","isFoldable","isFoldableWorker","folding","ObjectLiteralExpression","propertyAssignment","initializer","ArrayLiteralExpression","CallExpression","arrayNode","arrayValue","FalseKeyword","TemplateHead","TemplateMiddle","TemplateTail","ParenthesizedExpression","parenthesizedExpression","BinaryExpression","binaryExpression","operatorToken","PlusToken","MinusToken","AsteriskToken","SlashToken","PercentToken","AmpersandAmpersandToken","BarBarToken","ElementAccessExpression","elementAccessExpression","argumentExpression","TemplateExpression","templateSpans","preferReference","recordEntry","substituteExpression","newEntry","isFoldableError","verboseInvalidExpression","resolveName","obj_1","quoted_1","ShorthandPropertyAssignment","assignment","propertyValue","quotedNames","arr_1","spreadValue","firstArgument","ArrowFunction","arrowFunction","NewExpression","newExpression","newArgs","newTarget","expression_1","expression_2","TypeReference","typeReferenceNode","typeNameNode_1","QualifiedName","qualifiedName","left_1","identifier_1","args_1","UnionType","UndefinedKeyword","StringKeyword","NumberKeyword","BooleanKeyword","arrayTypeNode","TypeAssertionExpression","typeAssertion","PrefixUnaryExpression","prefixUnaryExpression","TildeToken","ExclamationToken","operatorText","AmpersandToken","BarToken","CaretToken","EqualsEqualsToken","ExclamationEqualsToken","EqualsEqualsEqualsToken","ExclamationEqualsEqualsToken","LessThanToken","GreaterThanToken","LessThanEqualsToken","GreaterThanEqualsToken","LessThanLessThanToken","GreaterThanGreaterThanToken","GreaterThanGreaterThanGreaterThanToken","ConditionalExpression","conditionalExpression","thenExpression","whenTrue","elseExpression","whenFalse","FunctionExpression","TaggedTemplateExpression","templateExpression","head","asExpression","ClassExpression","createNodeArray","symbols$2","populateBuiltins","Symbols","defineReference","_symbols","buildImports","stripQuotes","ImportEqualsDeclaration","importEqualsDeclaration","moduleReference","ExternalModuleReference","externalReference","from_1","ImportDeclaration","importDecl","importClause","moduleSpecifier","namedBindings","NamedImports","NamespaceImport","validateMetadata","validateExpression","locals","validateFunction","indexExpression","prefixExpression","selectExpression","spreadExpression","ifExpression","validateMember","classData","parameterDecorators","validateClass","staticMember","functionDeclaration","oldLocals","shouldReportNode","nodeStart","lineInfo","namesOf","addNamesOf","bindingPattern","name_11","parameters_2","isStatic","Static","MetadataCollector","getMetadata","objFromDecorator","decoratorNode","evaluator$$1","errorSym","maybeGetSimpleFunction","nameNode","functionName","functionBody","statement","returnStatement","func","classMetadataOf","getDecorators","decorator","referenceFrom","recordMember","recordStaticMember","heritageClauses","hc","ExtendsKeyword","extends","typeParameters","isConstructor","Constructor","MethodDeclaration","maybeFunc","methodDecorators","parameterDecoratorData","parametersData","hasDecoratorData","hasParameterData","parameterData","PropertyDeclaration","GetAccessor","SetAccessor","propertyDecorators","composedSubstituter","evaluatorOptions","exportMap","ExportDeclaration","exportDeclaration","exportClause","exportedAs","isExport","isDeclarationFile","Export","isExportedIdentifier","isExported","exportedIdentifierName","exportedName","interfaceDeclaration","interfaceName","FunctionDeclaration","propNode","name_4","TypeAliasDeclaration","typeDeclaration","name_5","name_6","name_7","EnumDeclaration","enumDeclaration","enumValueHolder","enumName","nextDefaultValue","writtenMembers","enumValue","name_8","VariableStatement","variableStatement","declarationList","variableDeclaration","exported","name_9","report_1","name_10","BindingElement","ObjectBindingPattern","ArrayBindingPattern","bundler","importName","normalPath","getRootExport","reexportedAs","getSymbolDeclaration","PRIVATE_NAME_CHARS","MetadataBundler","symbolMap","rootModule","basename","getMetadataBundle","exportedSymbols","exportAll","canonicalizeSymbols","getEntries","privates","referenced","privateName","origins","getReExports","fullModuleName","exportedSymbol","symbolOf","exportFrom","exportItem","exportedSymbols_1","exportedSymbols_2","canonicalizeSymbol","rootExport","canonicalSymbol","newPrivateName","digits","exportedNames","convertSymbol","symbolsMap","declaredName","reference_1","exportAlls","exportedSymbols_3","module_2","module_3","convertEntry","convertClass","convertFunction","convertValue","convertExpression","convertMembers","convertStatics","convertMember","convertError","object","convertReference","convertExpressionNode","createReference","canonicalSymbolOf","referencedName","symbolKey","CompilerHostAdapter","ScriptTarget","Latest","index_writer","privateEntriesToIndex","INDEX_HEADER","privates_1","compareEntries","compare","compareModules","orderedExports","orderedExports_1","select","ak","bk","bundle_index_host","createSyntheticIndexHost","syntheticIndex","normalSyntheticIndexName","indexContent","indexMetadata","newHost","fileExists","readFile","languageVersion","createSourceFile","writeFile","writeByteOrderMark","sourceFiles","DTS","metadataName","writeFileSync","createBundleIndexHost","ngOptions","indexModule","bundler$$1","flatModuleId","metadataBundle","flatModuleOutFile","JS_EXT","libraryIndex","indexName","__export","api","isTsDiagnostic","diagnostic","isNgDiagnostic","DEFAULT_ERROR_CODE","UNKNOWN_ERROR_CODE","SOURCE","EmitFlags","util","tsStructureIsReused","structureIsReused","createMessageDiagnostic","isInRootDir","rootDir","pathStartsWithPrefix","relativeToRootDirs","rootDirs","rel","fullPath","relative","ngToTsDiagnostic","ng","GENERATED_FILES","metadata_reader","createMetadataReaderCache","readMetadata","metadatas","readMetadataFile","upgradeMetadataWithDtsData","getSourceFileMetadata","cacheMetadata","dtsFilePath","metadataPath","metadataOrMetadatas","maxMetadata","oldMetadata","newMetadata","dtsMetadata","language_services","language_services_10","language_services_11","language_services_12","language_services_13","language_services_14","language_services_15","__window$1","__self$1","WorkerGlobalScope","__global$1","_root","root_1","isFunction_2","isFunction_1","isArray_1","isObject_2","errorObject_1","tryCatch_2","tryCatch_1","__extends$2","UnsubscriptionError_2","Subscription","_parents","_subscriptions","_unsubscribe","hasErrors","trial","teardown","_addParent","tmp","subscriptions","subscriptionIndex","Subscription_2","Subscription_1","Symbol","$$rxSubscriber","__extends$1","destinationOrNext","syncErrorValue","syncErrorThrown","isStopped","SafeSubscriber","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","Subscriber_2","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","toSubscriber_2","toSubscriber_1","getSymbolObservable","$$observable","noop_2","pipe_2","pipeFromArray_1","pipe_1","_subscribe","observable$$1","sink","_trySubscribe","PromiseCtor","Rx","reject","operations","toPromise","Observable_2","__extends$4","ScalarObservable","dispatch","ScalarObservable_2","ScalarObservable_1","__extends$5","EmptyObservable","EmptyObservable_2","EmptyObservable_1","isScheduler_2","__extends$3","ArrayObservable_2","isArrayLike_1","isPromise_2","symbolIteratorPonyfill","root$$2","Set_1","Map_1","$$iterator","__extends$7","notifyNext","notifyError","notifyComplete","InnerSubscriber_2","subscribeToResult_2","subscribeToResult_1","__extends$8","OuterSubscriber","innerValue","innerIndex","innerSub","OuterSubscriber_2","OuterSubscriber_1","__extends$6","mergeMap_2","observer","MergeMapSubscriber","MergeMapOperator_1","hasCompleted","active","_tryNext","_innerSub","ish","_notifyResultSelector","shift","MergeMapSubscriber_1","identity_2","mergeAll_2","merge_2$2","mergeStatic_1","mergeStatic","merge_2$1","merge_4","merge_3","merge_2","__extends$11","ObjectUnsubscribedError","ObjectUnsubscribedError_2","ObjectUnsubscribedError_1","__extends$12","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscription_2","SubjectSubscription_1","__extends$10","SubjectSubscriber","SubjectSubscriber_1","hasError","thrownError","AnonymousSubject","asObservable","Subject_2","AnonymousSubject_1","__extends$13","refCount_2","RefCountOperator","_refCount","refCounter","RefCountSubscriber$1","connection","connect","RefCountSubscriber","sharedConnection","_connection","__extends$9","ConnectableObservable","_isComplete","getSubject","_subject","ConnectableSubscriber","ConnectableObservable_2","connectableProto","multicast_2","MulticastOperator_1","share_2$2","share_3","ChangeDetectionStrategy$1","Directive$1","NgModule$1","Version$1","VERSION$2","__window","__self","__global","_THROW_IF_NOT_FOUND","_NullInjector","StaticInjector","NULL","GET_PROPERTY_NAME","ɵ2","objWithPropertyToExtract","_records","tokenPath","_findOriginalError","_findContext","errorLogger","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","_ownAnnotations","ownAnnotations","_ownPropMetadata","propDecorators","propDecorators_1","propMetadata_1","ownPropMetadata","setter","importUri","resourceUri","resolveIdentifier","resolveEnum","enumIdentifier","Reflector","reflectionCapabilities","updateCapabilities","caps","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_constructionCounter","keyIds","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","_new","_getMaxNumberOfObjects","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","APP_INITIALIZER","ApplicationInitStatus","appInits","donePromise","rej","runInitializers","asyncInitPromises","initResult","APP_ID","APP_ID_RANDOM_PROVIDER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","Console","log","Compiler","CompilerFactory","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryBoundToModule","wtfEnabled","wtf","wtfCreateScope","wtfLeave","EventEmitter","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","completeFn","assertZonePatched","_outer","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","cancelTask","runGuarded","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZoneInjector","exceptionHandler","onDestroy","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","createCompiler","appRef","ApplicationRef","_bootstrapComponents","ngDoBootstrap","listener","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","stableSub","unstableSub","componentOrFactory","compRef","_unloadComponent","nativeElement","_loadComponent","_tickScope","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","Renderer2","_results","toArray","ViewRef","EventListener","EmbeddedViewRef","DebugNode","_debugContext","addChild","listeners","providerTokens","classes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","queryAllNodes","triggerEventHandler","eventObj","wrap","previousValue","currentValue","firstChange","isFirstChange","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","forEachOperation","nextIt","nextRemove","adjPreviousIndex","currentIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","factories","copied","extend","iterable","KeyValueDiffers","kv","keyValDiff","iterableDiff","_CORE_PLATFORM_PROVIDERS","parentPlatformFactory","ApplicationModule","WeakMap","EMPTY_CONTEXT","ComponentRef_","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","componentNodeIndex","_view","_viewRef","_component","_elDef","changeDetectorRef","_data","attachToViewContainerRef","templateRef","insert","ngModuleRef","contextInjector","viewRef_","viewData","move","detach","_viewContainerRef","_appRef","markForCheck","fs$$1","begin","reattach","vcRef","_parentView","namespaceAndName","createViewRoot","createTemplateAnchor","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","_moduleType","elView","elOrCompView","childDef","logViewDef","logNodeIndex","currRenderNodeIndex","nodeLogger","renderData","DebugRenderer2","whenRenderingDone","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","NgModuleFactory_","_ngModuleDefFactory","onclick","ondblclick","onmousedown","onmouseup","onmouseover","onmousemove","onmouseout","onkeypress","onkeydown","onkeyup","onload","onunload","href","alt","media","nohref","usemap","onfocus","onblur","charset","declare","classid","codebase","codetype","archive","standby","cite","datetime","accept","shape","coords","enctype","onsubmit","onreset","accept-charset","valuetype","longdesc","width","disabled","onselect","accesskey","multiple","onchange","label","selected","checked","maxlength","rows","cols","height","border","frame","rules","cellspacing","cellpadding","datapagesize","align","charoff","valign","abbr","axis","headers","rowspan","colspan","profile","http-equiv","scheme","hreflang","rev","ismap","defer","BIG","STRONG","DFN","CODE","SAMP","KBD","VAR","CITE","ABBR","ACRONYM","SPAN","BDO","BODY","ADDRESS","DIV","MAP","AREA","IMG","OBJECT","PARAM","PRE","BLOCKQUOTE","INS","DEL","DL","DT","DD","FORM","LABEL","INPUT","SELECT","OPTGROUP","OPTION","TEXTAREA","FIELDSET","LEGEND","BUTTON","TABLE","CAPTION","COLGROUP","COL","HEAD","TITLE","BASE","META","NOSCRIPT","SCHEMA","EVENT","BOOLEAN","NUMBER","STRING","typeParts","allKnownElements","typeOf","_instance","noscript","getExpressionScope$$1","key_1","selectorInfo","selector_1","templateBindingResult","valueRelativePosition_1","keyCompletions","equalLocation","directiveMetadata","contextTable","symbolsToCompletions","completions","attributeValuePosition","sym","kindOverride","getTemplates","getDeclarations","getAnalyzedModules","getPipesAt","getTemplateAstAtPosition","getTemplateAt","contextFile","resolvedMetadata","rawHtmlParser","parser","htmlResult","resolvedDirectives","ReflectorModuleModuleResolutionHost","metadataCollector","directoryExists","directoryName","getScriptSnapshot","snapshot","getLength","sf","ReflectorHost","metadataReaderCache","hostAdapter","moduleResolutionCache","createModuleResolutionCache","getCurrentDirectory","modulePath","resolveModuleName","resolvedFileName","DummyHtmlParser","DummyResourceLoader","tsService","_typeCache","modulesOutOfDate","fileVersions","validate","_resolver","moduleResolver","directiveResolver","pipeResolver","resourceLoader","directiveNormalizer","collectError","ensureTemplateMap","templateReferences","getSourceFromNode","getScriptVersion","fileToComponent","getSourceFromType","ensureAnalyzedModules","analyzeHost","programFiles","getSourceFiles","version_1","visit_1","templateSource","visit_2","getDeclarationFromNode","updateAnalyzedModules","_checker","getTypeChecker","_staticSymbolResolver","lastProgram","clearCaches","seen_1","version$$1","collectedErrors","templateReference","getSourceFromDeclaration","queryCache","pipes_1","getTemplateClassDeclFromNode","stringOf","getTemplateClassFromStaticSymbol","_reflectorHost","getScriptFileNames","tsConfigPath","genDir","getCompilationSettings","errorMap","sourceFilePath","reflectorHost","ssr","currentToken","missingTemplate","callTarget","Decorator","getCollectedErrors","defaultSpan","process","argv"],"mappings":"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,cACA,cAUJ,IAAI6hD,uBAAyB,WACzB,QAASA,0BAET,MAAOA,0BAcPC,UAAY,UACZC,SAAW,SACXC,SAAW,SACXC,SAAW,SA2CXC,UACA,iYAEA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC;iwUACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZpvF,yBAA4B,SAAUv8B,QAEtC,QAASu8B,4BACL,GAAIzD,OAAQ94B,OAAOonC,KAAK7xC,OAASA,IAqCjC,OApCAujC,OAAM8yF,WACNR,SAAShv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jpL,OAAQ,EAAG,EAAG,EAAG,IACjBE,QAAS,EAAG,GAAI,GAAI,IACpBgpL,UAAW,EAAG,EAAG,EAAG,GAAI,IACxB9jH,MAAO,IAEP1S,mBAAqB,EAAG,EAAG,EAAG,GA0B9By2H,QACA,iYAGA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC,MAAQ,QACRC,QAAU,UACVC,OAAS,SACTC,OAAS,SACThC,OAAS,SACT30H,kBAAqB,WACrB,QAASA,qBACL,GAAI19B,OAAQvjC,IACZA,MAAK+2H,UACLygE,OAAO3wL,QAAQ,SAAUyvH,aACrB,GAAIt+G,OAAQs+G,YAAY9sH,MAAM,KAC1B60C,WAAarmC,MAAM,GAAGxO,MAAM,KAC5BquL,WAAa7/K,MAAM,GAAK,KAAKxO,MAAM,KACnC26B,SAAW0zJ,UAAU,GACrBxxL,OACJ89B,UAAS36B,MAAM,KAAK3C,QAAQ,SAAU+Y,KAAO,MAAO2jB,OAAMwzF,OAAOn3G,IAAInS,eAAiBpH,MACtF,IAAIqwH,WAAYmhE,UAAU,GACtBlhE,UAAYD,WAAanzF,MAAMwzF,OAAOL,UAAUjpH,cACpD,IAAIkpH,UACA,IAAK,GAAI1iH,OAAO0iH,WACZtwH,KAAK4N,KAAO0iH,UAAU1iH,IAG9BoqC,YAAWx3C,QAAQ,SAAU+vH,UACT,IAAZA,WAEKA,SAASt4G,WAAW,KACzBjY,KAAKuwH,SAASzwH,UAAU,IAAMsxL,MAEzB7gE,SAASt4G,WAAW,KACzBjY,KAAKuwH,SAASzwH,UAAU,IAAMuxL,QAEzB9gE,SAASt4G,WAAW,KACzBjY,KAAKuwH,SAASzwH,UAAU,IAAMwxL,OAEzB/gE,SAASt4G,WAAW,KACzBjY,KAAKuwH,SAASzwH,UAAU,IAAMyvL,OAG9BvvL,KAAKuwH,UAAYghE,YA4BjC,MAvBA32H,mBAAkBtgE,UAAUm3L,iBAAmB,WAAc,MAAOl4L,QAAOo3B,KAAKh3B,KAAK+2H,SACrF91D,kBAAkBtgE,UAAUugE,SAAW,SAAU70D,aAC7C,GAAIijJ,aAActvJ,KAAK+2H,OAAO1qH,YAAYoB,kBAC1C,OAAO7N,QAAOo3B,KAAKs4H,aAAatsI,OAAO,SAAU4zG,UAAY,MAAO04B,aAAY14B,YAAc6gE,SAElGx2H,kBAAkBtgE,UAAUygE,aAAe,SAAU/0D,aACjD,GAAIijJ,aAActvJ,KAAK+2H,OAAO1qH,YAAYoB,kBAC1C,OAAO7N,QAAOo3B,KAAKs4H,aAAatsI,OAAO,SAAU4zG,UAAY,MAAO04B,aAAY14B,YAAc6gE,SAElGx2H,kBAAkBtgE,UAAUo3L,OAAS,SAAU1rL,YAAauqH,UACxD,OAAQ52H,KAAK+2H,OAAO1qH,YAAYoB,oBAAsBmpH,WAE1Dh3H,OAAOwgB,eAAe6gD,kBAAmB,YACrC1gD,IAAK,WACD,GAAI5gB,QAASshE,kBAAkB+2H,SAI/B,OAHKr4L,UACDA,OAASshE,kBAAkB+2H,UAAY,GAAI/2H,oBAExCthE,QAEX2gB,YAAY,EACZD,cAAc,IAEX4gD,qBAiBPqD,oBACAoyC,MAAM,EACNlP,QAAQ,EACRywF,UAAU,EACVtzK,MAAM,EACNyC,MAAM,EACNqgF,OAAO,EACP8zD,MAAM,EACNx1D,MAAM,GA4NN9hC,kBAAqB,SAAUx5D,QAE/B,QAASw5D,mBAAkBxF,KAAMl0D,SAAUgD,KAAM2qL,uBAC7C,GAAI30J,OAAQ94B,OAAOonC,KAAK7xC,OAASA,IAKjC,OAJAujC,OAAMk7B,KAAOA,KACbl7B,MAAMh5B,SAAWA,SACjBg5B,MAAMh2B,KAAOA,KACbg2B,MAAMimH,mBAAqB0uC,uBAAyB,WAAe,MAAOz5H,MAAK/P,SAASsQ,SACjFz7B,MA2GX,MAlHAljC,WAAU4jE,kBAAmBx5D,QAS7Bw5D,kBAAkBtjE,UAAU8lE,uBAAyB,SAAU7/D,KAC3D5G,KAAKiiE,0BAA0Br7D,IAAIpD,QAEvCygE,kBAAkBtjE,UAAU0lE,qBAAuB,SAAUz/D,KACzD5G,KAAKiiE,0BAA0Br7D,IAAIpD,QAEvCygE,kBAAkBtjE,UAAUulE,WAAa,SAAUt/D,KAAO5G,KAAKiiE,0BAA0Br7D,IAAIu/D,UAC7FlC,kBAAkBtjE,UAAU4+D,aAAe,SAAU34D,KACjD,GAAI28B,OAAQvjC,IACZ,IAAIA,KAAKuN,MAAQixD,aAAax+D,KAAKy+D,OAASz+D,KAAKuN,KAAK3O,KAAK0f,WAxPxC,KAwP0E,CAIzF,GAAI65K,OAAQn4L,KAAKuN,KAAK3O,KAAKkmC,OA5PZ,IA4PwC7iC,QAEnDm2L,aAAe55H,aAAax+D,KAAKy+D,MACjCp0C,UAAY+tK,aAAa/tK,UACzBguK,WAAahuK,UAAUrH,OAAO,SAAUhe,GAAK,MAAOA,GAAEsI,MAAMikB,KAAK,SAAUhkB,KAAMxC,GAAK,MAAOA,GAAI,GAAK,GAAKwC,MAAQ4qL,UAAc,GACjIG,sBAAwBt4L,KAAKy+D,KAAK73B,iBAAiBgvD,sBAAsBuiG,MAAOn4L,KAAKuN,KAAK/J,MAAO,KAErG,KAAKxD,KAAKuN,KAAKy0D,UACX,MACJ,IAAIu2H,yBAA0Bv4L,KAAKuK,SAAWvK,KAAKuN,KAAKy0D,UAAUj4D,MAAME,OAAS,EAC7EohD,SAAWitI,sBAAsB1jG,iBACjCnpC,QAAUJ,SAAS3sC,KAAK,SAAU+sC,SAAW,MAAOsS,QAAOw6H,wBAAyB9sI,QAAQ9gD,MAAsB,MAClH0gD,SAAS3sC,KAAK,SAAU+sC,SAAW,MAAOsS,QAAOw6H,wBAAyB9sI,QAAQ9gD,QAClF6tL,eAAiB,WACjB,GAAIxhK,QACJ,IAAIqhK,WAAY,CAEZrhK,KADgBqhK,WAAW/qL,MAAM0V,OAAO,SAAUvC,EAAG1V,GAAK,MAAOA,GAAI,GAAK,IACzDiY,OAAO,SAAUpkB,MAAQ,MAAOA,MAAK0f,WAAW65K,QAAUv5L,MAAQu5L,QAC9El4L,IAAI,SAAUrB,MAAQ,MAAOumE,WAAUvmE,KAAKkmC,OAAOqzJ,MAAMl2L,WAElE+0B,KAAKjwB,KAAK,OACVw8B,MAAM5jC,OAASq3B,KAAK/2B,IAAI,SAAUgU,KAAO,OAAUsB,KAAM,MAAO3W,KAAMqV,IAAKkgB,KAAMlgB,OAErF,KAAKw3C,SAAYA,QAAQx3C,KAAOkkL,QAAU1sI,QAAQ92C,WAG9C6jL,qBAEC,IAAI/sI,QAAQ6oC,SAAU,CACvB,GAAImkG,eAAgBz4L,KAAKuN,KAAK/J,MAAMJ,QAAQ,IAE5C,IADApD,KAAKL,UACD84L,eAAiB,GAAKF,yBAA2BE,cAAe,CAGhE,GAAIC,mBAAoBN,aAAan4L,IAAIsgB,IAAI83K,WAC7C,IAAIK,kBAAmB,CACnB,GAAIC,cAAe34L,KAAKy+D,KAAK/P,SAAS9kC,MAAMqgI,mBAAmByuC,kBAAkBryL,KAAKiB,UAClFqxL,gBACA34L,KAAKL,OAASK,KAAK44L,qBAAqBD,aAAaz2L,gBAIxDupD,SAAQx3C,KAAOskL,yBAA4B9sI,QAAQx3C,IAAIhS,OAASk2L,MAAMl2L,QAC3Eu2L,qBAMJ,IAAK/sI,QAAQ92C,YAAcopD,OAAOw6H,wBAAyB9sI,QAAQ92C,WAAW/N,IAAI+D,OAC7E8gD,QAAQx3C,KACLskL,wBAA0B9sI,QAAQ9gD,KAAKZ,OAAS0hD,QAAQx3C,IAAIhS,OAASk2L,MAAMl2L,UAC9EwpD,QAAQx3C,IAAK,CACd,GAAItJ,MAAO,GAAIgoF,WAAU,EAAG3yF,KAAKuN,KAAK/J,MAAMvB,OAC5CjC,MAAKiiE,0BAA0BxW,QAAQ92C,WAAa82C,QAAQ92C,WAAW/N,IACnE,GAAIusF,cAAaxoF,KAAM,GAAIqoF,kBAAiBroF,MAAO,IAAK4tL,6BAG5DC,oBAKhBv0H,kBAAkBtjE,UAAU4lE,eAAiB,SAAU3/D,KACnD,GAAI4/D,oBAAqBxmE,KAAKuK,SAAW3D,IAAIoD,WAAWD,MAAME,MAC9D,IAAI8zD,OAAOyI,mBAAoB5/D,IAAIpD,MAAMmH,MAAO,CAC5C,GAAIkuL,aAAc/4H,yBAAyB9/D,KAAKwpJ,qBAAsB5iJ,IAAIpD,MAAOgjE,mBAAoBxmE,KAAKy+D,KAAK/P,SAAS9kC,MACpHivK,eACA74L,KAAKL,OAASK,KAAK44L,qBAAqBC,gBAIpD50H,kBAAkBtjE,UAAUshE,0BAA4B,SAAUz+D,MAAO+G,UACrE,GAAIk0B,SAAUqhC,yBAAyB9/D,KAAKwpJ,qBAAsBhmJ,MAAmB,MAAZ+G,SAAmBvK,KAAK84L,uBAAyBvuL,SAAUvK,KAAKy+D,KAAK/P,SAAS9kC,MACnJ6U,WACAz+B,KAAKL,OAASK,KAAK44L,qBAAqBn6J,WAGhDwlC,kBAAkBtjE,UAAUi4L,qBAAuB,SAAUn6J,SACzD,MAAOA,SAAQzb,OAAO,SAAUhe,GAAK,OAAQA,EAAEpG,KAAK0f,WAAW,OAAStZ,EAAEqjJ,SACrEpoJ,IAAI,SAAU8+B,QAAU,OAAUxpB,KAAMwpB,OAAOxpB,KAAM3W,KAAMmgC,OAAOngC,KAAMu1B,KAAM4K,OAAOngC,SAE9FgB,OAAOwgB,eAAe6jD,kBAAkBtjE,UAAW,0BAC/C4f,IAAK,WACD,MAAIvgB,MAAKuN,MAAQvN,KAAKuN,KAAKy0D,UAChBhiE,KAAKuK,SAAWvK,KAAKuN,KAAKy0D,UAAUj4D,MAAME,OAAS,EAEvD,GAEXqW,YAAY,EACZD,cAAc,IAEX4jD,mBACT8U,qBAwBEjU,aAAe,0BAsNfiB,mBAAsB,WACtB,QAASA,oBAAmBgzH,IAAKC,cAC7Bh5L,KAAK+4L,IAAMA,IACX/4L,KAAKuV,KAAOyjL,aA8ChB,MA5CAp5L,QAAOwgB,eAAe2lD,mBAAmBplE,UAAW,QAChD4f,IAAK,WAAc,MAAOvgB,MAAK+4L,IAAIn6L,MACnC0hB,YAAY,EACZD,cAAc,IAElBzgB,OAAOwgB,eAAe2lD,mBAAmBplE,UAAW,YAChD4f,IAAK,WAAc,MAAOvgB,MAAK+4L,IAAI3wH,UACnC9nD,YAAY,EACZD,cAAc,IAElBzgB,OAAOwgB,eAAe2lD,mBAAmBplE,UAAW,QAChD4f,IAAK,WAAc,MAAOvgB,MAAK+4L,IAAI1yL,MACnCia,YAAY,EACZD,cAAc,IAElBzgB,OAAOwgB,eAAe2lD,mBAAmBplE,UAAW,aAChD4f,IAAK,WAAc,MAAOvgB,MAAK+4L,IAAI1wH,WACnC/nD,YAAY,EACZD,cAAc,IAElBzgB,OAAOwgB,eAAe2lD,mBAAmBplE,UAAW,UAChD4f,IAAK,WAAc,MAAOvgB,MAAK+4L,IAAI1wC,QACnC/nI,YAAY,EACZD,cAAc,IAElBzgB,OAAOwgB,eAAe2lD,mBAAmBplE,UAAW,YAChD4f,IAAK,WAAc,MAAOvgB,MAAK+4L,IAAI/xC,UACnC1mI,YAAY,EACZD,cAAc,IAElBzgB,OAAOwgB,eAAe2lD,mBAAmBplE,UAAW,YAChD4f,IAAK,WAAc,MAAOvgB,MAAK+4L,IAAIzxC,UACnChnI,YAAY,EACZD,cAAc,IAElBzgB,OAAOwgB,eAAe2lD,mBAAmBplE,UAAW,cAChD4f,IAAK,WAAc,MAAOvgB,MAAK+4L,IAAI7xH,YACnC5mD,YAAY,EACZD,cAAc,IAElB0lD,mBAAmBplE,UAAUq+D,QAAU,WAAc,MAAOh/D,MAAK+4L,IAAI/5H,WACrE+G,mBAAmBplE,UAAU2nJ,WAAa,WAAc,MAAOtoJ,MAAK+4L,IAAIzwC,cACxEviF,mBAAmBplE,UAAUynJ,gBAAkB,SAAU1pH,OAAS,MAAO1+B,MAAK+4L,IAAI3wC,gBAAgB1pH,QAClGqnC,mBAAmBplE,UAAU4nJ,QAAU,SAAUC,UAAY,MAAOxoJ,MAAK+4L,IAAIxwC,QAAQC,WAC9EziF,sBAyIPwC,oBAAuB,WACvB,QAASA,qBAAoBjnC,MACzBthC,KAAKshC,KAAOA,KA8GhB,MA5GA1hC,QAAOwgB,eAAemoD,oBAAoB5nE,UAAW,oBACjD4f,IAAK,WAAc,MAAOvgB,MAAKshC,KAAK31B,UACpC2U,YAAY,EACZD,cAAc,IAElBkoD,oBAAoB5nE,UAAU2pE,sBAAwB,WAAc,MAAOtqE,MAAKshC,KAAKgpC,yBACrF/B,oBAAoB5nE,UAAUiwE,eAAiB,SAAUjvD,UACrD,GAAI0lD,YACArC,UAAYhlE,KAAKshC,KAAK23J,aAAat3K,SACnCqjD,YAAaA,UAAU/iE,QACvBolE,QAAQtgE,KAAKhH,MAAMsnE,QAASF,uBAAuBxlD,SAAU3hB,KAAMglE,WAEvE,IAAI4C,cAAe5nE,KAAKshC,KAAK43J,gBAAgBv3K,SAC7C,IAAIimD,cAAgBA,aAAa3lE,OAAQ,CACrC,GAAIg9B,SAAUj/B,KAAKshC,KAAK63J,oBACxB9xH,SAAQtgE,KAAKhH,MAAMsnE,QAASM,0BAA0BC,aAAc3oC,UAExE,MAAOwpC,cAAapB,UAExBkB,oBAAoB5nE,UAAUy4L,WAAa,SAAUz3K,SAAUpX,UAC3D,GAAI+2D,cAAethE,KAAKq5L,yBAAyB13K,SAAUpX,SAC3D,OAAI+2D,cACOA,aAAa9+B,UAI5B+lC,oBAAoB5nE,UAAUyvE,iBAAmB,SAAUzuD,SAAUpX,UACjE,GAAI+2D,cAAethE,KAAKq5L,yBAAyB13K,SAAUpX,SAC3D,IAAI+2D,aACA,MAAOD,wBAAuBC,eAGtCiH,oBAAoB5nE,UAAUmwE,gBAAkB,SAAUnvD,SAAUpX,UAChE,GAAI+2D,cAAethE,KAAKq5L,yBAAyB13K,SAAUpX,SAC3D,IAAI+2D,aACA,MAAO2F,eAAc3F,eAG7BiH,oBAAoB5nE,UAAU4vE,WAAa,SAAU5uD,SAAUpX,UAC3D,GAAI+2D,cAAethE,KAAKq5L,yBAAyB13K,SAAUpX,SAC3D,IAAI+2D,aACA,MAAO4G,UAAS5G,eAGxBiH,oBAAoB5nE,UAAU04L,yBAA2B,SAAU13K,SAAUpX,UACzE,GAAImkD,UAAW1uD,KAAKshC,KAAKg4J,cAAc33K,SAAUpX,SACjD,IAAImkD,SAAU,CACV,GAAI5nD,WAAY9G,KAAKunE,eAAe7Y,SAAU/sC,SAC9C,IAAI7a,WAAaA,UAAUm4D,SAAWn4D,UAAUo4D,aAAep4D,UAAU8hB,WACrE9hB,UAAU0hB,YAAc1hB,UAAU07B,OAAS17B,UAAU8/B,iBACrD,OACIr8B,SAAUA,SACVoX,SAAUA,SACV+sC,SAAUA,SACVuQ,QAASn4D,UAAUm4D,QACnBr2C,UAAW9hB,UAAU8hB,UACrBJ,WAAY1hB,UAAU0hB,WACtBga,MAAO17B,UAAU07B,MACjB08B,YAAap4D,UAAUo4D,YACvBt4B,iBAAkB9/B,UAAU8/B,oBAK5C2hC,oBAAoB5nE,UAAU4mE,eAAiB,SAAU7Y,SAAU6qI,aAC/D,GAAIh2J,OAAQvjC,KACRL,WAASyE,EACb,KACI,GAAIo1L,kBAAmBx5L,KAAKwhC,iBAAiB48E,kCAAkC1vD,SAASroD,MACpF24B,SAAWw6J,kBAAoBA,iBAAiBx6J,QACpD,IAAIA,SAAU,CACV,GAAIy6J,eAAgB,GAAI3zJ,YACpBF,WAAa,GAAIC,gBAAe4zJ,eAChC7yJ,iBAAmB,GAAIC,QAAO,GAAIC,QAClC3xB,OAAS,GAAI+wB,gBACbwzJ,OAAS,GAAIxyJ,gBAAe/xB,OAAQnV,KAAKshC,KAAK31B,SAASkxG,eAAgBj2E,iBAAkB,GAAII,0BAA4BpB,WAAY,SACrI+zJ,WAAa/zJ,WAAWpS,MAAMk7B,SAAS34C,OAAQ,IAAI,GACnD8rB,gBAAkB7hC,KAAKshC,KAAK63J,qBAE5B72J,SAAWT,gBAAgB8B,0BAA0BpjB,IAAImuC,SAASroD,KAKtE,IAJKi8B,WAEDA,SAAWomC,0BAA0B7mC,kBAErCS,SAAU,CACV,GAAIs3J,oBAAqBt3J,SAAS/E,iBAAiB/U,WAAWvoB,IAAI,SAAUK,GAAK,MAAOijC,OAAMjC,KAAK31B,SAASyyG,kCAAkC99G,EAAEgH,aAC5IkhB,WAAaggD,cAAcoxH,oBAAoB35L,IAAI,SAAUK,GAAK,MAAOA,GAAE0+B,SAASi7C,cACpFz3C,MAAQF,SAAS/E,iBAAiBiF,MAAMviC,IAAI,SAAUwe,GAAK,MAAO8kB,OAAMjC,KAAK31B,SAASq2G,sBAAsBvjG,EAAEnX,WAAW2yE,cACzHe,QAAU14C,SAAS04C,QACnBs8B,YAAcoiF,OAAO74D,aAAa84D,WAAY36J,SAAUxW,WAAYga,MAAOw4C,QAC/Er7E,SACIs/D,QAAS06H,WAAW5nK,UACpBmtC,YAAao4C,YAAYp4C,YACzBt2C,UAAWoW,SAAUxW,WAAYA,WAAYga,MAAOA,MACpDh+B,YAAa8yG,YAAYtlF,OAAQ4U,iBAAkBA,iBAAkB5U,WAhBhE5tB,MAqBrB,MAAOkV,GACH,GAAI3O,MAAO+jD,SAAS/jD,IAChB2O,GAAEqI,UAAY43K,cACd5uL,KAAO+jD,SAAS9kC,MAAMumI,UAAU72I,EAAEqrB,KAAMrrB,EAAEsrB,SAAWj6B,MAEzDhL,QAAWqyB,SAAWzc,KAAMiyD,eAAe9iE,MAAOwM,QAASoI,EAAEpI,QAASvG,KAAMA,QAEhF,MAAOhL,aAEJ4oE,uBA8CPsxH,oCAAuC,WACvC,QAASA,qCAAoCv4J,KAAMmsC,YAC/C,GAAIlqC,OAAQvjC,IACZA,MAAKshC,KAAOA,KACZthC,KAAKytE,WAAaA,WAGlBztE,KAAK85L,kBAAoB,GAAIrtB,uBAAuBjV,0BAA0B,IAC1El2H,KAAKy4J,kBACL/5L,KAAK+5L,gBAAkB,SAAUC,eAAiB,MAAOz2J,OAAMjC,KAAKy4J,gBAAgBC,iBAmB5F,MAjBAH,qCAAoCl5L,UAAU+nK,WAAa,SAAU/mJ,UAAY,QAAS3hB,KAAKshC,KAAK24J,kBAAkBt4K,WACtHk4K,oCAAoCl5L,UAAUgoK,SAAW,SAAUhnJ,UAC/D,GAAIu4K,UAAWl6L,KAAKshC,KAAK24J,kBAAkBt4K,SAC3C,IAAIu4K,SACA,MAAOA,UAAS/kC,QAAQ,EAAG+kC,SAASC,cAK5CN,oCAAoCl5L,UAAUirK,sBAAwB,SAAUjqJ,UAC5E,GAAIy4K,IAAKp6L,KAAKytE,aAAaW,cAAczsD,SACzC,OAAOy4K,IAAKp6L,KAAK85L,kBAAkBp7B,YAAY07B,QAAMh2L,IAEzDy1L,oCAAoCl5L,UAAUkrK,cAAgB,SAAUlqJ,UAEpE,MAAOA,UAASJ,SAAS,UAEtBs4K,uCAEPQ,cAAiB,WACjB,QAASA,eAAc5sH,WAAYqC,YAAa1qC,SAC5CplC,KAAKolC,QAAUA,QACfplC,KAAKs6L,oBAAsB5tB,uBAC3B1sK,KAAKu6L,YAAc,GAAIV,qCAAoC/pH,YAAarC,YACxEztE,KAAKw6L,sBACDp6L,GAAGq6L,4BAA4B3qH,YAAY4qH,sBAAuB,SAAU11L,GAAK,MAAOA,KAiBhG,MAfAq1L,eAAc15L,UAAUygJ,eAAiB,SAAUu5C,YAC/C,MAAOhuB,sBAAqBguB,WAAY36L,KAAKu6L,YAAav6L,KAAKs6L,sBAEnED,cAAc15L,UAAU6gJ,qBAAuB,SAAUrjH,WAAY07G,gBACjE,IAAKA,eAAgB,CACjB,GAAgC,IAA5B17G,WAAW/6B,QAAQ,KACnB,KAAM,IAAIsB,OAAM,2DAGpBm1I,gBAAiB15I,KAAK2F,KAAK9F,KAAKolC,QAAQJ,SAAU,YAEtD,GAAIqW,UAAWj7C,GAAGw6L,kBAAkBz8J,WAAY07G,eAAgB75I,KAAKolC,QAASplC,KAAKu6L,aAC9Er6C,cACL,OAAO7kG,UAAWA,SAASw/I,iBAAmB,MAE3CR,iBAyBPS,gBAAmB,SAAUrwL,QAE7B,QAASqwL,mBACL,MAAkB,QAAXrwL,QAAmBA,OAAO1K,MAAMC,KAAMgC,YAAchC,KAO/D,MATAK,WAAUy6L,gBAAiBrwL,QAI3BqwL,gBAAgBn6L,UAAU6yB,MAAQ,SAAUzd,OAAQjN,IAAKm4F,oBAAqB/qF,qBAG1E,WAF4B,KAAxB+qF,sBAAkCA,qBAAsB,OAChC,KAAxB/qF,sBAAkCA,oBAAsBC,8BACrD,GAAI0b,yBAERipK,iBACTh1J,YAIEi1J,oBAAuB,SAAUtwL,QAEjC,QAASswL,uBACL,MAAkB,QAAXtwL,QAAmBA,OAAO1K,MAAMC,KAAMgC,YAAchC,KAG/D,MALAK,WAAU06L,oBAAqBtwL,QAI/BswL,oBAAoBp6L,UAAU4f,IAAM,SAAUzX,KAAO,MAAO0uE,SAAQtrE,QAAQ,KACrE6uL,qBACT10C,gBASEp9E,sBAAyB,WACzB,QAASA,uBAAsB3nC,KAAM05J,WACjCh7L,KAAKshC,KAAOA,KACZthC,KAAKg7L,UAAYA,UACjBh7L,KAAKq8G,mBAAqB,GAAI92E,mBAC9BvlC,KAAKi7L,cACLj7L,KAAKk7L,kBAAmB,EACxBl7L,KAAKm7L,aAAe,GAAIxyK,KAic5B,MA/bAsgD,uBAAsBtoE,UAAUwoE,QAAU,SAAUJ,SAAW/oE,KAAK+oE,QAAUA,SAC9EnpE,OAAOwgB,eAAe6oD,sBAAsBtoE,UAAW,YAInD4f,IAAK,WACD,GAAIgjB,OAAQvjC,IACZA,MAAKo7L,UACL,IAAIz7L,QAASK,KAAKq7L,SAClB,KAAK17L,OAAQ,CACT,GAAI27L,gBAAiB,GAAIl0J,kBAAiBpnC,KAAKyiB,WAC3C84K,kBAAoB,GAAIl0J,mBAAkBrnC,KAAKyiB,WAC/C+4K,aAAe,GAAIl0J,cAAatnC,KAAKyiB,WACrCskB,sBAAwB,GAAIC,0BAC5By0J,eAAiB,GAAIV,qBACrBz1J,YAAckG,kCACd5F,WAAa,GAAIk1J,iBAGjB3lL,OAAS,GAAI+wB,iBAAiBC,qBAAsBkhB,oBAAoBhhB,SAAUC,QAAQ,IAC1Fo1J,oBAAsB,GAAIh1J,qBAAoB+0J,eAAgBn2J,YAAaM,WAAYzwB,OAC3FxV,QAASK,KAAKq7L,UAAY,GAAIl0J,yBAAwBhyB,OAAQywB,WAAY01J,eAAgBC,kBAAmBC,aAAc,GAAIv5C,oBAAsBl7G,sBAAuB20J,oBAAqB,GAAIze,SAAWj9K,KAAKq8G,mBAAoBr8G,KAAKyiB,UAAW,SAAUhe,MAAO4B,MAAQ,MAAOk9B,OAAMo4J,aAAal3L,MAAO4B,MAAQA,KAAKuB,YAEpU,MAAOjI,SAEX2gB,YAAY,EACZD,cAAc,IAElB4oD,sBAAsBtoE,UAAU2pE,sBAAwB,WAEpD,MADAtqE,MAAK47L,oBACE57L,KAAK67L,wBAEhB5yH,sBAAsBtoE,UAAU24L,cAAgB,SAAU33K,SAAUpX,UAChE,GAAImL,YAAa1V,KAAKouE,cAAczsD,SACpC,IAAIjM,WAAY,CACZ1V,KAAK0D,QAAUgS,WAAWiM,QAC1B,IAAIrC,MAAOtf,KAAKsK,SAASoL,WAAYnL,SACrC,IAAI+U,KACA,MAAOtf,MAAK87L,kBAAkBn6K,SAAU3hB,KAAKshC,KAAKy6J,iBAAiBrmL,WAAWiM,UAAWrC,UAG5F,CACDtf,KAAK47L,mBAEL,IAAI5/G,eAAgBh8E,KAAKg8L,gBAAgBz7K,IAAIoB,SAC7C,IAAIq6D,cACA,MAAOh8E,MAAKi8L,kBAAkBt6K,SAAU3hB,KAAKshC,KAAKy6J,iBAAiBp6K,UAAWq6D,iBAK1F/S,sBAAsBtoE,UAAUw4L,mBAAqB,WAEjD,MADAn5L,MAAKo7L,WACEp7L,KAAKk8L,yBAEhBjzH,sBAAsBtoE,UAAUu7L,sBAAwB,WACpD,GAAIr6J,iBAAkB7hC,KAAK6hC,eAC3B,KAAKA,gBAAiB,CAClB,GAAIs6J,cAAgBj6J,aAAc,SAAUt6B,UAAY,OAAO,IAC3Dw0L,aAAep8L,KAAKorJ,QAAQixC,iBAAiBp8L,IAAI,SAAUm6L,IAAM,MAAOA,IAAGz4K,UAC/EkgB,iBAAkB7hC,KAAK6hC,gBACnBT,iBAAiBg7J,aAAcD,YAAan8L,KAAKuhC,qBAAsBvhC,KAAK2L,UAEpF,MAAOk2B,kBAEXonC,sBAAsBtoE,UAAUs4L,aAAe,SAAUt3K,UACrD,GAAI4hB,OAAQvjC,IAGZ,IAFAA,KAAK47L,qBACe57L,KAAKg8L,gBAAgBz7K,IAAIoB,UAOxC,CACD,GAAI26K,WAAYt8L,KAAKshC,KAAKy6J,iBAAiBp6K,UACvCq7H,YAEAu/C,QAAU,SAAUtgK,OACpB,GAAIugK,gBAAiBj5J,MAAMu4J,kBAAkBn6K,SAAU26K,UAAWrgK,MAC9DugK,gBACAx/C,SAASj2I,KAAKy1L,gBAGdp8L,GAAG+pE,aAAaluC,MAAOsgK,UAG3B7mL,WAAa1V,KAAKouE,cAAczsD,SAKpC,OAJIjM,cACA1V,KAAK0D,QAAUgS,WAAWvV,MAAQuV,WAAWiM,SAC7CvhB,GAAG+pE,aAAaz0D,WAAY6mL,UAEzBv/C,SAAS/6I,OAAS+6I,aAAW54I,GAvBpC,GAAIo4L,gBAAiBx8L,KAAKs5L,cAAc33K,SAAU,EAClD,IAAI66K,eACA,OAAQA,iBAwBpBvzH,sBAAsBtoE,UAAUu4L,gBAAkB,SAAUv3K,UACxD,GAAI4hB,OAAQvjC,KACRL,UACA+V,WAAa1V,KAAKouE,cAAczsD,SACpC,IAAIjM,WAAY,CACZ,GAAI+mL,SAAU,SAAUxgK,OACpB,GAAI6rC,aAAcvkC,MAAMm5J,uBAAuBhnL,WAAYumB,MACvD6rC,aACAnoE,OAAOoH,KAAK+gE,aAGZ1nE,GAAG+pE,aAAaluC,MAAOwgK,SAG/Br8L,IAAG+pE,aAAaz0D,WAAY+mL,SAEhC,MAAO98L,SAEXspE,sBAAsBtoE,UAAUytE,cAAgB,SAAUzsD,UACtD,MAAO3hB,MAAKg7L,UAAUvtH,aAAaW,cAAczsD,WAErDsnD,sBAAsBtoE,UAAUg8L,sBAAwB,WACpD38L,KAAKo7L,WACDp7L,KAAKk7L,mBACLl7L,KAAK6hC,gBAAkB,KACvB7hC,KAAK4uF,WAAa,KAClB5uF,KAAK67L,mBAAqB,KAC1B77L,KAAKg8L,gBAAkB,KACvBh8L,KAAKk8L,wBACLl8L,KAAKk7L,kBAAmB,IAGhCt7L,OAAOwgB,eAAe6oD,sBAAsBtoE,UAAW,WACnD4f,IAAK,WAAc,MAAOvgB,MAAKg7L,UAAUvtH,cACzCntD,YAAY,EACZD,cAAc,IAElBzgB,OAAOwgB,eAAe6oD,sBAAsBtoE,UAAW,WACnD4f,IAAK,WACD,GAAI8qI,SAAUrrJ,KAAK48L,QAInB,OAHKvxC,WACDA,QAAUrrJ,KAAK48L,SAAW58L,KAAKorJ,QAAQyxC,kBAEpCxxC,SAEX/qI,YAAY,EACZD,cAAc,IAElB4oD,sBAAsBtoE,UAAUy6L,SAAW;oDACvC,GAAI73J,OAAQvjC,KACRorJ,QAAUprJ,KAAKorJ,OACnB,IAAIprJ,KAAK88L,uBAAyB98L,KAAK+8L,aAAe3xC,QAAS,CAE3D,GAAIjM,gBAAiB,SAAUx9H,UAC3B,MAAO4hB,OAAMu5J,sBAAsB39C,eAAex9H,UAEtD3hB,MAAKg9L,aAEL,KAAK,GADDC,QAAS,GAAIj5K,KACRjiB,GAAK,EAAGqX,GAAKpZ,KAAKorJ,QAAQixC,iBAAkBt6L,GAAKqX,GAAGnX,OAAQF,KAAM,CACvE,GAAI2T,YAAa0D,GAAGrX,IAChB4f,SAAWjM,WAAWiM,QAC1Bs7K,QAAO9gK,IAAIxa,SACX,IAAIu7K,YAAal9L,KAAKshC,KAAKy6J,iBAAiBp6K,SAExCu7K,aADcl9L,KAAKm7L,aAAa56K,IAAIoB,YAEpC3hB,KAAKm7L,aAAa36K,IAAImB,SAAUu7K,YAChC/9C,eAAex9H,WAIvB,GAAIm8H,SAAUn6I,MAAMogB,KAAK/jB,KAAKm7L,aAAankK,QAAQhU,OAAO,SAAU/I,GAAK,OAAQgjL,OAAOlpK,IAAI9Z,IAC5F6jI,SAAQj3I,QAAQ,SAAUoT,GAAK,MAAOspB,OAAM43J,aAAa/+J,OAAOniB,KAChE6jI,QAAQj3I,QAAQs4I,gBAChBn/I,KAAK+8L,YAAc3xC,UAG3BniF,sBAAsBtoE,UAAUq8L,YAAc,WAC1Ch9L,KAAK48L,SAAW,KAChB58L,KAAKi7L,cACLj7L,KAAKq7L,UAAY,KACjBr7L,KAAKm9L,gBAAkB,KACvBn9L,KAAKk7L,kBAAmB,GAE5BjyH,sBAAsBtoE,UAAUi7L,kBAAoB,WAChD,IAAK57L,KAAKg8L,kBAAoBh8L,KAAK67L,mBAAoB,CAKnD,IAAK,GAJDG,iBAAkB,GAAIrzK,KACtBy0K,qBACAtsD,gBAAkB9wI,KAAKm5L,qBACvB7zJ,YAAckG,kCACTzpC,GAAK,EAAGqX,GAAK03H,gBAAgBzuG,UAAWtgC,GAAKqX,GAAGnX,OAAQF,KAE7D,IAAK,GADD6mE,UAAWxvD,GAAGrX,IACTwX,GAAK,EAAGQ,GAAK6uD,SAAS9kC,mBAAoBvqB,GAAKQ,GAAG9X,OAAQsX,KAAM,CACrE,GAAIqP,WAAY7O,GAAGR,IACfylB,SAAWh/B,KAAK2L,SAASyyG,kCAAkCx1F,UAAUthB,WAAW03B,QACpF,IAAIA,SAASlW,aAAekW,SAAS0vB,UAAY1vB,SAAS0vB,SAASuZ,YAAa,CAC5E,GAAInB,cAAexhC,YAAYp5B,QAAQlM,KAAKyiB,UAAU+7F,mBAAmB51F,UAAUthB,WAAY03B,SAAS0vB,SAASuZ,YACjH+zH,iBAAgBx7K,IAAIsmD,aAAcl+C,UAAUthB,WAC5C81L,kBAAkBr2L,KAAK+/D,eAInC9mE,KAAKg8L,gBAAkBA,gBACvBh8L,KAAK67L,mBAAqBuB,oBAGlCn0H,sBAAsBtoE,UAAU08L,yBAA2B,SAAU17K,SAAUu7K,WAAYnnL,OAAQpL,KAAMtE,KAAMyhE,YAAaxoD,KAAM5J,YAC9H,GAAI4nL,gBAAal5L,GACby3C,EAAI77C,IACR,IAAI8nE,YACA,OACIgqC,QAASorF,WACTnnL,OAAQA,OACRpL,KAAMA,KACNtE,KAAMA,KACN24D,cACI,MAAOstG,sBAAqBzwH,EAAEuvG,QAASvvG,EAAEwvG,QAAS31I,WAAYoyD,cAElEl+C,YACI,IAAK0zK,WAAY,CACb,GAAIC,SAAU1hJ,EAAEktB,QAAQqwH,WAAWz3K,SAAUrC,KAAKoqD,WAClD4zH,YAAa9wB,qBAAqB3wH,EAAEuvG,QAASvvG,EAAEwvG,QAAS31I,WAAY,WAAc,MAAO62J,sBAAqB72J,WAAYmmC,EAAEuvG,QAASvvG,EAAEwvG,QAASkyC,WAEpJ,MAAOD,eAKvBr0H,sBAAsBtoE,UAAUm7L,kBAAoB,SAAUn6K,SAAUu7K,WAAY59K,MAGhF,OAAQA,KAAK/J,MACT,IAAKnV,IAAG6pE,WAAWsjF,8BACnB,IAAKntJ,IAAG6pE,WAAWqkF,cACf,GAAIl1I,IAAKpZ,KAAKw9L,6BAA6Bl+K,MAAOwoD,YAAc1uD,GAAG,EAAgBA,IAAG,EACtF,IAAI0uD,aAAeA,YAAYlpE,KAAM,CACjC,GAAI8W,YAAa1V,KAAKouE,cAAczsD,SACpC,OAAO3hB,MAAKq9L,yBAAyB17K,SAAUu7K,WAAYl9L,KAAKy9L,SAASn+K,OAAS,GAAIsqD,OAAOH,SAASnqD,OAAQtf,KAAKyiB,UAAUue,gBAAgBtrB,WAAWiM,SAAUmmD,YAAYlpE,KAAK2R,MAAOu3D,YAAaxoD,KAAM5J,eAM7NuzD,sBAAsBtoE,UAAUs7L,kBAAoB,SAAUt6K,SAAUu7K,WAAY72L,MAChF,GAAI1G,YAASyE,GACT0jE,YAAc9nE,KAAK09L,iCAAiCr3L,KACxD,IAAIyhE,YAAa,CACb,GAAIoyH,UAAWl6L,KAAKshC,KAAK24J,kBAAkBt4K,SAC3C,IAAIu4K,SAAU,CACV,GAAInkL,QAASmkL,SAAS/kC,QAAQ,EAAG+kC,SAASC,YAC1Cx6L,QAASK,KAAKq9L,yBAAyB17K,SAAUu7K,WAAYnnL,QAAUhM,MAAO,EAAGG,IAAK6L,OAAO9T,QAAUoE,KAAMyhE,YAAaA,YAAaA,YAAYsG,kBAG3J,MAAOzuE,SAEXC,OAAOwgB,eAAe6oD,sBAAsBtoE,UAAW,iBACnD4f,IAAK,WACD,GAAIgjB,OAAQvjC,KACRL,OAASK,KAAK29L,cAClB,KAAKh+L,OAAQ,CACJK,KAAK0D,UAEN1D,KAAK0D,QAAU1D,KAAKshC,KAAKs8J,qBAAqB,GAMlD,IAAI7nL,QAAS/V,KAAKg7L,UAAUvtH,aAAaW,cAAcpuE,KAAK0D,QAC5D,KAAKqS,OACD,KAAM,IAAIrR,OAAM,iDAEpB,IAAIm5L,cAAez0H,aAAarzD,OAAO4L,UACnCqjB,SAAW7kC,KAAKkpE,QAAQw0H,cAAgB79L,KAAK0D,SAC7C0hC,SAAYJ,SAAUA,SAAU84J,OAAQ94J,UACxCw8I,gBAAkBxhL,KAAKshC,KAAKy8J,wBAC5Bvc,kBAAmBA,gBAAgB51K,UACnCw5B,QAAQx5B,QAAU41K,gBAAgB51K,SAEtCjM,OAASK,KAAK29L,eACV,GAAItD,eAAc,WAAc,MAAO92J,OAAMy3J,UAAUvtH,cAAiBztE,KAAKshC,KAAM8D,SAE3F,MAAOzlC,SAEX2gB,YAAY,EACZD,cAAc,IAElB4oD,sBAAsBtoE,UAAUg7L,aAAe,SAAUl3L,MAAOmD,UAC5D,GAAIA,SAAU,CACV,GAAIo2L,UAAWh+L,KAAKm9L,eACfa,WAAah+L,KAAKm9L,kBACnBa,SAAWh+L,KAAKm9L,gBAAkB,GAAIx0K,KAE1C,IAAIqJ,QAASgsK,SAASz9K,IAAI3Y,SACrBoqB,UACDA,UACAhyB,KAAKm9L,gBAAgB38K,IAAI5Y,SAAUoqB,SAEvCA,OAAOjrB,KAAKtC,SAGpB7E,OAAOwgB,eAAe6oD,sBAAsBtoE,UAAW,wBACnD4f,IAAK,WACD,GAAIgjB,OAAQvjC,KACRL,OAASK,KAAK88L,qBAUlB,OATKn9L,UACDK,KAAKk8G,iBAAmB,GAAI12E,qBACxB8rG,YAAa,SAAU1pI,UAAY,MAAO,OAC1Cs6B,aAAc,SAAU+7J,gBAAkB,OAAO,GACjD9sD,kBAAmB,SAAU8sD,gBAAkB,MAAOA,iBACtD3rD,oBAAqB,SAAU1qI,UAAY,MAAOA,YACnD5H,KAAKq8G,oBACR18G,OAASK,KAAK88L,sBAAwB,GAAIr3J,sBAAqBzlC,KAAKk+L,cAAel+L,KAAKq8G,mBAAoBr8G,KAAKk8G,iBAAkB,SAAU5iG,EAAG1R,UAAY,MAAO27B,OAAMo4J,aAAariL,EAAG1R,aAEtLjI,QAEX2gB,YAAY,EACZD,cAAc,IAElBzgB,OAAOwgB,eAAe6oD,sBAAsBtoE,UAAW,aACnD4f,IAAK,WACD,GAAIgjB,OAAQvjC,KACRL,OAASK,KAAK4uF,UAClB,KAAKjvF,OAAQ,CACT,GAAIw+L,KAAMn+L,KAAKuhC,oBACf5hC,QAASK,KAAK4uF,WAAa,GAAIjpD,iBAAgB3lC,KAAKk8G,iBAAkBiiF,UAAa,SAAU7kL,EAAG1R,UAAY,MAAO27B,OAAMo4J,aAAariL,EAAG1R,YAE7I,MAAOjI,SAEX2gB,YAAY,EACZD,cAAc,IAElB4oD,sBAAsBtoE,UAAU+8L,iCAAmC,SAAUr3L,MACzE,GAAI0P,QAAS/V,KAAKouE,cAAc/nE,KAAKuB,SACrC,IAAImO,OAAQ,CASR,MARsB3V,IAAG+pE,aAAap0D,OAAQ,SAAUkmB,OACpD,GAAIA,MAAM1mB,OAASnV,GAAG6pE,WAAW4hF,iBAAkB,CAC/C,GAAIC,kBAAmB7vH,KACvB,IAA6B,MAAzB6vH,iBAAiBltJ,MAAgBktJ,iBAAiBltJ,KAAK2R,OAASlK,KAAKzH,KACrE,MAAOktJ,uBAY3B7iF,sBAAsBtoE,UAAU68L,6BAA+B,SAAUY,cAGrE,GAAIn8I,YAAam8I,aAAa10J,MAC9B,KAAKuY,WACD,MAAOgnB,uBAAsBo1H,eAEjC,IAAIp8I,WAAW1sC,OAASnV,GAAG6pE,WAAWuqF,mBAClC,MAAOvrF,uBAAsBo1H,eAI7B,IAA6B,aAAzBp8I,WAAWrjD,KAAK2R,KAChB,MAAO04D,uBAAsBo1H,eAIrC,MADAp8I,WAAaA,WAAWvY,SACLuY,WAAW1sC,OAASnV,GAAG6pE,WAAWsrF,wBACjD,MAAOtsF,uBAAsBo1H,eAGjC,MADAp8I,WAAaA,WAAWvY,SACLuY,WAAW1sC,OAASnV,GAAG6pE,WAAW0rF,eACjD,MAAO1sF,uBAAsBo1H,eAEjC,IAAIC,YAAar8I,WAAWttC,WACxB6qJ,UAAYv9G,WAAWvY,MAC3B,KAAK81H,WAAaA,UAAUjqJ,OAASnV,GAAG6pE,WAAWs0H,UAC/C,MAAOt1H,uBAAsBo1H,eAEjC,IAAIv2H,aAAc03F,UAAU91H,MAC5B,OAAKo+B,cAAeA,YAAYvyD,OAASnV,GAAG6pE,WAAW4hF,kBAG/C/jF,YAAaw2H,YAFVr1H,sBAAsBo1H,iBAIrCp1H,sBAAsBtoE,UAAU69L,mBAAqB,SAAUC,YAAa/oL,YACxE,GAAIsc,QAAUhyB,KAAKm9L,iBAAmBn9L,KAAKm9L,gBAAgB58K,IAAI7K,WAAWiM,SAC1E,OAAQqQ,SAAUA,OAAO/xB,IAAI,SAAUqZ,GACnC,OAASpI,QAASoI,EAAEpI,QAASvG,KAAMk/D,OAAOn0D,WAAY4D,EAAEqrB,KAAMrrB,EAAEsrB,SAAW65J,oBAInFx1H,sBAAsBtoE,UAAU+7L,uBAAyB,SAAUhnL,WAAY4J,MAC3E,GAAIA,KAAK/J,MAAQnV,GAAG6pE,WAAW4hF,kBAAoBvsI,KAAK67H,YACpD77H,KAAK1gB,KACL,IAAK,GAAImD,IAAK,EAAGqX,GAAKkG,KAAK67H,WAAYp5I,GAAKqX,GAAGnX,OAAQF,KAAM,CACzD,GAAIy9J,WAAYpmJ,GAAGrX,GACnB,IAAIy9J,UAAU7qJ,YAAc6qJ,UAAU7qJ,WAAWY,MAAQnV,GAAG6pE,WAAW0rF,eAAgB,CACnF,GAAI7J,kBAAmBxsI,IACvB,IAAIwsI,iBAAiBltJ,KAAM,CACvB,GAAIizC,MAAO2tH,UAAU7qJ,WACjBd,OAASg+B,KAAKl9B,WACdtO,KAAOrG,KAAKqrJ,QAAQK,kBAAkB73I,OAC1C,IAAIxN,KAAM,CACN,GAAIqzI,cAAe15I,KAAKyiB,UAAUue,gBAAgBtrB,WAAWiM,SAAUmqI,iBAAiBltJ,KAAK2R,KAC7F,KACI,GAAIvQ,KAAK2L,SAASq3B,YAAY02G,cAAe,CACzC,GAAI16G,UAAWh/B,KAAK2L,SAASyyG,kCAAkCs7B,cAAc16G,SACzEgpC,gBAAkByB,SAAS51D,OAC/B,QACIxN,KAAMqzI,aACN1xE,gBAAiBA,gBACjBhpC,SAAUA,SACVhN,OAAQhyB,KAAKw+L,mBAAmBx2H,gBAAiBtyD,cAI7D,MAAO4D,GACH,GAAIA,EAAEpI,QAAS,CACXlR,KAAK27L,aAAariL,EAAG5D,WAAWiM,SAChC,IAAIqmD,iBAAkByB,SAAS51D,OAC/B,QACIxN,KAAMqzI,aACN1xE,gBAAiBA,gBACjBh2C,OAAQhyB,KAAKw+L,mBAAmBx2H,gBAAiBtyD,oBAUrFuzD,sBAAsBtoE,UAAU88L,SAAW,SAAUn+K,MACjD,OAAQA,KAAK/J,MACT,IAAKnV,IAAG6pE,WAAWsjF,8BAEnB,IAAKntJ,IAAG6pE,WAAWqkF,cACf,MAAOhvI,MAAK/O,OAGxB04D,sBAAsBtoE,UAAU2J,SAAW,SAAUoL,WAAYnL,UAC7D,QAASmU,MAAKY,MACV,GAAI/U,UAAY+U,KAAKoqD,YAAcn/D,SAAW+U,KAAKqqD,SAC/C,MAAOvpE,IAAG+pE,aAAa7qD,KAAMZ,OAASY,KAG9C,MAAOZ,MAAKhJ,aAEhBuzD,sBAAsBo1H,qBAAmBj6L,OAAWA,IAC7C6kE,yBA6CPoB,eAAiB,GAAI0hH,SAOrBp8G,mBAAqB+uH,QAAQC,KAAKv7L,QAAQ,yBAA2B,EAyRrEojJ,QAAU,GAAI2wB,WAAU,oBAE5B13K,SAAQ6oE,sBAAwBA,sBAChC7oE,QAAQwpE,sBAAwBA,sBAChCxpE,QAAQqpE,oCAAsCA,oCAC9CrpE,QAAQ+mJ,QAAUA,QAClB/mJ,QAAQ2qE,iBAAmBA,iBAC3B3qE,QAAQmB,OAASA,OAEjBhB,OAAOwgB,eAAe3gB,QAAS,cAAgB+D,OAAO","file":"/Users/misko/work/angular/dist/packages-dist/language-service/bundles/language-service.umd.min.js","sourcesContent":["/**\n * @license Angular v5.0.2\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nvar $reflect = {defineMetadata: function() {}, getOwnMetadata: function(){}};\n((typeof global !== 'undefined' && global)||{})['Reflect'] = $reflect;\nvar $deferred, $resolved, $provided;\nfunction $getModule(name) { return $provided[name] || require(name); }\nfunction define(modules, cb) { $deferred = { modules: modules, cb: cb }; }\nmodule.exports = function(provided) {\n  if ($resolved) return $resolved;\n  var result = {};\n  $provided = Object.assign({'reflect-metadata': $reflect}, provided || {}, { exports: result });\n  $deferred.cb.apply(this, $deferred.modules.map($getModule));\n  $resolved = result;\n  return result;\n}\n\ndefine(['exports', 'fs', 'path', 'typescript'], function (exports, fs, path, ts) { 'use strict';\n\nvar fs__default = 'default' in fs ? fs['default'] : fs;\nvar path__default = 'default' in path ? path['default'] : path;\nvar ts__default = 'default' in ts ? ts['default'] : ts;\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.0.2\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createInjectable = makeMetadataFactory('Injectable');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Value: 8,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n/**\n * @record\n */\nfunction Route() { }\n\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateInjectable: createInjectable,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory,\n\tRoute: Route\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION$1 = new Version('5.0.2');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CompilerConfig = (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, _f = _b.missingTranslation, missingTranslation = _f === void 0 ? null : _f, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten$1(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten$1(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten$1(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = (function () {\n    function AstPath(path$$1, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path$$1;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf$1$1(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf$1$1(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path$$1 = [];\n    var /** @type {?} */ visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf$1$1(ast);\n            if (span.start <= position && position < span.end) {\n                path$$1.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path$$1, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar StyleWithImports = (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ParserError = (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? this.msg + \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" :\n            this.msg;\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar Message = (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return /** @type {?} */ ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path$$1, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path$$1.endsWith('.d.ts')) {\n        return [path$$1.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path$$1.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path$$1.substring(0, lastDot), path$$1.substring(lastDot)];\n    }\n    return [path$$1, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\nvar LOWERED_SYMBOL = /\\u0275\\d+/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction isLoweredSymbol(name) {\n    return LOWERED_SYMBOL.test(name);\n}\n/**\n * @param {?} id\n * @return {?}\n */\nfunction createLoweredSymbol(id) {\n    return \"\\u0275\" + id;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CORE = '@angular/core';\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (isValidType(type)) {\n            if (this.isDirective(type)) {\n                return 'directive';\n            }\n            if (this.isPipe(type)) {\n                return 'pipe';\n            }\n            if (this.isNgModule(type)) {\n                return 'module';\n            }\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction areAllEquivalent(base, other) {\n    var /** @type {?} */ len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @abstract\n */\nvar Expression = (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WritePropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ExternalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NotExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    AssertNotNull.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CastExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    FnParam.prototype.isEquivalent = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapEntry.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CommaExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ExpressionStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ReturnStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} f\n     * @return {?}\n     */\n    ClassField.prototype.isEquivalent = /**\n     * @param {?} f\n     * @return {?}\n     */\n    function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassMethod.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassGetter.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ClassStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    IfStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    CommentStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) { return stmt instanceof CommentStmt; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    TryCatchStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ThrowStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN$1 = 'boolean';\nvar NUMBER$1 = 'number';\nvar STRING$1 = 'string';\nvar OBJECT$1 = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA$1 = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA$1.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN$1;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER$1;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT$1;\n                            break;\n                        default:\n                            type[property] = STRING$1;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        // If a selector appears before :host it should not be shimmed as it\n        // matches on ancestor elements and not on elements in the host's shadow\n        // `:host-context(div)` is transformed to\n        // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n        // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n        // Historically `component-tag:host` was matching the component so we also want to preserve\n        // this behavior to avoid breaking legacy apps (it should not match).\n        // The behavior should be:\n        // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n        // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n        //   `:host-context(tag)`)\n        var /** @type {?} */ hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n        // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n        var /** @type {?} */ shouldScope = !hasHost;\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part_1 = selector.slice(startIndex, res.index).trim();\n            shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n            var /** @type {?} */ scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        var /** @type {?} */ part = selector.substring(startIndex);\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX$1 = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX$1)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX$1.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector$1(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector$1(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return /** @type {?} */ ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector$1(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector$1(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (componentId, component, template, usedPipes, externalReferenceVars) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        return visitor.build(componentId);\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar ViewBuilder = (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (componentId, targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(componentId, targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        var /** @type {?} */ viewName = \"_View_\" + componentId + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE :\n            /** @type {?} */ ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Static text nodes have no check function\n        var /** @type {?} */ checkIndex = -1;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr([literal(ast.value)]),\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr(inter.strings.map(function (s) { return literal(s); })),\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount),\n                    providerExpr,\n                    depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                    literal(checkIndex),\n                    literal(argCount),\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                    literal(checkIndex),\n                    map,\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                        literal(checkIndex_1),\n                        literal(argCount),\n                    ])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    GeneratedFile.prototype.isEquivalent = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(/** @type {?} */ ((this.stmts)), /** @type {?} */ ((other.stmts)));\n    };\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @param {?} moduleMeta\n * @param {?} reflector\n * @return {?}\n */\nfunction listLazyRoutes(moduleMeta, reflector) {\n    var /** @type {?} */ allLazyRoutes = [];\n    for (var _i = 0, _a = moduleMeta.transitiveModule.providers; _i < _a.length; _i++) {\n        var _b = _a[_i], provider = _b.provider, module = _b.module;\n        if (tokenReference(provider.token) === reflector.ROUTES) {\n            var /** @type {?} */ loadChildren = _collectLoadChildren(provider.useValue);\n            for (var _c = 0, loadChildren_1 = loadChildren; _c < loadChildren_1.length; _c++) {\n                var route = loadChildren_1[_c];\n                allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n            }\n        }\n    }\n    return allLazyRoutes;\n}\n/**\n * @param {?} routes\n * @param {?=} target\n * @return {?}\n */\nfunction _collectLoadChildren(routes, target) {\n    if (target === void 0) { target = []; }\n    if (typeof routes === 'string') {\n        target.push(routes);\n    }\n    else if (Array.isArray(routes)) {\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            _collectLoadChildren(route, target);\n        }\n    }\n    else if (routes.loadChildren) {\n        _collectLoadChildren(routes.loadChildren, target);\n    }\n    else if (routes.children) {\n        _collectLoadChildren(routes.children, target);\n    }\n    return target;\n}\n/**\n * @param {?} route\n * @param {?} reflector\n * @param {?=} module\n * @return {?}\n */\nfunction parseLazyRoute(route, reflector, module) {\n    var _a = route.split('#'), routePath = _a[0], routeName = _a[1];\n    var /** @type {?} */ referencedModule = reflector.resolveExternalReference({\n        moduleName: routePath,\n        name: routeName,\n    }, module ? module.filePath : undefined);\n    return { route: route, module: module || referencedModule, referencedModule: referencedModule };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var /** @type {?} */ forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver, summaryResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.reexportedBy = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            else if (isCall(metadata_1)) {\n                if (!isFunctionCall(metadata_1) && !isMethodCallOnVariable(metadata_1)) {\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    metadata_1 = {\n                        __symbolic: 'error',\n                        message: 'Complex function calls are not supported.',\n                    };\n                }\n            }\n            // Note: We need to keep storing ctor calls for e.g.\n            // `export const x = new InjectionToken(...)`\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n            if (metadata_1 instanceof StaticSymbol &&\n                this.summaryResolver.isLibraryFile(metadata_1.filePath)) {\n                var /** @type {?} */ declarationSymbol = this.symbols[/** @type {?} */ ((this.indexBySymbol.get(metadata_1)))];\n                if (!isLoweredSymbol(declarationSymbol.name)) {\n                    // Note: symbols that were introduced during codegen in the user file can have a reexport\n                    // if a user used `export *`. However, we can't rely on this as tsickle will change\n                    // `export *` into named exports, using only the information from the typechecker.\n                    // As we introduce the new symbols after typecheck, Tsickle does not know about them,\n                    // and omits them when expanding `export *`.\n                    // So we have to keep reexporting these symbols manually via .ngfactory files.\n                    this.reexportedBy.set(declarationSymbol, summary.symbol);\n                }\n            }\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ reexportSymbol = _this.reexportedBy.get(symbol);\n                    if (reexportSymbol) {\n                        importAs = /** @type {?} */ ((_this.indexBySymbol.get(reexportSymbol)));\n                    }\n                    else {\n                        var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                        if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                            importAs = symbol.name + \"_\" + index;\n                            exportAs.push({ symbol: symbol, exportAs: importAs });\n                        }\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    function ForJitSerializer(outputCtx, symbolResolver, summaryResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.summaryResolver = summaryResolver;\n        this.data = [];\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.push({ summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.push({ summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    function (exportAsArr) {\n        var _this = this;\n        var /** @type {?} */ exportAsBySymbol = new Map();\n        for (var _i = 0, exportAsArr_1 = exportAsArr; _i < exportAsArr_1.length; _i++) {\n            var _a = exportAsArr_1[_i], symbol = _a.symbol, exportAs = _a.exportAs;\n            exportAsBySymbol.set(symbol, exportAs);\n        }\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        for (var _b = 0, _c = this.data; _b < _c.length; _b++) {\n            var _d = _c[_b], summary = _d.summary, metadata = _d.metadata, isLibrary = _d.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                for (var _e = 0, _f = modSummary.modules; _e < _f.length; _e++) {\n                    var mod = _f[_e];\n                    ngModuleSymbols.add(mod.reference);\n                }\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(this.outputCtx, summary.type.reference, this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        }\n        ngModuleSymbols.forEach(function (ngModuleSymbol) {\n            if (_this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)) {\n                var /** @type {?} */ exportAs = exportAsBySymbol.get(ngModuleSymbol) || ngModuleSymbol.name;\n                var /** @type {?} */ jitExportAsName = summaryForJitName(exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName)\n                    .set(_this.serializeSummaryRef(ngModuleSymbol))\n                    .toDeclStmt(null, [StmtModifier.Exported]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ allImportAs = [];\n        this.symbols = data.symbols.map(function (serializedSymbol) {\n            return _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n        });\n        data.symbols.forEach(function (serializedSymbol, index) {\n            var /** @type {?} */ symbol = _this.symbols[index];\n            var /** @type {?} */ importAs = serializedSymbol.importAs;\n            if (typeof importAs === 'number') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbols[importAs] });\n            }\n            else if (typeof importAs === 'string') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbolCache.get(ngfactoryFilePath(libraryFileName), importAs) });\n            }\n        });\n        var /** @type {?} */ summaries = /** @type {?} */ (visitValue(data.summaries, this, null));\n        return { moduleName: data.moduleName, summaries: summaries, importAs: allImportAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isCall(metadata) {\n    return metadata && metadata.__symbolic === 'call';\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isFunctionCall(metadata) {\n    return isCall(metadata) && metadata.expression instanceof StaticSymbol;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isMethodCallOnVariable(metadata) {\n    return isCall(metadata) && metadata.expression && metadata.expression.__symbolic === 'select' &&\n        metadata.expression.expression instanceof StaticSymbol;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = (function () {\n    function AotCompiler(_config, _options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.findGeneratedFileNames = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var _this = this;\n        var /** @type {?} */ genFileNames = [];\n        var /** @type {?} */ file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(file.fileName, true)[1];\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw syntaxError(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStub = /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as lateron in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStub = /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        return Promise.all(loadingPromises).then(function (_) { return mergeAndValidateNgFiles(files); });\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        return mergeAndValidateNgFiles(files);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (outputCtx, file, emitFlags) {\n        var _this = this;\n        var /** @type {?} */ componentId = 0;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.transitiveModule.directives.map(function (d) { return d.reference; }).concat(ngModuleMeta.transitiveModule.pipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                if (_this._host.isSourceFile(ref.filePath)) {\n                    externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n                }\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    componentId++;\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_Host_\" + componentId, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_\" + componentId, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, componentId, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten$1(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var /** @type {?} */ shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var /** @type {?} */ result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this._options.locale) {\n            var /** @type {?} */ normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._fileNameToModuleName = /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n            this._symbolResolver.getKnownModuleName(importedFilePath) ||\n            this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    AotCompiler.prototype.listLazyRoutes = /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    function (entryRoute, analyzedModules) {\n        var /** @type {?} */ self = this;\n        if (entryRoute) {\n            var /** @type {?} */ symbol = parseLazyRoute(entryRoute, this._reflector).referencedModule;\n            return visitLazyRoute(symbol);\n        }\n        else if (analyzedModules) {\n            var /** @type {?} */ allLazyRoutes = [];\n            for (var _i = 0, _a = analyzedModules.ngModules; _i < _a.length; _i++) {\n                var ngModule = _a[_i];\n                var /** @type {?} */ lazyRoutes = listLazyRoutes(ngModule, this._reflector);\n                for (var _b = 0, lazyRoutes_1 = lazyRoutes; _b < lazyRoutes_1.length; _b++) {\n                    var lazyRoute = lazyRoutes_1[_b];\n                    allLazyRoutes.push(lazyRoute);\n                }\n            }\n            return allLazyRoutes;\n        }\n        else {\n            throw new Error(\"Either route or analyzedModules has to be specified!\");\n        }\n        /**\n         * @param {?} symbol\n         * @param {?=} seenRoutes\n         * @param {?=} allLazyRoutes\n         * @return {?}\n         */\n        function visitLazyRoute(symbol, seenRoutes, allLazyRoutes) {\n            if (seenRoutes === void 0) { seenRoutes = new Set(); }\n            if (allLazyRoutes === void 0) { allLazyRoutes = []; }\n            // Support pointing to default exports, but stop recursing there,\n            // as the StaticReflector does not yet support default exports.\n            if (seenRoutes.has(symbol) || !symbol.name) {\n                return allLazyRoutes;\n            }\n            seenRoutes.add(symbol);\n            var /** @type {?} */ lazyRoutes = listLazyRoutes(/** @type {?} */ ((self._metadataResolver.getNgModuleMetadata(symbol, true))), self._reflector);\n            for (var _i = 0, lazyRoutes_2 = lazyRoutes; _i < lazyRoutes_2.length; _i++) {\n                var lazyRoute = lazyRoutes_2[_i];\n                allLazyRoutes.push(lazyRoute);\n                visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n            }\n            return allLazyRoutes;\n        }\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isNgModule(symbol)) {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    injectables.push(symbol);\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (ref, containingFile) {\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)), containingFile);\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        if (!containingFile) {\n            this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n            this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        }\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path$$1) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path$$1);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1, references);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var /** @type {?} */ spreadArray = simplifyInContext(context, item.expression, depth, 0);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1, references);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplifyInContext(context, expression['expression'], depth, 0);\n                                var /** @type {?} */ index = simplifyInContext(context, expression['index'], depth, 0);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1, references);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1, references);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name_1 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_1);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions\n                                            .map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyInContext(context, value, depth, references + 1);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value) {\n            try {\n                return simplifyInContext(context, value, 0, 0);\n            }\n            catch (/** @type {?} */ e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value) :\n            simplifyInContext(context, value, 0, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = syntaxError(message);\n    (/** @type {?} */ (result)).fileName = fileName;\n    (/** @type {?} */ (result)).line = line;\n    (/** @type {?} */ (result)).column = column;\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ResolvedStaticSymbol = (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getKnownModuleName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there migth be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name_1);\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path$$1) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path$$1);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? ' relative to ' +\n                containingFile : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) { _this.importAs.set(importAs.symbol, importAs.importAs); });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @param {?=} errorCollector\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options, errorCollector) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getKnownModuleName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return null; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @param {?} fn\n * @param {?=} out\n * @param {?=} seen\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out, seen) {\n    if (out === void 0) { out = []; }\n    if (seen === void 0) { seen = new Set(); }\n    if (seen.has(fn$$1)) {\n        return out;\n    }\n    seen.add(fn$$1);\n    var /** @type {?} */ summaries = fn$$1();\n    for (var /** @type {?} */ i = 0; i < summaries.length; i++) {\n        var /** @type {?} */ entry = summaries[i];\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out, seen);\n        }\n        else {\n            out.push(entry);\n        }\n    }\n    return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path$$1 = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path$$1 = path$$1.replace(/^\\/+/, '');\n            return prefix + \"/\" + path$$1;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path$$1) {\n    if (path$$1 == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path$$1[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path$$1[path$$1.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path$$1.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path$$1 = parts[_ComponentIndex.Path];\n    path$$1 = path$$1 == null ? '' : _removeDotSegments(path$$1);\n    parts[_ComponentIndex.Path] = path$$1;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path$$1, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path$$1 = baseParts[_ComponentIndex.Path];\n    if (path$$1 == null)\n        path$$1 = '/';\n    var /** @type {?} */ index = path$$1.lastIndexOf('/');\n    path$$1 = path$$1.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path$$1;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\n\n\n\n\nvar compiler = Object.freeze({\n\tcore: core,\n\tCompilerConfig: CompilerConfig,\n\tpreserveWhitespacesDefault: preserveWhitespacesDefault,\n\tisLoweredSymbol: isLoweredSymbol,\n\tcreateLoweredSymbol: createLoweredSymbol,\n\tIdentifiers: Identifiers,\n\tJitCompiler: JitCompiler,\n\tDirectiveResolver: DirectiveResolver,\n\tPipeResolver: PipeResolver,\n\tNgModuleResolver: NgModuleResolver,\n\tDEFAULT_INTERPOLATION_CONFIG: DEFAULT_INTERPOLATION_CONFIG,\n\tInterpolationConfig: InterpolationConfig,\n\tNgModuleCompiler: NgModuleCompiler,\n\tAssertNotNull: AssertNotNull,\n\tBinaryOperator: BinaryOperator,\n\tBinaryOperatorExpr: BinaryOperatorExpr,\n\tBuiltinMethod: BuiltinMethod,\n\tBuiltinVar: BuiltinVar,\n\tCastExpr: CastExpr,\n\tClassStmt: ClassStmt,\n\tCommaExpr: CommaExpr,\n\tCommentStmt: CommentStmt,\n\tConditionalExpr: ConditionalExpr,\n\tDeclareFunctionStmt: DeclareFunctionStmt,\n\tDeclareVarStmt: DeclareVarStmt,\n\tExpressionStatement: ExpressionStatement,\n\tExternalExpr: ExternalExpr,\n\tExternalReference: ExternalReference,\n\tFunctionExpr: FunctionExpr,\n\tIfStmt: IfStmt,\n\tInstantiateExpr: InstantiateExpr,\n\tInvokeFunctionExpr: InvokeFunctionExpr,\n\tInvokeMethodExpr: InvokeMethodExpr,\n\tLiteralArrayExpr: LiteralArrayExpr,\n\tLiteralExpr: LiteralExpr,\n\tLiteralMapExpr: LiteralMapExpr,\n\tNotExpr: NotExpr,\n\tReadKeyExpr: ReadKeyExpr,\n\tReadPropExpr: ReadPropExpr,\n\tReadVarExpr: ReadVarExpr,\n\tReturnStatement: ReturnStatement,\n\tThrowStmt: ThrowStmt,\n\tTryCatchStmt: TryCatchStmt,\n\tWriteKeyExpr: WriteKeyExpr,\n\tWritePropExpr: WritePropExpr,\n\tWriteVarExpr: WriteVarExpr,\n\tStmtModifier: StmtModifier,\n\tStatement: Statement,\n\tcollectExternalReferences: collectExternalReferences,\n\tEmitterVisitorContext: EmitterVisitorContext,\n\tViewCompiler: ViewCompiler,\n\tgetParseErrors: getParseErrors,\n\tisSyntaxError: isSyntaxError,\n\tsyntaxError: syntaxError,\n\tVersion: Version,\n\tVERSION: VERSION$1,\n\tTextAst: TextAst,\n\tBoundTextAst: BoundTextAst,\n\tAttrAst: AttrAst,\n\tBoundElementPropertyAst: BoundElementPropertyAst,\n\tBoundEventAst: BoundEventAst,\n\tReferenceAst: ReferenceAst,\n\tVariableAst: VariableAst,\n\tElementAst: ElementAst,\n\tEmbeddedTemplateAst: EmbeddedTemplateAst,\n\tBoundDirectivePropertyAst: BoundDirectivePropertyAst,\n\tDirectiveAst: DirectiveAst,\n\tProviderAst: ProviderAst,\n\tProviderAstType: ProviderAstType,\n\tNgContentAst: NgContentAst,\n\tPropertyBindingType: PropertyBindingType,\n\tNullTemplateVisitor: NullTemplateVisitor,\n\tRecursiveTemplateAstVisitor: RecursiveTemplateAstVisitor,\n\ttemplateVisitAll: templateVisitAll,\n\tidentifierName: identifierName,\n\tidentifierModuleUrl: identifierModuleUrl,\n\tviewClassName: viewClassName,\n\trendererTypeName: rendererTypeName,\n\thostViewClassName: hostViewClassName,\n\tcomponentFactoryName: componentFactoryName,\n\tCompileSummaryKind: CompileSummaryKind,\n\ttokenName: tokenName,\n\ttokenReference: tokenReference,\n\tCompileStylesheetMetadata: CompileStylesheetMetadata,\n\tCompileTemplateMetadata: CompileTemplateMetadata,\n\tCompileDirectiveMetadata: CompileDirectiveMetadata,\n\tCompilePipeMetadata: CompilePipeMetadata,\n\tCompileNgModuleMetadata: CompileNgModuleMetadata,\n\tTransitiveCompileNgModuleMetadata: TransitiveCompileNgModuleMetadata,\n\tProviderMeta: ProviderMeta,\n\tflatten: flatten$1,\n\ttemplateSourceUrl: templateSourceUrl,\n\tsharedStylesheetJitUrl: sharedStylesheetJitUrl,\n\tngModuleJitUrl: ngModuleJitUrl,\n\ttemplateJitUrl: templateJitUrl,\n\tcreateAotUrlResolver: createAotUrlResolver,\n\tcreateAotCompiler: createAotCompiler,\n\tAotCompiler: AotCompiler,\n\tanalyzeNgModules: analyzeNgModules,\n\tanalyzeAndValidateNgModules: analyzeAndValidateNgModules,\n\tanalyzeFile: analyzeFile,\n\tmergeAnalyzedFiles: mergeAnalyzedFiles,\n\tGeneratedFile: GeneratedFile,\n\ttoTypeScript: toTypeScript,\n\tStaticReflector: StaticReflector,\n\tStaticSymbol: StaticSymbol,\n\tStaticSymbolCache: StaticSymbolCache,\n\tResolvedStaticSymbol: ResolvedStaticSymbol,\n\tStaticSymbolResolver: StaticSymbolResolver,\n\tunescapeIdentifier: unescapeIdentifier,\n\tAotSummaryResolver: AotSummaryResolver,\n\tAstPath: AstPath,\n\tSummaryResolver: SummaryResolver,\n\tJitSummaryResolver: JitSummaryResolver,\n\tCompileReflector: CompileReflector,\n\tcreateUrlResolverWithoutPackagePrefix: createUrlResolverWithoutPackagePrefix,\n\tcreateOfflineCompileUrlResolver: createOfflineCompileUrlResolver,\n\tUrlResolver: UrlResolver,\n\tgetUrlScheme: getUrlScheme,\n\tResourceLoader: ResourceLoader,\n\tElementSchemaRegistry: ElementSchemaRegistry,\n\tExtractor: Extractor,\n\tI18NHtmlParser: I18NHtmlParser,\n\tMessageBundle: MessageBundle,\n\tSerializer: Serializer,\n\tXliff: Xliff,\n\tXliff2: Xliff2,\n\tXmb: Xmb,\n\tXtb: Xtb,\n\tDirectiveNormalizer: DirectiveNormalizer,\n\tParserError: ParserError,\n\tParseSpan: ParseSpan,\n\tAST: AST,\n\tQuote: Quote,\n\tEmptyExpr: EmptyExpr,\n\tImplicitReceiver: ImplicitReceiver,\n\tChain: Chain,\n\tConditional: Conditional,\n\tPropertyRead: PropertyRead,\n\tPropertyWrite: PropertyWrite,\n\tSafePropertyRead: SafePropertyRead,\n\tKeyedRead: KeyedRead,\n\tKeyedWrite: KeyedWrite,\n\tBindingPipe: BindingPipe,\n\tLiteralPrimitive: LiteralPrimitive,\n\tLiteralArray: LiteralArray,\n\tLiteralMap: LiteralMap,\n\tInterpolation: Interpolation,\n\tBinary: Binary,\n\tPrefixNot: PrefixNot,\n\tNonNullAssert: NonNullAssert,\n\tMethodCall: MethodCall,\n\tSafeMethodCall: SafeMethodCall,\n\tFunctionCall: FunctionCall,\n\tASTWithSource: ASTWithSource,\n\tTemplateBinding: TemplateBinding,\n\tNullAstVisitor: NullAstVisitor,\n\tRecursiveAstVisitor: RecursiveAstVisitor,\n\tAstTransformer: AstTransformer,\n\tvisitAstChildren: visitAstChildren,\n\tTokenType: TokenType,\n\tLexer: Lexer,\n\tToken: Token,\n\tEOF: EOF,\n\tisIdentifier: isIdentifier,\n\tisQuote: isQuote,\n\tSplitInterpolation: SplitInterpolation,\n\tTemplateBindingParseResult: TemplateBindingParseResult,\n\tParser: Parser,\n\t_ParseAST: _ParseAST,\n\tERROR_COMPONENT_TYPE: ERROR_COMPONENT_TYPE,\n\tCompileMetadataResolver: CompileMetadataResolver,\n\tText: Text,\n\tExpansion: Expansion,\n\tExpansionCase: ExpansionCase,\n\tAttribute: Attribute$1,\n\tElement: Element,\n\tComment: Comment,\n\tvisitAll: visitAll,\n\tRecursiveVisitor: RecursiveVisitor,\n\tfindNode: findNode,\n\tParseTreeResult: ParseTreeResult,\n\tTreeError: TreeError,\n\tHtmlParser: HtmlParser,\n\tHtmlTagDefinition: HtmlTagDefinition,\n\tgetHtmlTagDefinition: getHtmlTagDefinition,\n\tTagContentType: TagContentType,\n\tsplitNsName: splitNsName,\n\tisNgContainer: isNgContainer,\n\tisNgContent: isNgContent,\n\tisNgTemplate: isNgTemplate,\n\tgetNsPrefix: getNsPrefix,\n\tmergeNsAndName: mergeNsAndName,\n\tNAMED_ENTITIES: NAMED_ENTITIES,\n\tNGSP_UNICODE: NGSP_UNICODE,\n\tdebugOutputAstAsTypeScript: debugOutputAstAsTypeScript,\n\tTypeScriptEmitter: TypeScriptEmitter,\n\tParseLocation: ParseLocation,\n\tParseSourceFile: ParseSourceFile,\n\tParseSourceSpan: ParseSourceSpan,\n\tParseErrorLevel: ParseErrorLevel,\n\tParseError: ParseError,\n\ttypeSourceSpan: typeSourceSpan,\n\tDomElementSchemaRegistry: DomElementSchemaRegistry,\n\tCssSelector: CssSelector,\n\tSelectorMatcher: SelectorMatcher,\n\tSelectorListContext: SelectorListContext,\n\tSelectorContext: SelectorContext,\n\tStylesCompileDependency: StylesCompileDependency,\n\tCompiledStylesheet: CompiledStylesheet,\n\tStyleCompiler: StyleCompiler,\n\tTemplateParseError: TemplateParseError,\n\tTemplateParseResult: TemplateParseResult,\n\tTemplateParser: TemplateParser,\n\tsplitClasses: splitClasses,\n\tcreateElementCssSelector: createElementCssSelector$1,\n\tremoveSummaryDuplicates: removeSummaryDuplicates\n});\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar symbols = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An enumeration of basic types.\n *\n * @experimental\n */\nvar BuiltinType;\n(function (BuiltinType) {\n    /**\n     * The type is a type that can hold any other type.\n     */\n    BuiltinType[BuiltinType[\"Any\"] = 0] = \"Any\";\n    /**\n     * The type of a string literal.\n     */\n    BuiltinType[BuiltinType[\"String\"] = 1] = \"String\";\n    /**\n     * The type of a numeric literal.\n     */\n    BuiltinType[BuiltinType[\"Number\"] = 2] = \"Number\";\n    /**\n     * The type of the `true` and `false` literals.\n     */\n    BuiltinType[BuiltinType[\"Boolean\"] = 3] = \"Boolean\";\n    /**\n     * The type of the `undefined` literal.\n     */\n    BuiltinType[BuiltinType[\"Undefined\"] = 4] = \"Undefined\";\n    /**\n     * the type of the `null` literal.\n     */\n    BuiltinType[BuiltinType[\"Null\"] = 5] = \"Null\";\n    /**\n     * the type is an unbound type parameter.\n     */\n    BuiltinType[BuiltinType[\"Unbound\"] = 6] = \"Unbound\";\n    /**\n     * Not a built-in type.\n     */\n    BuiltinType[BuiltinType[\"Other\"] = 7] = \"Other\";\n})(BuiltinType = exports.BuiltinType || (exports.BuiltinType = {}));\n\n});\n\nvar compiler_1 = ( compiler && undefined ) || compiler;\n\nvar expression_type = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\nvar DiagnosticKind;\n(function (DiagnosticKind) {\n    DiagnosticKind[DiagnosticKind[\"Error\"] = 0] = \"Error\";\n    DiagnosticKind[DiagnosticKind[\"Warning\"] = 1] = \"Warning\";\n})(DiagnosticKind = exports.DiagnosticKind || (exports.DiagnosticKind = {}));\nvar TypeDiagnostic = (function () {\n    function TypeDiagnostic(kind, message, ast) {\n        this.kind = kind;\n        this.message = message;\n        this.ast = ast;\n    }\n    return TypeDiagnostic;\n}());\nexports.TypeDiagnostic = TypeDiagnostic;\n// AstType calculatetype of the ast given AST element.\nvar AstType = (function () {\n    function AstType(scope, query, context) {\n        this.scope = scope;\n        this.query = query;\n        this.context = context;\n    }\n    AstType.prototype.getType = function (ast) { return ast.visit(this); };\n    AstType.prototype.getDiagnostics = function (ast) {\n        this.diagnostics = [];\n        var type = ast.visit(this);\n        if (this.context.event && type.callable) {\n            this.reportWarning('Unexpected callable expression. Expected a method call', ast);\n        }\n        return this.diagnostics;\n    };\n    AstType.prototype.visitBinary = function (ast) {\n        var _this = this;\n        // Treat undefined and null as other.\n        function normalize(kind, other) {\n            switch (kind) {\n                case symbols.BuiltinType.Undefined:\n                case symbols.BuiltinType.Null:\n                    return normalize(other, symbols.BuiltinType.Other);\n            }\n            return kind;\n        }\n        var getType = function (ast, operation) {\n            var type = _this.getType(ast);\n            if (type.nullable) {\n                switch (operation) {\n                    case '&&':\n                    case '||':\n                    case '==':\n                    case '!=':\n                    case '===':\n                    case '!==':\n                        // Nullable allowed.\n                        break;\n                    default:\n                        _this.reportError(\"The expression might be null\", ast);\n                        break;\n                }\n                return _this.query.getNonNullableType(type);\n            }\n            return type;\n        };\n        var leftType = getType(ast.left, ast.operation);\n        var rightType = getType(ast.right, ast.operation);\n        var leftRawKind = this.query.getTypeKind(leftType);\n        var rightRawKind = this.query.getTypeKind(rightType);\n        var leftKind = normalize(leftRawKind, rightRawKind);\n        var rightKind = normalize(rightRawKind, leftRawKind);\n        // The following swtich implements operator typing similar to the\n        // type production tables in the TypeScript specification.\n        // https://github.com/Microsoft/TypeScript/blob/v1.8.10/doc/spec.md#4.19\n        var operKind = leftKind << 8 | rightKind;\n        switch (ast.operation) {\n            case '*':\n            case '/':\n            case '%':\n            case '-':\n            case '<<':\n            case '>>':\n            case '>>>':\n            case '&':\n            case '^':\n            case '|':\n                switch (operKind) {\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Number:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Number:\n                        return this.query.getBuiltinType(symbols.BuiltinType.Number);\n                    default:\n                        var errorAst = ast.left;\n                        switch (leftKind) {\n                            case symbols.BuiltinType.Any:\n                            case symbols.BuiltinType.Number:\n                                errorAst = ast.right;\n                                break;\n                        }\n                        return this.reportError('Expected a numeric type', errorAst);\n                }\n            case '+':\n                switch (operKind) {\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Boolean:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Number:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Other:\n                    case symbols.BuiltinType.Boolean << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Other << 8 | symbols.BuiltinType.Any:\n                        return this.anyType;\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.String:\n                    case symbols.BuiltinType.Boolean << 8 | symbols.BuiltinType.String:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.String:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.Boolean:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.Number:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.String:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.Other:\n                    case symbols.BuiltinType.Other << 8 | symbols.BuiltinType.String:\n                        return this.query.getBuiltinType(symbols.BuiltinType.String);\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Number:\n                        return this.query.getBuiltinType(symbols.BuiltinType.Number);\n                    case symbols.BuiltinType.Boolean << 8 | symbols.BuiltinType.Number:\n                    case symbols.BuiltinType.Other << 8 | symbols.BuiltinType.Number:\n                        return this.reportError('Expected a number type', ast.left);\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Boolean:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Other:\n                        return this.reportError('Expected a number type', ast.right);\n                    default:\n                        return this.reportError('Expected operands to be a string or number type', ast);\n                }\n            case '>':\n            case '<':\n            case '<=':\n            case '>=':\n            case '==':\n            case '!=':\n            case '===':\n            case '!==':\n                switch (operKind) {\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Boolean:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Number:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.String:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Other:\n                    case symbols.BuiltinType.Boolean << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Boolean << 8 | symbols.BuiltinType.Boolean:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Number:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.String:\n                    case symbols.BuiltinType.Other << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Other << 8 | symbols.BuiltinType.Other:\n                        return this.query.getBuiltinType(symbols.BuiltinType.Boolean);\n                    default:\n                        return this.reportError('Expected the operants to be of similar type or any', ast);\n                }\n            case '&&':\n                return rightType;\n            case '||':\n                return this.query.getTypeUnion(leftType, rightType);\n        }\n        return this.reportError(\"Unrecognized operator \" + ast.operation, ast);\n    };\n    AstType.prototype.visitChain = function (ast) {\n        if (this.diagnostics) {\n            // If we are producing diagnostics, visit the children\n            compiler_1.visitAstChildren(ast, this);\n        }\n        // The type of a chain is always undefined.\n        return this.query.getBuiltinType(symbols.BuiltinType.Undefined);\n    };\n    AstType.prototype.visitConditional = function (ast) {\n        // The type of a conditional is the union of the true and false conditions.\n        if (this.diagnostics) {\n            compiler_1.visitAstChildren(ast, this);\n        }\n        return this.query.getTypeUnion(this.getType(ast.trueExp), this.getType(ast.falseExp));\n    };\n    AstType.prototype.visitFunctionCall = function (ast) {\n        var _this = this;\n        // The type of a function call is the return type of the selected signature.\n        // The signature is selected based on the types of the arguments. Angular doesn't\n        // support contextual typing of arguments so this is simpler than TypeScript's\n        // version.\n        var args = ast.args.map(function (arg) { return _this.getType(arg); });\n        var target = this.getType(ast.target);\n        if (!target || !target.callable)\n            return this.reportError('Call target is not callable', ast);\n        var signature = target.selectSignature(args);\n        if (signature)\n            return signature.result;\n        // TODO: Consider a better error message here.\n        return this.reportError('Unable no compatible signature found for call', ast);\n    };\n    AstType.prototype.visitImplicitReceiver = function (ast) {\n        var _this = this;\n        // Return a pseudo-symbol for the implicit receiver.\n        // The members of the implicit receiver are what is defined by the\n        // scope passed into this class.\n        return {\n            name: '$implict',\n            kind: 'component',\n            language: 'ng-template',\n            type: undefined,\n            container: undefined,\n            callable: false,\n            nullable: false,\n            public: true,\n            definition: undefined,\n            members: function () { return _this.scope; },\n            signatures: function () { return []; },\n            selectSignature: function (types) { return undefined; },\n            indexed: function (argument) { return undefined; }\n        };\n    };\n    AstType.prototype.visitInterpolation = function (ast) {\n        // If we are producing diagnostics, visit the children.\n        if (this.diagnostics) {\n            compiler_1.visitAstChildren(ast, this);\n        }\n        return this.undefinedType;\n    };\n    AstType.prototype.visitKeyedRead = function (ast) {\n        var targetType = this.getType(ast.obj);\n        var keyType = this.getType(ast.key);\n        var result = targetType.indexed(keyType);\n        return result || this.anyType;\n    };\n    AstType.prototype.visitKeyedWrite = function (ast) {\n        // The write of a type is the type of the value being written.\n        return this.getType(ast.value);\n    };\n    AstType.prototype.visitLiteralArray = function (ast) {\n        var _this = this;\n        // A type literal is an array type of the union of the elements\n        return this.query.getArrayType((_a = this.query).getTypeUnion.apply(_a, ast.expressions.map(function (element) { return _this.getType(element); })));\n        var _a;\n    };\n    AstType.prototype.visitLiteralMap = function (ast) {\n        // If we are producing diagnostics, visit the children\n        if (this.diagnostics) {\n            compiler_1.visitAstChildren(ast, this);\n        }\n        // TODO: Return a composite type.\n        return this.anyType;\n    };\n    AstType.prototype.visitLiteralPrimitive = function (ast) {\n        // The type of a literal primitive depends on the value of the literal.\n        switch (ast.value) {\n            case true:\n            case false:\n                return this.query.getBuiltinType(symbols.BuiltinType.Boolean);\n            case null:\n                return this.query.getBuiltinType(symbols.BuiltinType.Null);\n            case undefined:\n                return this.query.getBuiltinType(symbols.BuiltinType.Undefined);\n            default:\n                switch (typeof ast.value) {\n                    case 'string':\n                        return this.query.getBuiltinType(symbols.BuiltinType.String);\n                    case 'number':\n                        return this.query.getBuiltinType(symbols.BuiltinType.Number);\n                    default:\n                        return this.reportError('Unrecognized primitive', ast);\n                }\n        }\n    };\n    AstType.prototype.visitMethodCall = function (ast) {\n        return this.resolveMethodCall(this.getType(ast.receiver), ast);\n    };\n    AstType.prototype.visitPipe = function (ast) {\n        var _this = this;\n        // The type of a pipe node is the return type of the pipe's transform method. The table returned\n        // by getPipes() is expected to contain symbols with the corresponding transform method type.\n        var pipe = this.query.getPipes().get(ast.name);\n        if (!pipe)\n            return this.reportError(\"No pipe by the name \" + ast.name + \" found\", ast);\n        var expType = this.getType(ast.exp);\n        var signature = pipe.selectSignature([expType].concat(ast.args.map(function (arg) { return _this.getType(arg); })));\n        if (!signature)\n            return this.reportError('Unable to resolve signature for pipe invocation', ast);\n        return signature.result;\n    };\n    AstType.prototype.visitPrefixNot = function (ast) {\n        // The type of a prefix ! is always boolean.\n        return this.query.getBuiltinType(symbols.BuiltinType.Boolean);\n    };\n    AstType.prototype.visitNonNullAssert = function (ast) {\n        var expressionType = this.getType(ast.expression);\n        return this.query.getNonNullableType(expressionType);\n    };\n    AstType.prototype.visitPropertyRead = function (ast) {\n        return this.resolvePropertyRead(this.getType(ast.receiver), ast);\n    };\n    AstType.prototype.visitPropertyWrite = function (ast) {\n        // The type of a write is the type of the value being written.\n        return this.getType(ast.value);\n    };\n    AstType.prototype.visitQuote = function (ast) {\n        // The type of a quoted expression is any.\n        return this.query.getBuiltinType(symbols.BuiltinType.Any);\n    };\n    AstType.prototype.visitSafeMethodCall = function (ast) {\n        return this.resolveMethodCall(this.query.getNonNullableType(this.getType(ast.receiver)), ast);\n    };\n    AstType.prototype.visitSafePropertyRead = function (ast) {\n        return this.resolvePropertyRead(this.query.getNonNullableType(this.getType(ast.receiver)), ast);\n    };\n    Object.defineProperty(AstType.prototype, \"anyType\", {\n        get: function () {\n            var result = this._anyType;\n            if (!result) {\n                result = this._anyType = this.query.getBuiltinType(symbols.BuiltinType.Any);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstType.prototype, \"undefinedType\", {\n        get: function () {\n            var result = this._undefinedType;\n            if (!result) {\n                result = this._undefinedType = this.query.getBuiltinType(symbols.BuiltinType.Undefined);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AstType.prototype.resolveMethodCall = function (receiverType, ast) {\n        var _this = this;\n        if (this.isAny(receiverType)) {\n            return this.anyType;\n        }\n        // The type of a method is the selected methods result type.\n        var method = receiverType.members().get(ast.name);\n        if (!method)\n            return this.reportError(\"Unknown method '\" + ast.name + \"'\", ast);\n        if (!method.type)\n            return this.reportError(\"Could not find a type for '\" + ast.name + \"'\", ast);\n        if (!method.type.callable)\n            return this.reportError(\"Member '\" + ast.name + \"' is not callable\", ast);\n        var signature = method.type.selectSignature(ast.args.map(function (arg) { return _this.getType(arg); }));\n        if (!signature)\n            return this.reportError(\"Unable to resolve signature for call of method \" + ast.name, ast);\n        return signature.result;\n    };\n    AstType.prototype.resolvePropertyRead = function (receiverType, ast) {\n        if (this.isAny(receiverType)) {\n            return this.anyType;\n        }\n        // The type of a property read is the seelcted member's type.\n        var member = receiverType.members().get(ast.name);\n        if (!member) {\n            var receiverInfo = receiverType.name;\n            if (receiverInfo == '$implict') {\n                receiverInfo =\n                    'The component declaration, template variable declarations, and element references do';\n            }\n            else if (receiverType.nullable) {\n                return this.reportError(\"The expression might be null\", ast.receiver);\n            }\n            else {\n                receiverInfo = \"'\" + receiverInfo + \"' does\";\n            }\n            return this.reportError(\"Identifier '\" + ast.name + \"' is not defined. \" + receiverInfo + \" not contain such a member\", ast);\n        }\n        if (!member.public) {\n            var receiverInfo = receiverType.name;\n            if (receiverInfo == '$implict') {\n                receiverInfo = 'the component';\n            }\n            else {\n                receiverInfo = \"'\" + receiverInfo + \"'\";\n            }\n            this.reportWarning(\"Identifier '\" + ast.name + \"' refers to a private member of \" + receiverInfo, ast);\n        }\n        return member.type;\n    };\n    AstType.prototype.reportError = function (message, ast) {\n        if (this.diagnostics) {\n            this.diagnostics.push(new TypeDiagnostic(DiagnosticKind.Error, message, ast));\n        }\n        return this.anyType;\n    };\n    AstType.prototype.reportWarning = function (message, ast) {\n        if (this.diagnostics) {\n            this.diagnostics.push(new TypeDiagnostic(DiagnosticKind.Warning, message, ast));\n        }\n        return this.anyType;\n    };\n    AstType.prototype.isAny = function (symbol) {\n        return !symbol || this.query.getTypeKind(symbol) == symbols.BuiltinType.Any ||\n            (!!symbol.type && this.isAny(symbol.type));\n    };\n    return AstType;\n}());\nexports.AstType = AstType;\n\n});\n\nvar expression_diagnostics = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\nfunction getTemplateExpressionDiagnostics(info) {\n    var visitor = new ExpressionDiagnosticsVisitor(info, function (path$$1, includeEvent) {\n        return getExpressionScope(info, path$$1, includeEvent);\n    });\n    compiler_1.templateVisitAll(visitor, info.templateAst);\n    return visitor.diagnostics;\n}\nexports.getTemplateExpressionDiagnostics = getTemplateExpressionDiagnostics;\nfunction getExpressionDiagnostics(scope, ast, query, context) {\n    if (context === void 0) { context = {}; }\n    var analyzer = new expression_type.AstType(scope, query, context);\n    analyzer.getDiagnostics(ast);\n    return analyzer.diagnostics;\n}\nexports.getExpressionDiagnostics = getExpressionDiagnostics;\nfunction getReferences(info) {\n    var result = [];\n    function processReferences(references) {\n        var _loop_1 = function (reference) {\n            var type = undefined;\n            if (reference.value) {\n                type = info.query.getTypeSymbol(compiler_1.tokenReference(reference.value));\n            }\n            result.push({\n                name: reference.name,\n                kind: 'reference',\n                type: type || info.query.getBuiltinType(symbols.BuiltinType.Any),\n                get definition() { return getDefinitionOf(info, reference); }\n            });\n        };\n        for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n            var reference = references_1[_i];\n            _loop_1(reference);\n        }\n    }\n    var visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visitEmbeddedTemplate = function (ast, context) {\n            _super.prototype.visitEmbeddedTemplate.call(this, ast, context);\n            processReferences(ast.references);\n        };\n        class_1.prototype.visitElement = function (ast, context) {\n            _super.prototype.visitElement.call(this, ast, context);\n            processReferences(ast.references);\n        };\n        return class_1;\n    }(compiler_1.RecursiveTemplateAstVisitor));\n    compiler_1.templateVisitAll(visitor, info.templateAst);\n    return result;\n}\nfunction getDefinitionOf(info, ast) {\n    if (info.fileName) {\n        var templateOffset = info.offset;\n        return [{\n                fileName: info.fileName,\n                span: {\n                    start: ast.sourceSpan.start.offset + templateOffset,\n                    end: ast.sourceSpan.end.offset + templateOffset\n                }\n            }];\n    }\n}\nfunction getVarDeclarations(info, path$$1) {\n    var result = [];\n    var current = path$$1.tail;\n    while (current) {\n        if (current instanceof compiler_1.EmbeddedTemplateAst) {\n            var _loop_2 = function (variable) {\n                var name_1 = variable.name;\n                // Find the first directive with a context.\n                var context = current.directives.map(function (d) { return info.query.getTemplateContext(d.directive.type.reference); })\n                    .find(function (c) { return !!c; });\n                // Determine the type of the context field referenced by variable.value.\n                var type = undefined;\n                if (context) {\n                    var value = context.get(variable.value);\n                    if (value) {\n                        type = value.type;\n                        var kind = info.query.getTypeKind(type);\n                        if (kind === symbols.BuiltinType.Any || kind == symbols.BuiltinType.Unbound) {\n                            // The any type is not very useful here. For special cases, such as ngFor, we can do\n                            // better.\n                            type = refinedVariableType(type, info, current);\n                        }\n                    }\n                }\n                if (!type) {\n                    type = info.query.getBuiltinType(symbols.BuiltinType.Any);\n                }\n                result.push({\n                    name: name_1,\n                    kind: 'variable', type: type, get definition() { return getDefinitionOf(info, variable); }\n                });\n            };\n            for (var _i = 0, _a = current.variables; _i < _a.length; _i++) {\n                var variable = _a[_i];\n                _loop_2(variable);\n            }\n        }\n        current = path$$1.parentOf(current);\n    }\n    return result;\n}\nfunction refinedVariableType(type, info, templateElement) {\n    // Special case the ngFor directive\n    var ngForDirective = templateElement.directives.find(function (d) {\n        var name = compiler_1.identifierName(d.directive.type);\n        return name == 'NgFor' || name == 'NgForOf';\n    });\n    if (ngForDirective) {\n        var ngForOfBinding = ngForDirective.inputs.find(function (i) { return i.directiveName == 'ngForOf'; });\n        if (ngForOfBinding) {\n            var bindingType = new expression_type.AstType(info.members, info.query, {}).getType(ngForOfBinding.value);\n            if (bindingType) {\n                var result = info.query.getElementType(bindingType);\n                if (result) {\n                    return result;\n                }\n            }\n        }\n    }\n    // We can't do better, return any\n    return info.query.getBuiltinType(symbols.BuiltinType.Any);\n}\nfunction getEventDeclaration(info, includeEvent) {\n    var result = [];\n    if (includeEvent) {\n        // TODO: Determine the type of the event parameter based on the Observable<T> or EventEmitter<T>\n        // of the event.\n        result = [{ name: '$event', kind: 'variable', type: info.query.getBuiltinType(symbols.BuiltinType.Any) }];\n    }\n    return result;\n}\nfunction getExpressionScope(info, path$$1, includeEvent) {\n    var result = info.members;\n    var references = getReferences(info);\n    var variables = getVarDeclarations(info, path$$1);\n    var events = getEventDeclaration(info, includeEvent);\n    if (references.length || variables.length || events.length) {\n        var referenceTable = info.query.createSymbolTable(references);\n        var variableTable = info.query.createSymbolTable(variables);\n        var eventsTable = info.query.createSymbolTable(events);\n        result = info.query.mergeSymbolTable([result, referenceTable, variableTable, eventsTable]);\n    }\n    return result;\n}\nexports.getExpressionScope = getExpressionScope;\nvar ExpressionDiagnosticsVisitor = (function (_super) {\n    __extends(ExpressionDiagnosticsVisitor, _super);\n    function ExpressionDiagnosticsVisitor(info, getExpressionScope) {\n        var _this = _super.call(this) || this;\n        _this.info = info;\n        _this.getExpressionScope = getExpressionScope;\n        _this.diagnostics = [];\n        _this.path = new compiler_1.AstPath([]);\n        return _this;\n    }\n    ExpressionDiagnosticsVisitor.prototype.visitDirective = function (ast, context) {\n        // Override the default child visitor to ignore the host properties of a directive.\n        if (ast.inputs && ast.inputs.length) {\n            compiler_1.templateVisitAll(this, ast.inputs, context);\n        }\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitBoundText = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.value, ast.sourceSpan.start.offset, false);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitDirectiveProperty = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.value, this.attributeValueLocation(ast), false);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitElementProperty = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.value, this.attributeValueLocation(ast), false);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitEvent = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.handler, this.attributeValueLocation(ast), true);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitVariable = function (ast) {\n        var directive = this.directiveSummary;\n        if (directive && ast.value) {\n            var context = this.info.query.getTemplateContext(directive.type.reference);\n            if (context && !context.has(ast.value)) {\n                if (ast.value === '$implicit') {\n                    this.reportError('The template context does not have an implicit value', spanOf(ast.sourceSpan));\n                }\n                else {\n                    this.reportError(\"The template context does not defined a member called '\" + ast.value + \"'\", spanOf(ast.sourceSpan));\n                }\n            }\n        }\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitElement = function (ast, context) {\n        this.push(ast);\n        _super.prototype.visitElement.call(this, ast, context);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\n        var previousDirectiveSummary = this.directiveSummary;\n        this.push(ast);\n        // Find directive that refernces this template\n        this.directiveSummary =\n            ast.directives.map(function (d) { return d.directive; }).find(function (d) { return hasTemplateReference(d.type); });\n        // Process children\n        _super.prototype.visitEmbeddedTemplate.call(this, ast, context);\n        this.pop();\n        this.directiveSummary = previousDirectiveSummary;\n    };\n    ExpressionDiagnosticsVisitor.prototype.attributeValueLocation = function (ast) {\n        var path$$1 = compiler_1.findNode(this.info.htmlAst, ast.sourceSpan.start.offset);\n        var last = path$$1.tail;\n        if (last instanceof compiler_1.Attribute && last.valueSpan) {\n            // Add 1 for the quote.\n            return last.valueSpan.start.offset + 1;\n        }\n        return ast.sourceSpan.start.offset;\n    };\n    ExpressionDiagnosticsVisitor.prototype.diagnoseExpression = function (ast, offset, includeEvent) {\n        var _this = this;\n        var scope = this.getExpressionScope(this.path, includeEvent);\n        (_a = this.diagnostics).push.apply(_a, getExpressionDiagnostics(scope, ast, this.info.query, {\n            event: includeEvent\n        }).map(function (d) { return ({\n            span: offsetSpan(d.ast.span, offset + _this.info.offset),\n            kind: d.kind,\n            message: d.message\n        }); }));\n        var _a;\n    };\n    ExpressionDiagnosticsVisitor.prototype.push = function (ast) { this.path.push(ast); };\n    ExpressionDiagnosticsVisitor.prototype.pop = function () { this.path.pop(); };\n    ExpressionDiagnosticsVisitor.prototype.reportError = function (message, span) {\n        if (span) {\n            this.diagnostics.push({ span: offsetSpan(span, this.info.offset), kind: expression_type.DiagnosticKind.Error, message: message });\n        }\n    };\n    ExpressionDiagnosticsVisitor.prototype.reportWarning = function (message, span) {\n        this.diagnostics.push({ span: offsetSpan(span, this.info.offset), kind: expression_type.DiagnosticKind.Warning, message: message });\n    };\n    return ExpressionDiagnosticsVisitor;\n}(compiler_1.RecursiveTemplateAstVisitor));\nfunction hasTemplateReference(type) {\n    if (type.diDeps) {\n        for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n            var diDep = _a[_i];\n            if (diDep.token && diDep.token.identifier &&\n                compiler_1.identifierName(diDep.token.identifier) == 'TemplateRef')\n                return true;\n        }\n    }\n    return false;\n}\nfunction offsetSpan(span, amount) {\n    return { start: span.start + amount, end: span.end + amount };\n}\nfunction spanOf(sourceSpan) {\n    return { start: sourceSpan.start.offset, end: sourceSpan.end.offset };\n}\n\n});\n\nvar typescript_symbols = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\n// In TypeScript 2.1 these flags moved\n// These helpers work for both 2.0 and 2.1.\nvar isPrivate = ts__default.ModifierFlags ?\n    (function (node) {\n        return !!(ts__default.getCombinedModifierFlags(node) & ts__default.ModifierFlags.Private);\n    }) :\n    (function (node) { return !!(node.flags & ts__default.NodeFlags.Private); });\nvar isReferenceType = ts__default.ObjectFlags ?\n    (function (type) {\n        return !!(type.flags & ts__default.TypeFlags.Object &&\n            type.objectFlags & ts__default.ObjectFlags.Reference);\n    }) :\n    (function (type) { return !!(type.flags & ts__default.TypeFlags.Reference); });\nfunction getSymbolQuery(program, checker, source, fetchPipes) {\n    return new TypeScriptSymbolQuery(program, checker, source, fetchPipes);\n}\nexports.getSymbolQuery = getSymbolQuery;\nfunction getClassMembers(program, checker, staticSymbol) {\n    var declaration = getClassFromStaticSymbol(program, staticSymbol);\n    if (declaration) {\n        var type = checker.getTypeAtLocation(declaration);\n        var node = program.getSourceFile(staticSymbol.filePath);\n        return new TypeWrapper(type, { node: node, program: program, checker: checker }).members();\n    }\n}\nexports.getClassMembers = getClassMembers;\nfunction getClassMembersFromDeclaration(program, checker, source, declaration) {\n    var type = checker.getTypeAtLocation(declaration);\n    return new TypeWrapper(type, { node: source, program: program, checker: checker }).members();\n}\nexports.getClassMembersFromDeclaration = getClassMembersFromDeclaration;\nfunction getClassFromStaticSymbol(program, type) {\n    var source = program.getSourceFile(type.filePath);\n    if (source) {\n        return ts__default.forEachChild(source, function (child) {\n            if (child.kind === ts__default.SyntaxKind.ClassDeclaration) {\n                var classDeclaration = child;\n                if (classDeclaration.name != null && classDeclaration.name.text === type.name) {\n                    return classDeclaration;\n                }\n            }\n        });\n    }\n    return undefined;\n}\nexports.getClassFromStaticSymbol = getClassFromStaticSymbol;\nfunction getPipesTable(source, program, checker, pipes) {\n    return new PipesTable(pipes, { program: program, checker: checker, node: source });\n}\nexports.getPipesTable = getPipesTable;\nvar TypeScriptSymbolQuery = (function () {\n    function TypeScriptSymbolQuery(program, checker, source, fetchPipes) {\n        this.program = program;\n        this.checker = checker;\n        this.source = source;\n        this.fetchPipes = fetchPipes;\n        this.typeCache = new Map();\n    }\n    TypeScriptSymbolQuery.prototype.getTypeKind = function (symbol) { return typeKindOf(this.getTsTypeOf(symbol)); };\n    TypeScriptSymbolQuery.prototype.getBuiltinType = function (kind) {\n        var result = this.typeCache.get(kind);\n        if (!result) {\n            var type = getBuiltinTypeFromTs(kind, { checker: this.checker, node: this.source, program: this.program });\n            result =\n                new TypeWrapper(type, { program: this.program, checker: this.checker, node: this.source });\n            this.typeCache.set(kind, result);\n        }\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.getTypeUnion = function () {\n        var types = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            types[_i] = arguments[_i];\n        }\n        // No API exists so return any if the types are not all the same type.\n        var result = undefined;\n        if (types.length) {\n            result = types[0];\n            for (var i = 1; i < types.length; i++) {\n                if (types[i] != result) {\n                    result = undefined;\n                    break;\n                }\n            }\n        }\n        return result || this.getBuiltinType(symbols.BuiltinType.Any);\n    };\n    TypeScriptSymbolQuery.prototype.getArrayType = function (type) { return this.getBuiltinType(symbols.BuiltinType.Any); };\n    TypeScriptSymbolQuery.prototype.getElementType = function (type) {\n        if (type instanceof TypeWrapper) {\n            var elementType = getTypeParameterOf(type.tsType, 'Array');\n            if (elementType) {\n                return new TypeWrapper(elementType, type.context);\n            }\n        }\n    };\n    TypeScriptSymbolQuery.prototype.getNonNullableType = function (symbol) {\n        if (symbol instanceof TypeWrapper && (typeof this.checker.getNonNullableType == 'function')) {\n            var tsType = symbol.tsType;\n            var nonNullableType = this.checker.getNonNullableType(tsType);\n            if (nonNullableType != tsType) {\n                return new TypeWrapper(nonNullableType, symbol.context);\n            }\n            else if (nonNullableType == tsType) {\n                return symbol;\n            }\n        }\n        return this.getBuiltinType(symbols.BuiltinType.Any);\n    };\n    TypeScriptSymbolQuery.prototype.getPipes = function () {\n        var result = this.pipesCache;\n        if (!result) {\n            result = this.pipesCache = this.fetchPipes();\n        }\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.getTemplateContext = function (type) {\n        var context = { node: this.source, program: this.program, checker: this.checker };\n        var typeSymbol = findClassSymbolInContext(type, context);\n        if (typeSymbol) {\n            var contextType = this.getTemplateRefContextType(typeSymbol);\n            if (contextType)\n                return new SymbolWrapper(contextType, context).members();\n        }\n    };\n    TypeScriptSymbolQuery.prototype.getTypeSymbol = function (type) {\n        var context = { node: this.source, program: this.program, checker: this.checker };\n        var typeSymbol = findClassSymbolInContext(type, context);\n        return typeSymbol && new SymbolWrapper(typeSymbol, context);\n    };\n    TypeScriptSymbolQuery.prototype.createSymbolTable = function (symbols$$2) {\n        var result = new MapSymbolTable();\n        result.addAll(symbols$$2.map(function (s) { return new DeclaredSymbol(s); }));\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.mergeSymbolTable = function (symbolTables) {\n        var result = new MapSymbolTable();\n        for (var _i = 0, symbolTables_1 = symbolTables; _i < symbolTables_1.length; _i++) {\n            var symbolTable = symbolTables_1[_i];\n            result.addAll(symbolTable.values());\n        }\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.getSpanAt = function (line, column) {\n        return spanAt(this.source, line, column);\n    };\n    TypeScriptSymbolQuery.prototype.getTemplateRefContextType = function (typeSymbol) {\n        var type = this.checker.getTypeOfSymbolAtLocation(typeSymbol, this.source);\n        var constructor = type.symbol && type.symbol.members &&\n            getFromSymbolTable(type.symbol.members, '__constructor');\n        if (constructor) {\n            var constructorDeclaration = constructor.declarations[0];\n            for (var _i = 0, _a = constructorDeclaration.parameters; _i < _a.length; _i++) {\n                var parameter = _a[_i];\n                var type_1 = this.checker.getTypeAtLocation(parameter.type);\n                if (type_1.symbol.name == 'TemplateRef' && isReferenceType(type_1)) {\n                    var typeReference = type_1;\n                    if (typeReference.typeArguments && typeReference.typeArguments.length === 1) {\n                        return typeReference.typeArguments[0].symbol;\n                    }\n                }\n            }\n        }\n    };\n    TypeScriptSymbolQuery.prototype.getTsTypeOf = function (symbol) {\n        var type = this.getTypeWrapper(symbol);\n        return type && type.tsType;\n    };\n    TypeScriptSymbolQuery.prototype.getTypeWrapper = function (symbol) {\n        var type = undefined;\n        if (symbol instanceof TypeWrapper) {\n            type = symbol;\n        }\n        else if (symbol.type instanceof TypeWrapper) {\n            type = symbol.type;\n        }\n        return type;\n    };\n    return TypeScriptSymbolQuery;\n}());\nfunction typeCallable(type) {\n    var signatures = type.getCallSignatures();\n    return signatures && signatures.length != 0;\n}\nfunction signaturesOf(type, context) {\n    return type.getCallSignatures().map(function (s) { return new SignatureWrapper(s, context); });\n}\nfunction selectSignature(type, context, types) {\n    // TODO: Do a better job of selecting the right signature.\n    var signatures = type.getCallSignatures();\n    return signatures.length ? new SignatureWrapper(signatures[0], context) : undefined;\n}\nvar TypeWrapper = (function () {\n    function TypeWrapper(tsType, context) {\n        this.tsType = tsType;\n        this.context = context;\n        this.kind = 'type';\n        this.language = 'typescript';\n        this.type = undefined;\n        this.container = undefined;\n        this.public = true;\n        if (!tsType) {\n            throw Error('Internal: null type');\n        }\n    }\n    Object.defineProperty(TypeWrapper.prototype, \"name\", {\n        get: function () {\n            var symbol = this.tsType.symbol;\n            return (symbol && symbol.name) || '<anonymous>';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeWrapper.prototype, \"callable\", {\n        get: function () { return typeCallable(this.tsType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeWrapper.prototype, \"nullable\", {\n        get: function () {\n            return this.context.checker.getNonNullableType(this.tsType) != this.tsType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeWrapper.prototype, \"definition\", {\n        get: function () {\n            var symbol = this.tsType.getSymbol();\n            return symbol ? definitionFromTsSymbol(symbol) : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeWrapper.prototype.members = function () {\n        return new SymbolTableWrapper(this.tsType.getProperties(), this.context);\n    };\n    TypeWrapper.prototype.signatures = function () { return signaturesOf(this.tsType, this.context); };\n    TypeWrapper.prototype.selectSignature = function (types) {\n        return selectSignature(this.tsType, this.context, types);\n    };\n    TypeWrapper.prototype.indexed = function (argument) { return undefined; };\n    return TypeWrapper;\n}());\nvar SymbolWrapper = (function () {\n    function SymbolWrapper(symbol, context) {\n        this.context = context;\n        this.nullable = false;\n        this.language = 'typescript';\n        this.symbol = symbol && context && (symbol.flags & ts__default.SymbolFlags.Alias) ?\n            context.checker.getAliasedSymbol(symbol) :\n            symbol;\n    }\n    Object.defineProperty(SymbolWrapper.prototype, \"name\", {\n        get: function () { return this.symbol.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"kind\", {\n        get: function () { return this.callable ? 'method' : 'property'; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"type\", {\n        get: function () { return new TypeWrapper(this.tsType, this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"container\", {\n        get: function () { return getContainerOf(this.symbol, this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"public\", {\n        get: function () {\n            // Symbols that are not explicitly made private are public.\n            return !isSymbolPrivate(this.symbol);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"callable\", {\n        get: function () { return typeCallable(this.tsType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"definition\", {\n        get: function () { return definitionFromTsSymbol(this.symbol); },\n        enumerable: true,\n        configurable: true\n    });\n    SymbolWrapper.prototype.members = function () {\n        if (!this._members) {\n            if ((this.symbol.flags & (ts__default.SymbolFlags.Class | ts__default.SymbolFlags.Interface)) != 0) {\n                var declaredType = this.context.checker.getDeclaredTypeOfSymbol(this.symbol);\n                var typeWrapper = new TypeWrapper(declaredType, this.context);\n                this._members = typeWrapper.members();\n            }\n            else {\n                this._members = new SymbolTableWrapper(this.symbol.members, this.context);\n            }\n        }\n        return this._members;\n    };\n    SymbolWrapper.prototype.signatures = function () { return signaturesOf(this.tsType, this.context); };\n    SymbolWrapper.prototype.selectSignature = function (types) {\n        return selectSignature(this.tsType, this.context, types);\n    };\n    SymbolWrapper.prototype.indexed = function (argument) { return undefined; };\n    Object.defineProperty(SymbolWrapper.prototype, \"tsType\", {\n        get: function () {\n            var type = this._tsType;\n            if (!type) {\n                type = this._tsType =\n                    this.context.checker.getTypeOfSymbolAtLocation(this.symbol, this.context.node);\n            }\n            return type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SymbolWrapper;\n}());\nvar DeclaredSymbol = (function () {\n    function DeclaredSymbol(declaration) {\n        this.declaration = declaration;\n        this.language = 'ng-template';\n        this.nullable = false;\n        this.public = true;\n    }\n    Object.defineProperty(DeclaredSymbol.prototype, \"name\", {\n        get: function () { return this.declaration.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"kind\", {\n        get: function () { return this.declaration.kind; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"container\", {\n        get: function () { return undefined; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"type\", {\n        get: function () { return this.declaration.type; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"callable\", {\n        get: function () { return this.declaration.type.callable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"definition\", {\n        get: function () { return this.declaration.definition; },\n        enumerable: true,\n        configurable: true\n    });\n    DeclaredSymbol.prototype.members = function () { return this.declaration.type.members(); };\n    DeclaredSymbol.prototype.signatures = function () { return this.declaration.type.signatures(); };\n    DeclaredSymbol.prototype.selectSignature = function (types) {\n        return this.declaration.type.selectSignature(types);\n    };\n    DeclaredSymbol.prototype.indexed = function (argument) { return undefined; };\n    return DeclaredSymbol;\n}());\nvar SignatureWrapper = (function () {\n    function SignatureWrapper(signature, context) {\n        this.signature = signature;\n        this.context = context;\n    }\n    Object.defineProperty(SignatureWrapper.prototype, \"arguments\", {\n        get: function () {\n            return new SymbolTableWrapper(this.signature.getParameters(), this.context);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SignatureWrapper.prototype, \"result\", {\n        get: function () { return new TypeWrapper(this.signature.getReturnType(), this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    return SignatureWrapper;\n}());\nvar SignatureResultOverride = (function () {\n    function SignatureResultOverride(signature, resultType) {\n        this.signature = signature;\n        this.resultType = resultType;\n    }\n    Object.defineProperty(SignatureResultOverride.prototype, \"arguments\", {\n        get: function () { return this.signature.arguments; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SignatureResultOverride.prototype, \"result\", {\n        get: function () { return this.resultType; },\n        enumerable: true,\n        configurable: true\n    });\n    return SignatureResultOverride;\n}());\nvar toSymbolTable = isTypescriptVersion('2.2') ?\n    (function (symbols$$2) {\n        var result = new Map();\n        for (var _i = 0, symbols_2 = symbols$$2; _i < symbols_2.length; _i++) {\n            var symbol = symbols_2[_i];\n            result.set(symbol.name, symbol);\n        }\n        return result;\n    }) :\n    (function (symbols$$2) {\n        var result = {};\n        for (var _i = 0, symbols_3 = symbols$$2; _i < symbols_3.length; _i++) {\n            var symbol = symbols_3[_i];\n            result[symbol.name] = symbol;\n        }\n        return result;\n    });\nfunction toSymbols(symbolTable) {\n    if (!symbolTable)\n        return [];\n    var table = symbolTable;\n    if (typeof table.values === 'function') {\n        return Array.from(table.values());\n    }\n    var result = [];\n    var own = typeof table.hasOwnProperty === 'function' ?\n        function (name) { return table.hasOwnProperty(name); } :\n        function (name) { return !!table[name]; };\n    for (var name_1 in table) {\n        if (own(name_1)) {\n            result.push(table[name_1]);\n        }\n    }\n    return result;\n}\nvar SymbolTableWrapper = (function () {\n    function SymbolTableWrapper(symbols$$2, context) {\n        this.context = context;\n        symbols$$2 = symbols$$2 || [];\n        if (Array.isArray(symbols$$2)) {\n            this.symbols = symbols$$2;\n            this.symbolTable = toSymbolTable(symbols$$2);\n        }\n        else {\n            this.symbols = toSymbols(symbols$$2);\n            this.symbolTable = symbols$$2;\n        }\n    }\n    Object.defineProperty(SymbolTableWrapper.prototype, \"size\", {\n        get: function () { return this.symbols.length; },\n        enumerable: true,\n        configurable: true\n    });\n    SymbolTableWrapper.prototype.get = function (key) {\n        var symbol = getFromSymbolTable(this.symbolTable, key);\n        return symbol ? new SymbolWrapper(symbol, this.context) : undefined;\n    };\n    SymbolTableWrapper.prototype.has = function (key) {\n        var table = this.symbolTable;\n        return (typeof table.has === 'function') ? table.has(key) : table[key] != null;\n    };\n    SymbolTableWrapper.prototype.values = function () {\n        var _this = this;\n        return this.symbols.map(function (s) { return new SymbolWrapper(s, _this.context); });\n    };\n    return SymbolTableWrapper;\n}());\nvar MapSymbolTable = (function () {\n    function MapSymbolTable() {\n        this.map = new Map();\n        this._values = [];\n    }\n    Object.defineProperty(MapSymbolTable.prototype, \"size\", {\n        get: function () { return this.map.size; },\n        enumerable: true,\n        configurable: true\n    });\n    MapSymbolTable.prototype.get = function (key) { return this.map.get(key); };\n    MapSymbolTable.prototype.add = function (symbol) {\n        if (this.map.has(symbol.name)) {\n            var previous = this.map.get(symbol.name);\n            this._values[this._values.indexOf(previous)] = symbol;\n        }\n        this.map.set(symbol.name, symbol);\n        this._values.push(symbol);\n    };\n    MapSymbolTable.prototype.addAll = function (symbols$$2) {\n        for (var _i = 0, symbols_4 = symbols$$2; _i < symbols_4.length; _i++) {\n            var symbol = symbols_4[_i];\n            this.add(symbol);\n        }\n    };\n    MapSymbolTable.prototype.has = function (key) { return this.map.has(key); };\n    MapSymbolTable.prototype.values = function () {\n        // Switch to this.map.values once iterables are supported by the target language.\n        return this._values;\n    };\n    return MapSymbolTable;\n}());\nvar PipesTable = (function () {\n    function PipesTable(pipes, context) {\n        this.pipes = pipes;\n        this.context = context;\n    }\n    Object.defineProperty(PipesTable.prototype, \"size\", {\n        get: function () { return this.pipes.length; },\n        enumerable: true,\n        configurable: true\n    });\n    PipesTable.prototype.get = function (key) {\n        var pipe = this.pipes.find(function (pipe) { return pipe.name == key; });\n        if (pipe) {\n            return new PipeSymbol(pipe, this.context);\n        }\n    };\n    PipesTable.prototype.has = function (key) { return this.pipes.find(function (pipe) { return pipe.name == key; }) != null; };\n    PipesTable.prototype.values = function () {\n        var _this = this;\n        return this.pipes.map(function (pipe) { return new PipeSymbol(pipe, _this.context); });\n    };\n    return PipesTable;\n}());\nvar PipeSymbol = (function () {\n    function PipeSymbol(pipe, context) {\n        this.pipe = pipe;\n        this.context = context;\n        this.kind = 'pipe';\n        this.language = 'typescript';\n        this.container = undefined;\n        this.callable = true;\n        this.nullable = false;\n        this.public = true;\n    }\n    Object.defineProperty(PipeSymbol.prototype, \"name\", {\n        get: function () { return this.pipe.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PipeSymbol.prototype, \"type\", {\n        get: function () { return new TypeWrapper(this.tsType, this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PipeSymbol.prototype, \"definition\", {\n        get: function () {\n            var symbol = this.tsType.getSymbol();\n            return symbol ? definitionFromTsSymbol(symbol) : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PipeSymbol.prototype.members = function () { return EmptyTable.instance; };\n    PipeSymbol.prototype.signatures = function () { return signaturesOf(this.tsType, this.context); };\n    PipeSymbol.prototype.selectSignature = function (types) {\n        var signature = selectSignature(this.tsType, this.context, types);\n        if (types.length == 1) {\n            var parameterType = types[0];\n            if (parameterType instanceof TypeWrapper) {\n                var resultType = undefined;\n                switch (this.name) {\n                    case 'async':\n                        switch (parameterType.name) {\n                            case 'Observable':\n                            case 'Promise':\n                            case 'EventEmitter':\n                                resultType = getTypeParameterOf(parameterType.tsType, parameterType.name);\n                                break;\n                            default:\n                                resultType = getBuiltinTypeFromTs(symbols.BuiltinType.Any, this.context);\n                                break;\n                        }\n                        break;\n                    case 'slice':\n                        resultType = getTypeParameterOf(parameterType.tsType, 'Array');\n                        break;\n                }\n                if (resultType) {\n                    signature = new SignatureResultOverride(signature, new TypeWrapper(resultType, parameterType.context));\n                }\n            }\n        }\n        return signature;\n    };\n    PipeSymbol.prototype.indexed = function (argument) { return undefined; };\n    Object.defineProperty(PipeSymbol.prototype, \"tsType\", {\n        get: function () {\n            var type = this._tsType;\n            if (!type) {\n                var classSymbol = this.findClassSymbol(this.pipe.type.reference);\n                if (classSymbol) {\n                    type = this._tsType = this.findTransformMethodType(classSymbol);\n                }\n                if (!type) {\n                    type = this._tsType = getBuiltinTypeFromTs(symbols.BuiltinType.Any, this.context);\n                }\n            }\n            return type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PipeSymbol.prototype.findClassSymbol = function (type) {\n        return findClassSymbolInContext(type, this.context);\n    };\n    PipeSymbol.prototype.findTransformMethodType = function (classSymbol) {\n        var classType = this.context.checker.getDeclaredTypeOfSymbol(classSymbol);\n        if (classType) {\n            var transform = classType.getProperty('transform');\n            if (transform) {\n                return this.context.checker.getTypeOfSymbolAtLocation(transform, this.context.node);\n            }\n        }\n    };\n    return PipeSymbol;\n}());\nfunction findClassSymbolInContext(type, context) {\n    var sourceFile = context.program.getSourceFile(type.filePath);\n    if (sourceFile) {\n        var moduleSymbol = sourceFile.module || sourceFile.symbol;\n        var exports_1 = context.checker.getExportsOfModule(moduleSymbol);\n        return (exports_1 || []).find(function (symbol) { return symbol.name == type.name; });\n    }\n}\nvar EmptyTable = (function () {\n    function EmptyTable() {\n        this.size = 0;\n    }\n    EmptyTable.prototype.get = function (key) { return undefined; };\n    EmptyTable.prototype.has = function (key) { return false; };\n    EmptyTable.prototype.values = function () { return []; };\n    EmptyTable.instance = new EmptyTable();\n    return EmptyTable;\n}());\nfunction isSymbolPrivate(s) {\n    return !!s.valueDeclaration && isPrivate(s.valueDeclaration);\n}\nfunction getBuiltinTypeFromTs(kind, context) {\n    var type;\n    var checker = context.checker;\n    var node = context.node;\n    switch (kind) {\n        case symbols.BuiltinType.Any:\n            type = checker.getTypeAtLocation(setParents({\n                kind: ts__default.SyntaxKind.AsExpression,\n                expression: { kind: ts__default.SyntaxKind.TrueKeyword },\n                type: { kind: ts__default.SyntaxKind.AnyKeyword }\n            }, node));\n            break;\n        case symbols.BuiltinType.Boolean:\n            type =\n                checker.getTypeAtLocation(setParents({ kind: ts__default.SyntaxKind.TrueKeyword }, node));\n            break;\n        case symbols.BuiltinType.Null:\n            type =\n                checker.getTypeAtLocation(setParents({ kind: ts__default.SyntaxKind.NullKeyword }, node));\n            break;\n        case symbols.BuiltinType.Number:\n            var numeric = { kind: ts__default.SyntaxKind.NumericLiteral };\n            setParents({ kind: ts__default.SyntaxKind.ExpressionStatement, expression: numeric }, node);\n            type = checker.getTypeAtLocation(numeric);\n            break;\n        case symbols.BuiltinType.String:\n            type = checker.getTypeAtLocation(setParents({ kind: ts__default.SyntaxKind.NoSubstitutionTemplateLiteral }, node));\n            break;\n        case symbols.BuiltinType.Undefined:\n            type = checker.getTypeAtLocation(setParents({\n                kind: ts__default.SyntaxKind.VoidExpression,\n                expression: { kind: ts__default.SyntaxKind.NumericLiteral }\n            }, node));\n            break;\n        default:\n            throw new Error(\"Internal error, unhandled literal kind \" + kind + \":\" + symbols.BuiltinType[kind]);\n    }\n    return type;\n}\nfunction setParents(node, parent) {\n    node.parent = parent;\n    ts__default.forEachChild(node, function (child) { return setParents(child, node); });\n    return node;\n}\nfunction spanAt(sourceFile, line, column) {\n    if (line != null && column != null) {\n        var position_1 = ts__default.getPositionOfLineAndCharacter(sourceFile, line, column);\n        var findChild = function findChild(node) {\n            if (node.kind > ts__default.SyntaxKind.LastToken && node.pos <= position_1 && node.end > position_1) {\n                var betterNode = ts__default.forEachChild(node, findChild);\n                return betterNode || node;\n            }\n        };\n        var node = ts__default.forEachChild(sourceFile, findChild);\n        if (node) {\n            return { start: node.getStart(), end: node.getEnd() };\n        }\n    }\n}\nfunction definitionFromTsSymbol(symbol) {\n    var declarations = symbol.declarations;\n    if (declarations) {\n        return declarations.map(function (declaration) {\n            var sourceFile = declaration.getSourceFile();\n            return {\n                fileName: sourceFile.fileName,\n                span: { start: declaration.getStart(), end: declaration.getEnd() }\n            };\n        });\n    }\n}\nfunction parentDeclarationOf(node) {\n    while (node) {\n        switch (node.kind) {\n            case ts__default.SyntaxKind.ClassDeclaration:\n            case ts__default.SyntaxKind.InterfaceDeclaration:\n                return node;\n            case ts__default.SyntaxKind.SourceFile:\n                return undefined;\n        }\n        node = node.parent;\n    }\n}\nfunction getContainerOf(symbol, context) {\n    if (symbol.getFlags() & ts__default.SymbolFlags.ClassMember && symbol.declarations) {\n        for (var _i = 0, _a = symbol.declarations; _i < _a.length; _i++) {\n            var declaration = _a[_i];\n            var parent_1 = parentDeclarationOf(declaration);\n            if (parent_1) {\n                var type = context.checker.getTypeAtLocation(parent_1);\n                if (type) {\n                    return new TypeWrapper(type, context);\n                }\n            }\n        }\n    }\n}\nfunction getTypeParameterOf(type, name) {\n    if (type && type.symbol && type.symbol.name == name) {\n        var typeArguments = type.typeArguments;\n        if (typeArguments && typeArguments.length <= 1) {\n            return typeArguments[0];\n        }\n    }\n}\nfunction typeKindOf(type) {\n    if (type) {\n        if (type.flags & ts__default.TypeFlags.Any) {\n            return symbols.BuiltinType.Any;\n        }\n        else if (type.flags & (ts__default.TypeFlags.String | ts__default.TypeFlags.StringLike | ts__default.TypeFlags.StringLiteral)) {\n            return symbols.BuiltinType.String;\n        }\n        else if (type.flags & (ts__default.TypeFlags.Number | ts__default.TypeFlags.NumberLike)) {\n            return symbols.BuiltinType.Number;\n        }\n        else if (type.flags & (ts__default.TypeFlags.Undefined)) {\n            return symbols.BuiltinType.Undefined;\n        }\n        else if (type.flags & (ts__default.TypeFlags.Null)) {\n            return symbols.BuiltinType.Null;\n        }\n        else if (type.flags & ts__default.TypeFlags.Union) {\n            // If all the constituent types of a union are the same kind, it is also that kind.\n            var candidate = null;\n            var unionType = type;\n            if (unionType.types.length > 0) {\n                candidate = typeKindOf(unionType.types[0]);\n                for (var _i = 0, _a = unionType.types; _i < _a.length; _i++) {\n                    var subType = _a[_i];\n                    if (candidate != typeKindOf(subType)) {\n                        return symbols.BuiltinType.Other;\n                    }\n                }\n            }\n            if (candidate != null) {\n                return candidate;\n            }\n        }\n        else if (type.flags & ts__default.TypeFlags.TypeParameter) {\n            return symbols.BuiltinType.Unbound;\n        }\n    }\n    return symbols.BuiltinType.Other;\n}\nfunction getFromSymbolTable(symbolTable, key) {\n    var table = symbolTable;\n    var symbol;\n    if (typeof table.get === 'function') {\n        // TS 2.2 uses a Map\n        symbol = table.get(key);\n    }\n    else {\n        // TS pre-2.2 uses an object\n        symbol = table[key];\n    }\n    return symbol;\n}\nfunction toNumbers(value) {\n    return value ? value.split('.').map(function (v) { return +v; }) : [];\n}\nfunction compareNumbers(a, b) {\n    for (var i = 0; i < a.length && i < b.length; i++) {\n        if (a[i] > b[i])\n            return 1;\n        if (a[i] < b[i])\n            return -1;\n    }\n    return 0;\n}\nfunction isTypescriptVersion(low, high) {\n    var tsNumbers = toNumbers(ts__default.version);\n    return compareNumbers(toNumbers(low), tsNumbers) <= 0 &&\n        compareNumbers(toNumbers(high), tsNumbers) >= 0;\n}\n\n});\n\nvar schema = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Metadata Schema\n// If you make a backwards incompatible change to the schema, increment the METADTA_VERSION number.\n// If you make a backwards compatible change to the metadata (such as adding an option field) then\n// leave METADATA_VERSION the same. If possible, supply as many versions of the metadata that can\n// represent the semantics of the file in an array. For example, when generating a version 2 file,\n// if version 1 can accurately represent the metadata, generate both version 1 and version 2 in\n// an array.\nexports.METADATA_VERSION = 4;\nfunction isModuleMetadata(value) {\n    return value && value.__symbolic === 'module';\n}\nexports.isModuleMetadata = isModuleMetadata;\nfunction isClassMetadata(value) {\n    return value && value.__symbolic === 'class';\n}\nexports.isClassMetadata = isClassMetadata;\nfunction isInterfaceMetadata(value) {\n    return value && value.__symbolic === 'interface';\n}\nexports.isInterfaceMetadata = isInterfaceMetadata;\nfunction isMemberMetadata(value) {\n    if (value) {\n        switch (value.__symbolic) {\n            case 'constructor':\n            case 'method':\n            case 'property':\n                return true;\n        }\n    }\n    return false;\n}\nexports.isMemberMetadata = isMemberMetadata;\nfunction isMethodMetadata(value) {\n    return value && (value.__symbolic === 'constructor' || value.__symbolic === 'method');\n}\nexports.isMethodMetadata = isMethodMetadata;\nfunction isConstructorMetadata(value) {\n    return value && value.__symbolic === 'constructor';\n}\nexports.isConstructorMetadata = isConstructorMetadata;\nfunction isFunctionMetadata(value) {\n    return value && value.__symbolic === 'function';\n}\nexports.isFunctionMetadata = isFunctionMetadata;\nfunction isMetadataSymbolicExpression(value) {\n    if (value) {\n        switch (value.__symbolic) {\n            case 'binary':\n            case 'call':\n            case 'index':\n            case 'new':\n            case 'pre':\n            case 'reference':\n            case 'select':\n            case 'spread':\n            case 'if':\n                return true;\n        }\n    }\n    return false;\n}\nexports.isMetadataSymbolicExpression = isMetadataSymbolicExpression;\nfunction isMetadataSymbolicBinaryExpression(value) {\n    return value && value.__symbolic === 'binary';\n}\nexports.isMetadataSymbolicBinaryExpression = isMetadataSymbolicBinaryExpression;\nfunction isMetadataSymbolicIndexExpression(value) {\n    return value && value.__symbolic === 'index';\n}\nexports.isMetadataSymbolicIndexExpression = isMetadataSymbolicIndexExpression;\nfunction isMetadataSymbolicCallExpression(value) {\n    return value && (value.__symbolic === 'call' || value.__symbolic === 'new');\n}\nexports.isMetadataSymbolicCallExpression = isMetadataSymbolicCallExpression;\nfunction isMetadataSymbolicPrefixExpression(value) {\n    return value && value.__symbolic === 'pre';\n}\nexports.isMetadataSymbolicPrefixExpression = isMetadataSymbolicPrefixExpression;\nfunction isMetadataSymbolicIfExpression(value) {\n    return value && value.__symbolic === 'if';\n}\nexports.isMetadataSymbolicIfExpression = isMetadataSymbolicIfExpression;\nfunction isMetadataGlobalReferenceExpression(value) {\n    return value && value.name && !value.module && isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataGlobalReferenceExpression = isMetadataGlobalReferenceExpression;\nfunction isMetadataModuleReferenceExpression(value) {\n    return value && value.module && !value.name && !value.default &&\n        isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataModuleReferenceExpression = isMetadataModuleReferenceExpression;\nfunction isMetadataImportedSymbolReferenceExpression(value) {\n    return value && value.module && !!value.name && isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataImportedSymbolReferenceExpression = isMetadataImportedSymbolReferenceExpression;\nfunction isMetadataImportDefaultReference(value) {\n    return value.module && value.default && isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataImportDefaultReference = isMetadataImportDefaultReference;\nfunction isMetadataSymbolicReferenceExpression(value) {\n    return value && value.__symbolic === 'reference';\n}\nexports.isMetadataSymbolicReferenceExpression = isMetadataSymbolicReferenceExpression;\nfunction isMetadataSymbolicSelectExpression(value) {\n    return value && value.__symbolic === 'select';\n}\nexports.isMetadataSymbolicSelectExpression = isMetadataSymbolicSelectExpression;\nfunction isMetadataSymbolicSpreadExpression(value) {\n    return value && value.__symbolic === 'spread';\n}\nexports.isMetadataSymbolicSpreadExpression = isMetadataSymbolicSpreadExpression;\nfunction isMetadataError(value) {\n    return value && value.__symbolic === 'error';\n}\nexports.isMetadataError = isMetadataError;\n\n});\n\nvar evaluator = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n// In TypeScript 2.1 the spread element kind was renamed.\nvar spreadElementSyntaxKind = ts__default.SyntaxKind.SpreadElement || ts__default.SyntaxKind.SpreadElementExpression;\nfunction isMethodCallOf(callExpression, memberName) {\n    var expression = callExpression.expression;\n    if (expression.kind === ts__default.SyntaxKind.PropertyAccessExpression) {\n        var propertyAccessExpression = expression;\n        var name_1 = propertyAccessExpression.name;\n        if (name_1.kind == ts__default.SyntaxKind.Identifier) {\n            return name_1.text === memberName;\n        }\n    }\n    return false;\n}\nfunction isCallOf(callExpression, ident) {\n    var expression = callExpression.expression;\n    if (expression.kind === ts__default.SyntaxKind.Identifier) {\n        var identifier = expression;\n        return identifier.text === ident;\n    }\n    return false;\n}\n/**\n * ts.forEachChild stops iterating children when the callback return a truthy value.\n * This method inverts this to implement an `every` style iterator. It will return\n * true if every call to `cb` returns `true`.\n */\nfunction everyNodeChild(node, cb) {\n    return !ts__default.forEachChild(node, function (node) { return !cb(node); });\n}\nfunction isPrimitive(value) {\n    return Object(value) !== value;\n}\nexports.isPrimitive = isPrimitive;\nfunction isDefined(obj) {\n    return obj !== undefined;\n}\nfunction getSourceFileOfNode(node) {\n    while (node && node.kind != ts__default.SyntaxKind.SourceFile) {\n        node = node.parent;\n    }\n    return node;\n}\n/* @internal */\nfunction errorSymbol(message, node, context, sourceFile) {\n    var result = undefined;\n    if (node) {\n        sourceFile = sourceFile || getSourceFileOfNode(node);\n        if (sourceFile) {\n            var _a = ts__default.getLineAndCharacterOfPosition(sourceFile, node.getStart(sourceFile)), line = _a.line, character = _a.character;\n            result = { __symbolic: 'error', message: message, line: line, character: character };\n        }\n    }\n    if (!result) {\n        result = { __symbolic: 'error', message: message };\n    }\n    if (context) {\n        result.context = context;\n    }\n    return result;\n}\nexports.errorSymbol = errorSymbol;\n/**\n * Produce a symbolic representation of an expression folding values into their final value when\n * possible.\n */\nvar Evaluator = (function () {\n    function Evaluator(symbols, nodeMap, options, recordExport) {\n        if (options === void 0) { options = {}; }\n        this.symbols = symbols;\n        this.nodeMap = nodeMap;\n        this.options = options;\n        this.recordExport = recordExport;\n    }\n    Evaluator.prototype.nameOf = function (node) {\n        if (node && node.kind == ts__default.SyntaxKind.Identifier) {\n            return node.text;\n        }\n        var result = node && this.evaluateNode(node);\n        if (schema.isMetadataError(result) || typeof result === 'string') {\n            return result;\n        }\n        else {\n            return errorSymbol('Name expected', node, { received: (node && node.getText()) || '<missing>' });\n        }\n    };\n    /**\n     * Returns true if the expression represented by `node` can be folded into a literal expression.\n     *\n     * For example, a literal is always foldable. This means that literal expressions such as `1.2`\n     * `\"Some value\"` `true` `false` are foldable.\n     *\n     * - An object literal is foldable if all the properties in the literal are foldable.\n     * - An array literal is foldable if all the elements are foldable.\n     * - A call is foldable if it is a call to a Array.prototype.concat or a call to CONST_EXPR.\n     * - A property access is foldable if the object is foldable.\n     * - A array index is foldable if index expression is foldable and the array is foldable.\n     * - Binary operator expressions are foldable if the left and right expressions are foldable and\n     *   it is one of '+', '-', '*', '/', '%', '||', and '&&'.\n     * - An identifier is foldable if a value can be found for its symbol in the evaluator symbol\n     *   table.\n     */\n    Evaluator.prototype.isFoldable = function (node) {\n        return this.isFoldableWorker(node, new Map());\n    };\n    Evaluator.prototype.isFoldableWorker = function (node, folding) {\n        var _this = this;\n        if (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ObjectLiteralExpression:\n                    return everyNodeChild(node, function (child) {\n                        if (child.kind === ts__default.SyntaxKind.PropertyAssignment) {\n                            var propertyAssignment = child;\n                            return _this.isFoldableWorker(propertyAssignment.initializer, folding);\n                        }\n                        return false;\n                    });\n                case ts__default.SyntaxKind.ArrayLiteralExpression:\n                    return everyNodeChild(node, function (child) { return _this.isFoldableWorker(child, folding); });\n                case ts__default.SyntaxKind.CallExpression:\n                    var callExpression = node;\n                    // We can fold a <array>.concat(<v>).\n                    if (isMethodCallOf(callExpression, 'concat') &&\n                        arrayOrEmpty(callExpression.arguments).length === 1) {\n                        var arrayNode = callExpression.expression.expression;\n                        if (this.isFoldableWorker(arrayNode, folding) &&\n                            this.isFoldableWorker(callExpression.arguments[0], folding)) {\n                            // It needs to be an array.\n                            var arrayValue = this.evaluateNode(arrayNode);\n                            if (arrayValue && Array.isArray(arrayValue)) {\n                                return true;\n                            }\n                        }\n                    }\n                    // We can fold a call to CONST_EXPR\n                    if (isCallOf(callExpression, 'CONST_EXPR') &&\n                        arrayOrEmpty(callExpression.arguments).length === 1)\n                        return this.isFoldableWorker(callExpression.arguments[0], folding);\n                    return false;\n                case ts__default.SyntaxKind.NoSubstitutionTemplateLiteral:\n                case ts__default.SyntaxKind.StringLiteral:\n                case ts__default.SyntaxKind.NumericLiteral:\n                case ts__default.SyntaxKind.NullKeyword:\n                case ts__default.SyntaxKind.TrueKeyword:\n                case ts__default.SyntaxKind.FalseKeyword:\n                case ts__default.SyntaxKind.TemplateHead:\n                case ts__default.SyntaxKind.TemplateMiddle:\n                case ts__default.SyntaxKind.TemplateTail:\n                    return true;\n                case ts__default.SyntaxKind.ParenthesizedExpression:\n                    var parenthesizedExpression = node;\n                    return this.isFoldableWorker(parenthesizedExpression.expression, folding);\n                case ts__default.SyntaxKind.BinaryExpression:\n                    var binaryExpression = node;\n                    switch (binaryExpression.operatorToken.kind) {\n                        case ts__default.SyntaxKind.PlusToken:\n                        case ts__default.SyntaxKind.MinusToken:\n                        case ts__default.SyntaxKind.AsteriskToken:\n                        case ts__default.SyntaxKind.SlashToken:\n                        case ts__default.SyntaxKind.PercentToken:\n                        case ts__default.SyntaxKind.AmpersandAmpersandToken:\n                        case ts__default.SyntaxKind.BarBarToken:\n                            return this.isFoldableWorker(binaryExpression.left, folding) &&\n                                this.isFoldableWorker(binaryExpression.right, folding);\n                        default:\n                            return false;\n                    }\n                case ts__default.SyntaxKind.PropertyAccessExpression:\n                    var propertyAccessExpression = node;\n                    return this.isFoldableWorker(propertyAccessExpression.expression, folding);\n                case ts__default.SyntaxKind.ElementAccessExpression:\n                    var elementAccessExpression = node;\n                    return this.isFoldableWorker(elementAccessExpression.expression, folding) &&\n                        this.isFoldableWorker(elementAccessExpression.argumentExpression, folding);\n                case ts__default.SyntaxKind.Identifier:\n                    var identifier = node;\n                    var reference = this.symbols.resolve(identifier.text);\n                    if (reference !== undefined && isPrimitive(reference)) {\n                        return true;\n                    }\n                    break;\n                case ts__default.SyntaxKind.TemplateExpression:\n                    var templateExpression = node;\n                    return templateExpression.templateSpans.every(function (span) { return _this.isFoldableWorker(span.expression, folding); });\n            }\n        }\n        return false;\n    };\n    /**\n     * Produce a JSON serialiable object representing `node`. The foldable values in the expression\n     * tree are folded. For example, a node representing `1 + 2` is folded into `3`.\n     */\n    Evaluator.prototype.evaluateNode = function (node, preferReference) {\n        var _this = this;\n        var t = this;\n        var error;\n        function recordEntry(entry, node) {\n            if (t.options.substituteExpression) {\n                var newEntry = t.options.substituteExpression(entry, node);\n                if (t.recordExport && newEntry != entry && schema.isMetadataGlobalReferenceExpression(newEntry)) {\n                    t.recordExport(newEntry.name, entry);\n                }\n                entry = newEntry;\n            }\n            t.nodeMap.set(entry, node);\n            return entry;\n        }\n        function isFoldableError(value) {\n            return !t.options.verboseInvalidExpression && schema.isMetadataError(value);\n        }\n        var resolveName = function (name, preferReference) {\n            var reference = _this.symbols.resolve(name, preferReference);\n            if (reference === undefined) {\n                // Encode as a global reference. StaticReflector will check the reference.\n                return recordEntry({ __symbolic: 'reference', name: name }, node);\n            }\n            return reference;\n        };\n        switch (node.kind) {\n            case ts__default.SyntaxKind.ObjectLiteralExpression:\n                var obj_1 = {};\n                var quoted_1 = [];\n                ts__default.forEachChild(node, function (child) {\n                    switch (child.kind) {\n                        case ts__default.SyntaxKind.ShorthandPropertyAssignment:\n                        case ts__default.SyntaxKind.PropertyAssignment:\n                            var assignment = child;\n                            if (assignment.name.kind == ts__default.SyntaxKind.StringLiteral) {\n                                var name_2 = assignment.name.text;\n                                quoted_1.push(name_2);\n                            }\n                            var propertyName = _this.nameOf(assignment.name);\n                            if (isFoldableError(propertyName)) {\n                                error = propertyName;\n                                return true;\n                            }\n                            var propertyValue = isPropertyAssignment(assignment) ?\n                                _this.evaluateNode(assignment.initializer, /* preferReference */ true) :\n                                resolveName(propertyName, /* preferReference */ true);\n                            if (isFoldableError(propertyValue)) {\n                                error = propertyValue;\n                                return true; // Stop the forEachChild.\n                            }\n                            else {\n                                obj_1[propertyName] = isPropertyAssignment(assignment) ?\n                                    recordEntry(propertyValue, assignment.initializer) :\n                                    propertyValue;\n                            }\n                    }\n                });\n                if (error)\n                    return error;\n                if (this.options.quotedNames && quoted_1.length) {\n                    obj_1['$quoted$'] = quoted_1;\n                }\n                return recordEntry(obj_1, node);\n            case ts__default.SyntaxKind.ArrayLiteralExpression:\n                var arr_1 = [];\n                ts__default.forEachChild(node, function (child) {\n                    var value = _this.evaluateNode(child, /* preferReference */ true);\n                    // Check for error\n                    if (isFoldableError(value)) {\n                        error = value;\n                        return true; // Stop the forEachChild.\n                    }\n                    // Handle spread expressions\n                    if (schema.isMetadataSymbolicSpreadExpression(value)) {\n                        if (Array.isArray(value.expression)) {\n                            for (var _i = 0, _a = value.expression; _i < _a.length; _i++) {\n                                var spreadValue = _a[_i];\n                                arr_1.push(spreadValue);\n                            }\n                            return;\n                        }\n                    }\n                    arr_1.push(value);\n                });\n                if (error)\n                    return error;\n                return recordEntry(arr_1, node);\n            case spreadElementSyntaxKind:\n                var spreadExpression = this.evaluateNode(node.expression);\n                return recordEntry({ __symbolic: 'spread', expression: spreadExpression }, node);\n            case ts__default.SyntaxKind.CallExpression:\n                var callExpression = node;\n                if (isCallOf(callExpression, 'forwardRef') &&\n                    arrayOrEmpty(callExpression.arguments).length === 1) {\n                    var firstArgument = callExpression.arguments[0];\n                    if (firstArgument.kind == ts__default.SyntaxKind.ArrowFunction) {\n                        var arrowFunction = firstArgument;\n                        return recordEntry(this.evaluateNode(arrowFunction.body), node);\n                    }\n                }\n                var args = arrayOrEmpty(callExpression.arguments).map(function (arg) { return _this.evaluateNode(arg); });\n                if (!this.options.verboseInvalidExpression && args.some(schema.isMetadataError)) {\n                    return args.find(schema.isMetadataError);\n                }\n                if (this.isFoldable(callExpression)) {\n                    if (isMethodCallOf(callExpression, 'concat')) {\n                        var arrayValue = this.evaluateNode(callExpression.expression.expression);\n                        if (isFoldableError(arrayValue))\n                            return arrayValue;\n                        return arrayValue.concat(args[0]);\n                    }\n                }\n                // Always fold a CONST_EXPR even if the argument is not foldable.\n                if (isCallOf(callExpression, 'CONST_EXPR') &&\n                    arrayOrEmpty(callExpression.arguments).length === 1) {\n                    return recordEntry(args[0], node);\n                }\n                var expression = this.evaluateNode(callExpression.expression);\n                if (isFoldableError(expression)) {\n                    return recordEntry(expression, node);\n                }\n                var result = { __symbolic: 'call', expression: expression };\n                if (args && args.length) {\n                    result.arguments = args;\n                }\n                return recordEntry(result, node);\n            case ts__default.SyntaxKind.NewExpression:\n                var newExpression = node;\n                var newArgs = arrayOrEmpty(newExpression.arguments).map(function (arg) { return _this.evaluateNode(arg); });\n                if (!this.options.verboseInvalidExpression && newArgs.some(schema.isMetadataError)) {\n                    return recordEntry(newArgs.find(schema.isMetadataError), node);\n                }\n                var newTarget = this.evaluateNode(newExpression.expression);\n                if (schema.isMetadataError(newTarget)) {\n                    return recordEntry(newTarget, node);\n                }\n                var call = { __symbolic: 'new', expression: newTarget };\n                if (newArgs.length) {\n                    call.arguments = newArgs;\n                }\n                return recordEntry(call, node);\n            case ts__default.SyntaxKind.PropertyAccessExpression: {\n                var propertyAccessExpression = node;\n                var expression_1 = this.evaluateNode(propertyAccessExpression.expression);\n                if (isFoldableError(expression_1)) {\n                    return recordEntry(expression_1, node);\n                }\n                var member = this.nameOf(propertyAccessExpression.name);\n                if (isFoldableError(member)) {\n                    return recordEntry(member, node);\n                }\n                if (expression_1 && this.isFoldable(propertyAccessExpression.expression))\n                    return expression_1[member];\n                if (schema.isMetadataModuleReferenceExpression(expression_1)) {\n                    // A select into a module reference and be converted into a reference to the symbol\n                    // in the module\n                    return recordEntry({ __symbolic: 'reference', module: expression_1.module, name: member }, node);\n                }\n                return recordEntry({ __symbolic: 'select', expression: expression_1, member: member }, node);\n            }\n            case ts__default.SyntaxKind.ElementAccessExpression: {\n                var elementAccessExpression = node;\n                var expression_2 = this.evaluateNode(elementAccessExpression.expression);\n                if (isFoldableError(expression_2)) {\n                    return recordEntry(expression_2, node);\n                }\n                if (!elementAccessExpression.argumentExpression) {\n                    return recordEntry(errorSymbol('Expression form not supported', node), node);\n                }\n                var index = this.evaluateNode(elementAccessExpression.argumentExpression);\n                if (isFoldableError(expression_2)) {\n                    return recordEntry(expression_2, node);\n                }\n                if (this.isFoldable(elementAccessExpression.expression) &&\n                    this.isFoldable(elementAccessExpression.argumentExpression))\n                    return expression_2[index];\n                return recordEntry({ __symbolic: 'index', expression: expression_2, index: index }, node);\n            }\n            case ts__default.SyntaxKind.Identifier:\n                var identifier = node;\n                var name_3 = identifier.text;\n                return resolveName(name_3, preferReference);\n            case ts__default.SyntaxKind.TypeReference:\n                var typeReferenceNode = node;\n                var typeNameNode_1 = typeReferenceNode.typeName;\n                var getReference = function (node) {\n                    if (typeNameNode_1.kind === ts__default.SyntaxKind.QualifiedName) {\n                        var qualifiedName = node;\n                        var left_1 = _this.evaluateNode(qualifiedName.left);\n                        if (schema.isMetadataModuleReferenceExpression(left_1)) {\n                            return recordEntry({\n                                __symbolic: 'reference',\n                                module: left_1.module,\n                                name: qualifiedName.right.text\n                            }, node);\n                        }\n                        // Record a type reference to a declared type as a select.\n                        return { __symbolic: 'select', expression: left_1, member: qualifiedName.right.text };\n                    }\n                    else {\n                        var identifier_1 = typeNameNode_1;\n                        var symbol = _this.symbols.resolve(identifier_1.text);\n                        if (isFoldableError(symbol) || schema.isMetadataSymbolicReferenceExpression(symbol)) {\n                            return recordEntry(symbol, node);\n                        }\n                        return recordEntry(errorSymbol('Could not resolve type', node, { typeName: identifier_1.text }), node);\n                    }\n                };\n                var typeReference = getReference(typeNameNode_1);\n                if (isFoldableError(typeReference)) {\n                    return recordEntry(typeReference, node);\n                }\n                if (!schema.isMetadataModuleReferenceExpression(typeReference) &&\n                    typeReferenceNode.typeArguments && typeReferenceNode.typeArguments.length) {\n                    var args_1 = typeReferenceNode.typeArguments.map(function (element) { return _this.evaluateNode(element); });\n                    // TODO: Remove typecast when upgraded to 2.0 as it will be corretly inferred.\n                    // Some versions of 1.9 do not infer this correctly.\n                    typeReference.arguments = args_1;\n                }\n                return recordEntry(typeReference, node);\n            case ts__default.SyntaxKind.UnionType:\n                var unionType = node;\n                // Remove null and undefined from the list of unions.\n                var references = unionType.types\n                    .filter(function (n) { return n.kind != ts__default.SyntaxKind.NullKeyword &&\n                    n.kind != ts__default.SyntaxKind.UndefinedKeyword; })\n                    .map(function (n) { return _this.evaluateNode(n); });\n                // The remmaining reference must be the same. If two have type arguments consider them\n                // different even if the type arguments are the same.\n                var candidate = null;\n                for (var i = 0; i < references.length; i++) {\n                    var reference = references[i];\n                    if (schema.isMetadataSymbolicReferenceExpression(reference)) {\n                        if (candidate) {\n                            if (reference.name == candidate.name &&\n                                reference.module == candidate.module && !reference.arguments) {\n                                candidate = reference;\n                            }\n                        }\n                        else {\n                            candidate = reference;\n                        }\n                    }\n                    else {\n                        return reference;\n                    }\n                }\n                if (candidate)\n                    return candidate;\n                break;\n            case ts__default.SyntaxKind.NoSubstitutionTemplateLiteral:\n            case ts__default.SyntaxKind.StringLiteral:\n            case ts__default.SyntaxKind.TemplateHead:\n            case ts__default.SyntaxKind.TemplateTail:\n            case ts__default.SyntaxKind.TemplateMiddle:\n                return node.text;\n            case ts__default.SyntaxKind.NumericLiteral:\n                return parseFloat(node.text);\n            case ts__default.SyntaxKind.AnyKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'any' }, node);\n            case ts__default.SyntaxKind.StringKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'string' }, node);\n            case ts__default.SyntaxKind.NumberKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'number' }, node);\n            case ts__default.SyntaxKind.BooleanKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'boolean' }, node);\n            case ts__default.SyntaxKind.ArrayType:\n                var arrayTypeNode = node;\n                return recordEntry({\n                    __symbolic: 'reference',\n                    name: 'Array',\n                    arguments: [this.evaluateNode(arrayTypeNode.elementType)]\n                }, node);\n            case ts__default.SyntaxKind.NullKeyword:\n                return null;\n            case ts__default.SyntaxKind.TrueKeyword:\n                return true;\n            case ts__default.SyntaxKind.FalseKeyword:\n                return false;\n            case ts__default.SyntaxKind.ParenthesizedExpression:\n                var parenthesizedExpression = node;\n                return this.evaluateNode(parenthesizedExpression.expression);\n            case ts__default.SyntaxKind.TypeAssertionExpression:\n                var typeAssertion = node;\n                return this.evaluateNode(typeAssertion.expression);\n            case ts__default.SyntaxKind.PrefixUnaryExpression:\n                var prefixUnaryExpression = node;\n                var operand = this.evaluateNode(prefixUnaryExpression.operand);\n                if (isDefined(operand) && isPrimitive(operand)) {\n                    switch (prefixUnaryExpression.operator) {\n                        case ts__default.SyntaxKind.PlusToken:\n                            return +operand;\n                        case ts__default.SyntaxKind.MinusToken:\n                            return -operand;\n                        case ts__default.SyntaxKind.TildeToken:\n                            return ~operand;\n                        case ts__default.SyntaxKind.ExclamationToken:\n                            return !operand;\n                    }\n                }\n                var operatorText = void 0;\n                switch (prefixUnaryExpression.operator) {\n                    case ts__default.SyntaxKind.PlusToken:\n                        operatorText = '+';\n                        break;\n                    case ts__default.SyntaxKind.MinusToken:\n                        operatorText = '-';\n                        break;\n                    case ts__default.SyntaxKind.TildeToken:\n                        operatorText = '~';\n                        break;\n                    case ts__default.SyntaxKind.ExclamationToken:\n                        operatorText = '!';\n                        break;\n                    default:\n                        return undefined;\n                }\n                return recordEntry({ __symbolic: 'pre', operator: operatorText, operand: operand }, node);\n            case ts__default.SyntaxKind.BinaryExpression:\n                var binaryExpression = node;\n                var left = this.evaluateNode(binaryExpression.left);\n                var right = this.evaluateNode(binaryExpression.right);\n                if (isDefined(left) && isDefined(right)) {\n                    if (isPrimitive(left) && isPrimitive(right))\n                        switch (binaryExpression.operatorToken.kind) {\n                            case ts__default.SyntaxKind.BarBarToken:\n                                return left || right;\n                            case ts__default.SyntaxKind.AmpersandAmpersandToken:\n                                return left && right;\n                            case ts__default.SyntaxKind.AmpersandToken:\n                                return left & right;\n                            case ts__default.SyntaxKind.BarToken:\n                                return left | right;\n                            case ts__default.SyntaxKind.CaretToken:\n                                return left ^ right;\n                            case ts__default.SyntaxKind.EqualsEqualsToken:\n                                return left == right;\n                            case ts__default.SyntaxKind.ExclamationEqualsToken:\n                                return left != right;\n                            case ts__default.SyntaxKind.EqualsEqualsEqualsToken:\n                                return left === right;\n                            case ts__default.SyntaxKind.ExclamationEqualsEqualsToken:\n                                return left !== right;\n                            case ts__default.SyntaxKind.LessThanToken:\n                                return left < right;\n                            case ts__default.SyntaxKind.GreaterThanToken:\n                                return left > right;\n                            case ts__default.SyntaxKind.LessThanEqualsToken:\n                                return left <= right;\n                            case ts__default.SyntaxKind.GreaterThanEqualsToken:\n                                return left >= right;\n                            case ts__default.SyntaxKind.LessThanLessThanToken:\n                                return left << right;\n                            case ts__default.SyntaxKind.GreaterThanGreaterThanToken:\n                                return left >> right;\n                            case ts__default.SyntaxKind.GreaterThanGreaterThanGreaterThanToken:\n                                return left >>> right;\n                            case ts__default.SyntaxKind.PlusToken:\n                                return left + right;\n                            case ts__default.SyntaxKind.MinusToken:\n                                return left - right;\n                            case ts__default.SyntaxKind.AsteriskToken:\n                                return left * right;\n                            case ts__default.SyntaxKind.SlashToken:\n                                return left / right;\n                            case ts__default.SyntaxKind.PercentToken:\n                                return left % right;\n                        }\n                    return recordEntry({\n                        __symbolic: 'binop',\n                        operator: binaryExpression.operatorToken.getText(),\n                        left: left,\n                        right: right\n                    }, node);\n                }\n                break;\n            case ts__default.SyntaxKind.ConditionalExpression:\n                var conditionalExpression = node;\n                var condition = this.evaluateNode(conditionalExpression.condition);\n                var thenExpression = this.evaluateNode(conditionalExpression.whenTrue);\n                var elseExpression = this.evaluateNode(conditionalExpression.whenFalse);\n                if (isPrimitive(condition)) {\n                    return condition ? thenExpression : elseExpression;\n                }\n                return recordEntry({ __symbolic: 'if', condition: condition, thenExpression: thenExpression, elseExpression: elseExpression }, node);\n            case ts__default.SyntaxKind.FunctionExpression:\n            case ts__default.SyntaxKind.ArrowFunction:\n                return recordEntry(errorSymbol('Function call not supported', node), node);\n            case ts__default.SyntaxKind.TaggedTemplateExpression:\n                return recordEntry(errorSymbol('Tagged template expressions are not supported in metadata', node), node);\n            case ts__default.SyntaxKind.TemplateExpression:\n                var templateExpression = node;\n                if (this.isFoldable(node)) {\n                    return templateExpression.templateSpans.reduce(function (previous, current) { return previous + _this.evaluateNode(current.expression) +\n                        _this.evaluateNode(current.literal); }, this.evaluateNode(templateExpression.head));\n                }\n                else {\n                    return templateExpression.templateSpans.reduce(function (previous, current) {\n                        var expr = _this.evaluateNode(current.expression);\n                        var literal = _this.evaluateNode(current.literal);\n                        if (isFoldableError(expr))\n                            return expr;\n                        if (isFoldableError(literal))\n                            return literal;\n                        if (typeof previous === 'string' && typeof expr === 'string' &&\n                            typeof literal === 'string') {\n                            return previous + expr + literal;\n                        }\n                        var result = expr;\n                        if (previous !== '') {\n                            result = { __symbolic: 'binop', operator: '+', left: previous, right: expr };\n                        }\n                        if (literal != '') {\n                            result = { __symbolic: 'binop', operator: '+', left: result, right: literal };\n                        }\n                        return result;\n                    }, this.evaluateNode(templateExpression.head));\n                }\n            case ts__default.SyntaxKind.AsExpression:\n                var asExpression = node;\n                return this.evaluateNode(asExpression.expression);\n            case ts__default.SyntaxKind.ClassExpression:\n                return { __symbolic: 'class' };\n        }\n        return recordEntry(errorSymbol('Expression form not supported', node), node);\n    };\n    return Evaluator;\n}());\nexports.Evaluator = Evaluator;\nfunction isPropertyAssignment(node) {\n    return node.kind == ts__default.SyntaxKind.PropertyAssignment;\n}\nvar empty = ts__default.createNodeArray();\nfunction arrayOrEmpty(v) {\n    return v || empty;\n}\n\n});\n\nvar symbols$2 = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar Symbols = (function () {\n    function Symbols(sourceFile) {\n        this.sourceFile = sourceFile;\n        this.references = new Map();\n    }\n    Symbols.prototype.resolve = function (name, preferReference) {\n        return (preferReference && this.references.get(name)) || this.symbols.get(name);\n    };\n    Symbols.prototype.define = function (name, value) { this.symbols.set(name, value); };\n    Symbols.prototype.defineReference = function (name, value) {\n        this.references.set(name, value);\n    };\n    Symbols.prototype.has = function (name) { return this.symbols.has(name); };\n    Object.defineProperty(Symbols.prototype, \"symbols\", {\n        get: function () {\n            var result = this._symbols;\n            if (!result) {\n                result = this._symbols = new Map();\n                populateBuiltins(result);\n                this.buildImports();\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Symbols.prototype.buildImports = function () {\n        var _this = this;\n        var symbols = this._symbols;\n        // Collect the imported symbols into this.symbols\n        var stripQuotes = function (s) { return s.replace(/^['\"]|['\"]$/g, ''); };\n        var visit = function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ImportEqualsDeclaration:\n                    var importEqualsDeclaration = node;\n                    if (importEqualsDeclaration.moduleReference.kind ===\n                        ts__default.SyntaxKind.ExternalModuleReference) {\n                        var externalReference = importEqualsDeclaration.moduleReference;\n                        if (externalReference.expression) {\n                            // An `import <identifier> = require(<module-specifier>);\n                            if (!externalReference.expression.parent) {\n                                // The `parent` field of a node is set by the TypeScript binder (run as\n                                // part of the type checker). Setting it here allows us to call `getText()`\n                                // even if the `SourceFile` was not type checked (which looks for `SourceFile`\n                                // in the parent chain). This doesn't damage the node as the binder unconditionally\n                                // sets the parent.\n                                externalReference.expression.parent = externalReference;\n                                externalReference.parent = _this.sourceFile;\n                            }\n                            var from_1 = stripQuotes(externalReference.expression.getText());\n                            symbols.set(importEqualsDeclaration.name.text, { __symbolic: 'reference', module: from_1 });\n                            break;\n                        }\n                    }\n                    symbols.set(importEqualsDeclaration.name.text, { __symbolic: 'error', message: \"Unsupported import syntax\" });\n                    break;\n                case ts__default.SyntaxKind.ImportDeclaration:\n                    var importDecl = node;\n                    if (!importDecl.importClause) {\n                        // An `import <module-specifier>` clause which does not bring symbols into scope.\n                        break;\n                    }\n                    if (!importDecl.moduleSpecifier.parent) {\n                        // See note above in the `ImportEqualDeclaration` case.\n                        importDecl.moduleSpecifier.parent = importDecl;\n                        importDecl.parent = _this.sourceFile;\n                    }\n                    var from = stripQuotes(importDecl.moduleSpecifier.getText());\n                    if (importDecl.importClause.name) {\n                        // An `import <identifier> form <module-specifier>` clause. Record the defualt symbol.\n                        symbols.set(importDecl.importClause.name.text, { __symbolic: 'reference', module: from, default: true });\n                    }\n                    var bindings = importDecl.importClause.namedBindings;\n                    if (bindings) {\n                        switch (bindings.kind) {\n                            case ts__default.SyntaxKind.NamedImports:\n                                // An `import { [<identifier> [, <identifier>] } from <module-specifier>` clause\n                                for (var _i = 0, _a = bindings.elements; _i < _a.length; _i++) {\n                                    var binding = _a[_i];\n                                    symbols.set(binding.name.text, {\n                                        __symbolic: 'reference',\n                                        module: from,\n                                        name: binding.propertyName ? binding.propertyName.text : binding.name.text\n                                    });\n                                }\n                                break;\n                            case ts__default.SyntaxKind.NamespaceImport:\n                                // An `input * as <identifier> from <module-specifier>` clause.\n                                symbols.set(bindings.name.text, { __symbolic: 'reference', module: from });\n                                break;\n                        }\n                    }\n                    break;\n            }\n            ts__default.forEachChild(node, visit);\n        };\n        if (this.sourceFile) {\n            ts__default.forEachChild(this.sourceFile, visit);\n        }\n    };\n    return Symbols;\n}());\nexports.Symbols = Symbols;\nfunction populateBuiltins(symbols) {\n    // From lib.core.d.ts (all \"define const\")\n    ['Object', 'Function', 'String', 'Number', 'Array', 'Boolean', 'Map', 'NaN', 'Infinity', 'Math',\n        'Date', 'RegExp', 'Error', 'Error', 'EvalError', 'RangeError', 'ReferenceError', 'SyntaxError',\n        'TypeError', 'URIError', 'JSON', 'ArrayBuffer', 'DataView', 'Int8Array', 'Uint8Array',\n        'Uint8ClampedArray', 'Uint16Array', 'Int16Array', 'Int32Array', 'Uint32Array', 'Float32Array',\n        'Float64Array']\n        .forEach(function (name) { return symbols.set(name, { __symbolic: 'reference', name: name }); });\n}\n\n});\n\nvar collector = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __assign = (commonjsGlobal && commonjsGlobal.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\nvar isStatic = function (node) { return ts__default.getCombinedModifierFlags(node) & ts__default.ModifierFlags.Static; };\n/**\n * Collect decorator metadata from a TypeScript module.\n */\nvar MetadataCollector = (function () {\n    function MetadataCollector(options) {\n        if (options === void 0) { options = {}; }\n        this.options = options;\n    }\n    /**\n     * Returns a JSON.stringify friendly form describing the decorators of the exported classes from\n     * the source file that is expected to correspond to a module.\n     */\n    MetadataCollector.prototype.getMetadata = function (sourceFile, strict, substituteExpression) {\n        var _this = this;\n        if (strict === void 0) { strict = false; }\n        var locals = new symbols$2.Symbols(sourceFile);\n        var nodeMap = new Map();\n        var composedSubstituter = substituteExpression && this.options.substituteExpression ?\n            function (value, node) {\n                return _this.options.substituteExpression(substituteExpression(value, node), node);\n            } :\n            substituteExpression;\n        var evaluatorOptions = substituteExpression ? __assign({}, this.options, { substituteExpression: composedSubstituter }) :\n            this.options;\n        var metadata;\n        var evaluator$$1 = new evaluator.Evaluator(locals, nodeMap, evaluatorOptions, function (name, value) {\n            if (!metadata)\n                metadata = {};\n            metadata[name] = value;\n        });\n        var exports = undefined;\n        function objFromDecorator(decoratorNode) {\n            return evaluator$$1.evaluateNode(decoratorNode.expression);\n        }\n        function recordEntry(entry, node) {\n            nodeMap.set(entry, node);\n            return entry;\n        }\n        function errorSym(message, node, context) {\n            return evaluator.errorSymbol(message, node, context, sourceFile);\n        }\n        function maybeGetSimpleFunction(functionDeclaration) {\n            if (functionDeclaration.name && functionDeclaration.name.kind == ts__default.SyntaxKind.Identifier) {\n                var nameNode = functionDeclaration.name;\n                var functionName = nameNode.text;\n                var functionBody = functionDeclaration.body;\n                if (functionBody && functionBody.statements.length == 1) {\n                    var statement = functionBody.statements[0];\n                    if (statement.kind === ts__default.SyntaxKind.ReturnStatement) {\n                        var returnStatement = statement;\n                        if (returnStatement.expression) {\n                            var func = {\n                                __symbolic: 'function',\n                                parameters: namesOf(functionDeclaration.parameters),\n                                value: evaluator$$1.evaluateNode(returnStatement.expression)\n                            };\n                            if (functionDeclaration.parameters.some(function (p) { return p.initializer != null; })) {\n                                func.defaults = functionDeclaration.parameters.map(function (p) { return p.initializer && evaluator$$1.evaluateNode(p.initializer); });\n                            }\n                            return recordEntry({ func: func, name: functionName }, functionDeclaration);\n                        }\n                    }\n                }\n            }\n        }\n        function classMetadataOf(classDeclaration) {\n            var result = { __symbolic: 'class' };\n            function getDecorators(decorators) {\n                if (decorators && decorators.length)\n                    return decorators.map(function (decorator) { return objFromDecorator(decorator); });\n                return undefined;\n            }\n            function referenceFrom(node) {\n                var result = evaluator$$1.evaluateNode(node);\n                if (schema.isMetadataError(result) || schema.isMetadataSymbolicReferenceExpression(result) ||\n                    schema.isMetadataSymbolicSelectExpression(result)) {\n                    return result;\n                }\n                else {\n                    return errorSym('Symbol reference expected', node);\n                }\n            }\n            // Add class parents\n            if (classDeclaration.heritageClauses) {\n                classDeclaration.heritageClauses.forEach(function (hc) {\n                    if (hc.token === ts__default.SyntaxKind.ExtendsKeyword && hc.types) {\n                        hc.types.forEach(function (type) { return result.extends = referenceFrom(type.expression); });\n                    }\n                });\n            }\n            // Add arity if the type is generic\n            var typeParameters = classDeclaration.typeParameters;\n            if (typeParameters && typeParameters.length) {\n                result.arity = typeParameters.length;\n            }\n            // Add class decorators\n            if (classDeclaration.decorators) {\n                result.decorators = getDecorators(classDeclaration.decorators);\n            }\n            // member decorators\n            var members = null;\n            function recordMember(name, metadata) {\n                if (!members)\n                    members = {};\n                var data = members.hasOwnProperty(name) ? members[name] : [];\n                data.push(metadata);\n                members[name] = data;\n            }\n            // static member\n            var statics = null;\n            function recordStaticMember(name, value) {\n                if (!statics)\n                    statics = {};\n                statics[name] = value;\n            }\n            for (var _i = 0, _a = classDeclaration.members; _i < _a.length; _i++) {\n                var member = _a[_i];\n                var isConstructor = false;\n                switch (member.kind) {\n                    case ts__default.SyntaxKind.Constructor:\n                    case ts__default.SyntaxKind.MethodDeclaration:\n                        isConstructor = member.kind === ts__default.SyntaxKind.Constructor;\n                        var method = member;\n                        if (isStatic(method)) {\n                            var maybeFunc = maybeGetSimpleFunction(method);\n                            if (maybeFunc) {\n                                recordStaticMember(maybeFunc.name, maybeFunc.func);\n                            }\n                            continue;\n                        }\n                        var methodDecorators = getDecorators(method.decorators);\n                        var parameters = method.parameters;\n                        var parameterDecoratorData = [];\n                        var parametersData = [];\n                        var hasDecoratorData = false;\n                        var hasParameterData = false;\n                        for (var _b = 0, parameters_1 = parameters; _b < parameters_1.length; _b++) {\n                            var parameter = parameters_1[_b];\n                            var parameterData = getDecorators(parameter.decorators);\n                            parameterDecoratorData.push(parameterData);\n                            hasDecoratorData = hasDecoratorData || !!parameterData;\n                            if (isConstructor) {\n                                if (parameter.type) {\n                                    parametersData.push(referenceFrom(parameter.type));\n                                }\n                                else {\n                                    parametersData.push(null);\n                                }\n                                hasParameterData = true;\n                            }\n                        }\n                        var data = { __symbolic: isConstructor ? 'constructor' : 'method' };\n                        var name_1 = isConstructor ? '__ctor__' : evaluator$$1.nameOf(member.name);\n                        if (methodDecorators) {\n                            data.decorators = methodDecorators;\n                        }\n                        if (hasDecoratorData) {\n                            data.parameterDecorators = parameterDecoratorData;\n                        }\n                        if (hasParameterData) {\n                            data.parameters = parametersData;\n                        }\n                        if (!schema.isMetadataError(name_1)) {\n                            recordMember(name_1, data);\n                        }\n                        break;\n                    case ts__default.SyntaxKind.PropertyDeclaration:\n                    case ts__default.SyntaxKind.GetAccessor:\n                    case ts__default.SyntaxKind.SetAccessor:\n                        var property = member;\n                        if (isStatic(property)) {\n                            var name_2 = evaluator$$1.nameOf(property.name);\n                            if (!schema.isMetadataError(name_2)) {\n                                if (property.initializer) {\n                                    var value = evaluator$$1.evaluateNode(property.initializer);\n                                    recordStaticMember(name_2, value);\n                                }\n                                else {\n                                    recordStaticMember(name_2, errorSym('Variable not initialized', property.name));\n                                }\n                            }\n                        }\n                        var propertyDecorators = getDecorators(property.decorators);\n                        if (propertyDecorators) {\n                            var name_3 = evaluator$$1.nameOf(property.name);\n                            if (!schema.isMetadataError(name_3)) {\n                                recordMember(name_3, { __symbolic: 'property', decorators: propertyDecorators });\n                            }\n                        }\n                        break;\n                }\n            }\n            if (members) {\n                result.members = members;\n            }\n            if (statics) {\n                result.statics = statics;\n            }\n            return recordEntry(result, classDeclaration);\n        }\n        // Collect all exported symbols from an exports clause.\n        var exportMap = new Map();\n        ts__default.forEachChild(sourceFile, function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ExportDeclaration:\n                    var exportDeclaration = node;\n                    var moduleSpecifier = exportDeclaration.moduleSpecifier, exportClause = exportDeclaration.exportClause;\n                    if (!moduleSpecifier) {\n                        // If there is a module specifier there is also an exportClause\n                        exportClause.elements.forEach(function (spec) {\n                            var exportedAs = spec.name.text;\n                            var name = (spec.propertyName || spec.name).text;\n                            exportMap.set(name, exportedAs);\n                        });\n                    }\n            }\n        });\n        var isExport = function (node) {\n            return sourceFile.isDeclarationFile || ts__default.getCombinedModifierFlags(node) & ts__default.ModifierFlags.Export;\n        };\n        var isExportedIdentifier = function (identifier) {\n            return identifier && exportMap.has(identifier.text);\n        };\n        var isExported = function (node) {\n            return isExport(node) || isExportedIdentifier(node.name);\n        };\n        var exportedIdentifierName = function (identifier) {\n            return identifier && (exportMap.get(identifier.text) || identifier.text);\n        };\n        var exportedName = function (node) { return exportedIdentifierName(node.name); };\n        // Predeclare classes and functions\n        ts__default.forEachChild(sourceFile, function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ClassDeclaration:\n                    var classDeclaration = node;\n                    if (classDeclaration.name) {\n                        var className = classDeclaration.name.text;\n                        if (isExported(classDeclaration)) {\n                            locals.define(className, { __symbolic: 'reference', name: exportedName(classDeclaration) });\n                        }\n                        else {\n                            locals.define(className, errorSym('Reference to non-exported class', node, { className: className }));\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.InterfaceDeclaration:\n                    var interfaceDeclaration = node;\n                    if (interfaceDeclaration.name) {\n                        var interfaceName = interfaceDeclaration.name.text;\n                        // All references to interfaces should be converted to references to `any`.\n                        locals.define(interfaceName, { __symbolic: 'reference', name: 'any' });\n                    }\n                    break;\n                case ts__default.SyntaxKind.FunctionDeclaration:\n                    var functionDeclaration = node;\n                    if (!isExported(functionDeclaration)) {\n                        // Report references to this function as an error.\n                        var nameNode = functionDeclaration.name;\n                        if (nameNode && nameNode.text) {\n                            locals.define(nameNode.text, errorSym('Reference to a non-exported function', nameNode, { name: nameNode.text }));\n                        }\n                    }\n                    break;\n            }\n        });\n        ts__default.forEachChild(sourceFile, function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ExportDeclaration:\n                    // Record export declarations\n                    var exportDeclaration = node;\n                    var moduleSpecifier = exportDeclaration.moduleSpecifier, exportClause = exportDeclaration.exportClause;\n                    if (!moduleSpecifier) {\n                        // no module specifier -> export {propName as name};\n                        if (exportClause) {\n                            exportClause.elements.forEach(function (spec) {\n                                var name = spec.name.text;\n                                // If the symbol was not already exported, export a reference since it is a\n                                // reference to an import\n                                if (!metadata || !metadata[name]) {\n                                    var propNode = spec.propertyName || spec.name;\n                                    var value = evaluator$$1.evaluateNode(propNode);\n                                    if (!metadata)\n                                        metadata = {};\n                                    metadata[name] = recordEntry(value, node);\n                                }\n                            });\n                        }\n                    }\n                    if (moduleSpecifier && moduleSpecifier.kind == ts__default.SyntaxKind.StringLiteral) {\n                        // Ignore exports that don't have string literals as exports.\n                        // This is allowed by the syntax but will be flagged as an error by the type checker.\n                        var from = moduleSpecifier.text;\n                        var moduleExport = { from: from };\n                        if (exportClause) {\n                            moduleExport.export = exportClause.elements.map(function (spec) { return spec.propertyName ? { name: spec.propertyName.text, as: spec.name.text } :\n                                spec.name.text; });\n                        }\n                        if (!exports)\n                            exports = [];\n                        exports.push(moduleExport);\n                    }\n                    break;\n                case ts__default.SyntaxKind.ClassDeclaration:\n                    var classDeclaration = node;\n                    if (classDeclaration.name) {\n                        if (isExported(classDeclaration)) {\n                            var name_4 = exportedName(classDeclaration);\n                            if (name_4) {\n                                if (!metadata)\n                                    metadata = {};\n                                metadata[name_4] = classMetadataOf(classDeclaration);\n                            }\n                        }\n                    }\n                    // Otherwise don't record metadata for the class.\n                    break;\n                case ts__default.SyntaxKind.TypeAliasDeclaration:\n                    var typeDeclaration = node;\n                    if (typeDeclaration.name && isExported(typeDeclaration)) {\n                        var name_5 = exportedName(typeDeclaration);\n                        if (name_5) {\n                            if (!metadata)\n                                metadata = {};\n                            metadata[name_5] = { __symbolic: 'interface' };\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.InterfaceDeclaration:\n                    var interfaceDeclaration = node;\n                    if (interfaceDeclaration.name && isExported(interfaceDeclaration)) {\n                        var name_6 = exportedName(interfaceDeclaration);\n                        if (name_6) {\n                            if (!metadata)\n                                metadata = {};\n                            metadata[name_6] = { __symbolic: 'interface' };\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.FunctionDeclaration:\n                    // Record functions that return a single value. Record the parameter\n                    // names substitution will be performed by the StaticReflector.\n                    var functionDeclaration = node;\n                    if (isExported(functionDeclaration) && functionDeclaration.name) {\n                        var name_7 = exportedName(functionDeclaration);\n                        var maybeFunc = maybeGetSimpleFunction(functionDeclaration);\n                        if (name_7) {\n                            if (!metadata)\n                                metadata = {};\n                            metadata[name_7] =\n                                maybeFunc ? recordEntry(maybeFunc.func, node) : { __symbolic: 'function' };\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.EnumDeclaration:\n                    var enumDeclaration = node;\n                    if (isExported(enumDeclaration)) {\n                        var enumValueHolder = {};\n                        var enumName = exportedName(enumDeclaration);\n                        var nextDefaultValue = 0;\n                        var writtenMembers = 0;\n                        for (var _i = 0, _a = enumDeclaration.members; _i < _a.length; _i++) {\n                            var member = _a[_i];\n                            var enumValue = void 0;\n                            if (!member.initializer) {\n                                enumValue = nextDefaultValue;\n                            }\n                            else {\n                                enumValue = evaluator$$1.evaluateNode(member.initializer);\n                            }\n                            var name_8 = undefined;\n                            if (member.name.kind == ts__default.SyntaxKind.Identifier) {\n                                var identifier = member.name;\n                                name_8 = identifier.text;\n                                enumValueHolder[name_8] = enumValue;\n                                writtenMembers++;\n                            }\n                            if (typeof enumValue === 'number') {\n                                nextDefaultValue = enumValue + 1;\n                            }\n                            else if (name_8) {\n                                nextDefaultValue = {\n                                    __symbolic: 'binary',\n                                    operator: '+',\n                                    left: {\n                                        __symbolic: 'select',\n                                        expression: recordEntry({ __symbolic: 'reference', name: enumName }, node), name: name_8\n                                    }\n                                };\n                            }\n                            else {\n                                nextDefaultValue =\n                                    recordEntry(errorSym('Unsuppported enum member name', member.name), node);\n                            }\n                        }\n                        if (writtenMembers) {\n                            if (enumName) {\n                                if (!metadata)\n                                    metadata = {};\n                                metadata[enumName] = recordEntry(enumValueHolder, node);\n                            }\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.VariableStatement:\n                    var variableStatement = node;\n                    var _loop_1 = function (variableDeclaration) {\n                        if (variableDeclaration.name.kind == ts__default.SyntaxKind.Identifier) {\n                            var nameNode = variableDeclaration.name;\n                            var varValue = void 0;\n                            if (variableDeclaration.initializer) {\n                                varValue = evaluator$$1.evaluateNode(variableDeclaration.initializer);\n                            }\n                            else {\n                                varValue = recordEntry(errorSym('Variable not initialized', nameNode), nameNode);\n                            }\n                            var exported = false;\n                            if (isExport(variableStatement) || isExport(variableDeclaration) ||\n                                isExportedIdentifier(nameNode)) {\n                                var name_9 = exportedIdentifierName(nameNode);\n                                if (name_9) {\n                                    if (!metadata)\n                                        metadata = {};\n                                    metadata[name_9] = recordEntry(varValue, node);\n                                }\n                                exported = true;\n                            }\n                            if (typeof varValue == 'string' || typeof varValue == 'number' ||\n                                typeof varValue == 'boolean') {\n                                locals.define(nameNode.text, varValue);\n                                if (exported) {\n                                    locals.defineReference(nameNode.text, { __symbolic: 'reference', name: nameNode.text });\n                                }\n                            }\n                            else if (!exported) {\n                                if (varValue && !schema.isMetadataError(varValue)) {\n                                    locals.define(nameNode.text, recordEntry(varValue, node));\n                                }\n                                else {\n                                    locals.define(nameNode.text, recordEntry(errorSym('Reference to a local symbol', nameNode, { name: nameNode.text }), node));\n                                }\n                            }\n                        }\n                        else {\n                            // Destructuring (or binding) declarations are not supported,\n                            // var {<identifier>[, <identifier>]+} = <expression>;\n                            //   or\n                            // var [<identifier>[, <identifier}+] = <expression>;\n                            // are not supported.\n                            var report_1 = function (nameNode) {\n                                switch (nameNode.kind) {\n                                    case ts__default.SyntaxKind.Identifier:\n                                        var name_10 = nameNode;\n                                        var varValue = errorSym('Destructuring not supported', name_10);\n                                        locals.define(name_10.text, varValue);\n                                        if (isExport(node)) {\n                                            if (!metadata)\n                                                metadata = {};\n                                            metadata[name_10.text] = varValue;\n                                        }\n                                        break;\n                                    case ts__default.SyntaxKind.BindingElement:\n                                        var bindingElement = nameNode;\n                                        report_1(bindingElement.name);\n                                        break;\n                                    case ts__default.SyntaxKind.ObjectBindingPattern:\n                                    case ts__default.SyntaxKind.ArrayBindingPattern:\n                                        var bindings = nameNode;\n                                        bindings.elements.forEach(report_1);\n                                        break;\n                                }\n                            };\n                            report_1(variableDeclaration.name);\n                        }\n                    };\n                    for (var _b = 0, _c = variableStatement.declarationList.declarations; _b < _c.length; _b++) {\n                        var variableDeclaration = _c[_b];\n                        _loop_1(variableDeclaration);\n                    }\n                    break;\n            }\n        });\n        if (metadata || exports) {\n            if (!metadata)\n                metadata = {};\n            else if (strict) {\n                validateMetadata(sourceFile, nodeMap, metadata);\n            }\n            var result = {\n                __symbolic: 'module',\n                version: this.options.version || schema.METADATA_VERSION, metadata: metadata\n            };\n            if (exports)\n                result.exports = exports;\n            return result;\n        }\n    };\n    return MetadataCollector;\n}());\nexports.MetadataCollector = MetadataCollector;\n// This will throw if the metadata entry given contains an error node.\nfunction validateMetadata(sourceFile, nodeMap, metadata) {\n    var locals = new Set(['Array', 'Object', 'Set', 'Map', 'string', 'number', 'any']);\n    function validateExpression(expression) {\n        if (!expression) {\n            return;\n        }\n        else if (Array.isArray(expression)) {\n            expression.forEach(validateExpression);\n        }\n        else if (typeof expression === 'object' && !expression.hasOwnProperty('__symbolic')) {\n            Object.getOwnPropertyNames(expression).forEach(function (v) { return validateExpression(expression[v]); });\n        }\n        else if (schema.isMetadataError(expression)) {\n            reportError(expression);\n        }\n        else if (schema.isMetadataGlobalReferenceExpression(expression)) {\n            if (!locals.has(expression.name)) {\n                var reference = metadata[expression.name];\n                if (reference) {\n                    validateExpression(reference);\n                }\n            }\n        }\n        else if (schema.isFunctionMetadata(expression)) {\n            validateFunction(expression);\n        }\n        else if (schema.isMetadataSymbolicExpression(expression)) {\n            switch (expression.__symbolic) {\n                case 'binary':\n                    var binaryExpression = expression;\n                    validateExpression(binaryExpression.left);\n                    validateExpression(binaryExpression.right);\n                    break;\n                case 'call':\n                case 'new':\n                    var callExpression = expression;\n                    validateExpression(callExpression.expression);\n                    if (callExpression.arguments)\n                        callExpression.arguments.forEach(validateExpression);\n                    break;\n                case 'index':\n                    var indexExpression = expression;\n                    validateExpression(indexExpression.expression);\n                    validateExpression(indexExpression.index);\n                    break;\n                case 'pre':\n                    var prefixExpression = expression;\n                    validateExpression(prefixExpression.operand);\n                    break;\n                case 'select':\n                    var selectExpression = expression;\n                    validateExpression(selectExpression.expression);\n                    break;\n                case 'spread':\n                    var spreadExpression = expression;\n                    validateExpression(spreadExpression.expression);\n                    break;\n                case 'if':\n                    var ifExpression = expression;\n                    validateExpression(ifExpression.condition);\n                    validateExpression(ifExpression.elseExpression);\n                    validateExpression(ifExpression.thenExpression);\n                    break;\n            }\n        }\n    }\n    function validateMember(classData, member) {\n        if (member.decorators) {\n            member.decorators.forEach(validateExpression);\n        }\n        if (schema.isMethodMetadata(member) && member.parameterDecorators) {\n            member.parameterDecorators.forEach(validateExpression);\n        }\n        // Only validate parameters of classes for which we know that are used with our DI\n        if (classData.decorators && schema.isConstructorMetadata(member) && member.parameters) {\n            member.parameters.forEach(validateExpression);\n        }\n    }\n    function validateClass(classData) {\n        if (classData.decorators) {\n            classData.decorators.forEach(validateExpression);\n        }\n        if (classData.members) {\n            Object.getOwnPropertyNames(classData.members)\n                .forEach(function (name) { return classData.members[name].forEach(function (m) { return validateMember(classData, m); }); });\n        }\n        if (classData.statics) {\n            Object.getOwnPropertyNames(classData.statics).forEach(function (name) {\n                var staticMember = classData.statics[name];\n                if (schema.isFunctionMetadata(staticMember)) {\n                    validateExpression(staticMember.value);\n                }\n                else {\n                    validateExpression(staticMember);\n                }\n            });\n        }\n    }\n    function validateFunction(functionDeclaration) {\n        if (functionDeclaration.value) {\n            var oldLocals = locals;\n            if (functionDeclaration.parameters) {\n                locals = new Set(oldLocals.values());\n                if (functionDeclaration.parameters)\n                    functionDeclaration.parameters.forEach(function (n) { return locals.add(n); });\n            }\n            validateExpression(functionDeclaration.value);\n            locals = oldLocals;\n        }\n    }\n    function shouldReportNode(node) {\n        if (node) {\n            var nodeStart = node.getStart();\n            return !(node.pos != nodeStart &&\n                sourceFile.text.substring(node.pos, nodeStart).indexOf('@dynamic') >= 0);\n        }\n        return true;\n    }\n    function reportError(error) {\n        var node = nodeMap.get(error);\n        if (shouldReportNode(node)) {\n            var lineInfo = error.line != undefined ?\n                error.character != undefined ? \":\" + (error.line + 1) + \":\" + (error.character + 1) :\n                    \":\" + (error.line + 1) :\n                '';\n            throw new Error(\"\" + sourceFile.fileName + lineInfo + \": Metadata collected contains an error that will be reported at runtime: \" + expandedMessage(error) + \".\\n  \" + JSON.stringify(error));\n        }\n    }\n    Object.getOwnPropertyNames(metadata).forEach(function (name) {\n        var entry = metadata[name];\n        try {\n            if (schema.isClassMetadata(entry)) {\n                validateClass(entry);\n            }\n        }\n        catch (e) {\n            var node = nodeMap.get(entry);\n            if (shouldReportNode(node)) {\n                if (node) {\n                    var _a = sourceFile.getLineAndCharacterOfPosition(node.getStart()), line = _a.line, character = _a.character;\n                    throw new Error(sourceFile.fileName + \":\" + (line + 1) + \":\" + (character + 1) + \": Error encountered in metadata generated for exported symbol '\" + name + \"': \\n \" + e.message);\n                }\n                throw new Error(\"Error encountered in metadata generated for exported symbol \" + name + \": \\n \" + e.message);\n            }\n        }\n    });\n}\n// Collect parameter names from a function.\nfunction namesOf(parameters) {\n    var result = [];\n    function addNamesOf(name) {\n        if (name.kind == ts__default.SyntaxKind.Identifier) {\n            var identifier = name;\n            result.push(identifier.text);\n        }\n        else {\n            var bindingPattern = name;\n            for (var _i = 0, _a = bindingPattern.elements; _i < _a.length; _i++) {\n                var element = _a[_i];\n                var name_11 = element.name;\n                if (name_11) {\n                    addNamesOf(name_11);\n                }\n            }\n        }\n    }\n    for (var _i = 0, parameters_2 = parameters; _i < parameters_2.length; _i++) {\n        var parameter = parameters_2[_i];\n        addNamesOf(parameter.name);\n    }\n    return result;\n}\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n    }\n    return error.message;\n}\n\n});\n\nvar bundler = createCommonjsModule(function (module, exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\n\n// The character set used to produce private names.\nvar PRIVATE_NAME_CHARS = 'abcdefghijklmnopqrstuvwxyz';\nvar MetadataBundler = (function () {\n    function MetadataBundler(root, importAs, host) {\n        this.root = root;\n        this.importAs = importAs;\n        this.host = host;\n        this.symbolMap = new Map();\n        this.metadataCache = new Map();\n        this.exports = new Map();\n        this.rootModule = \"./\" + path__default.basename(root);\n    }\n    MetadataBundler.prototype.getMetadataBundle = function () {\n        // Export the root module. This also collects the transitive closure of all values referenced by\n        // the exports.\n        var exportedSymbols = this.exportAll(this.rootModule);\n        this.canonicalizeSymbols(exportedSymbols);\n        // TODO: exports? e.g. a module re-exports a symbol from another bundle\n        var metadata = this.getEntries(exportedSymbols);\n        var privates = Array.from(this.symbolMap.values())\n            .filter(function (s) { return s.referenced && s.isPrivate; })\n            .map(function (s) { return ({\n            privateName: s.privateName,\n            name: s.declaration.name,\n            module: s.declaration.module\n        }); });\n        var origins = Array.from(this.symbolMap.values())\n            .filter(function (s) { return s.referenced && !s.reexport; })\n            .reduce(function (p, s) {\n            p[s.isPrivate ? s.privateName : s.name] = s.declaration.module;\n            return p;\n        }, {});\n        var exports = this.getReExports(exportedSymbols);\n        return {\n            metadata: {\n                __symbolic: 'module',\n                version: schema.METADATA_VERSION,\n                exports: exports.length ? exports : undefined, metadata: metadata, origins: origins,\n                importAs: this.importAs\n            },\n            privates: privates\n        };\n    };\n    MetadataBundler.resolveModule = function (importName, from) {\n        return resolveModule(importName, from);\n    };\n    MetadataBundler.prototype.getMetadata = function (moduleName) {\n        var result = this.metadataCache.get(moduleName);\n        if (!result) {\n            if (moduleName.startsWith('.')) {\n                var fullModuleName = resolveModule(moduleName, this.root);\n                result = this.host.getMetadataFor(fullModuleName);\n            }\n            this.metadataCache.set(moduleName, result);\n        }\n        return result;\n    };\n    MetadataBundler.prototype.exportAll = function (moduleName) {\n        var _this = this;\n        var module = this.getMetadata(moduleName);\n        var result = this.exports.get(moduleName);\n        if (result) {\n            return result;\n        }\n        result = [];\n        var exportSymbol = function (exportedSymbol, exportAs) {\n            var symbol = _this.symbolOf(moduleName, exportAs);\n            result.push(symbol);\n            exportedSymbol.reexportedAs = symbol;\n            symbol.exports = exportedSymbol;\n        };\n        // Export all the symbols defined in this module.\n        if (module && module.metadata) {\n            for (var key in module.metadata) {\n                var data = module.metadata[key];\n                if (schema.isMetadataImportedSymbolReferenceExpression(data)) {\n                    // This is a re-export of an imported symbol. Record this as a re-export.\n                    var exportFrom = resolveModule(data.module, moduleName);\n                    this.exportAll(exportFrom);\n                    var symbol = this.symbolOf(exportFrom, data.name);\n                    exportSymbol(symbol, key);\n                }\n                else {\n                    // Record that this symbol is exported by this module.\n                    result.push(this.symbolOf(moduleName, key));\n                }\n            }\n        }\n        // Export all the re-exports from this module\n        if (module && module.exports) {\n            for (var _i = 0, _a = module.exports; _i < _a.length; _i++) {\n                var exportDeclaration = _a[_i];\n                var exportFrom = resolveModule(exportDeclaration.from, moduleName);\n                // Record all the exports from the module even if we don't use it directly.\n                var exportedSymbols = this.exportAll(exportFrom);\n                if (exportDeclaration.export) {\n                    // Re-export all the named exports from a module.\n                    for (var _b = 0, _c = exportDeclaration.export; _b < _c.length; _b++) {\n                        var exportItem = _c[_b];\n                        var name_1 = typeof exportItem == 'string' ? exportItem : exportItem.name;\n                        var exportAs = typeof exportItem == 'string' ? exportItem : exportItem.as;\n                        var symbol = this.symbolOf(exportFrom, name_1);\n                        if (exportedSymbols && exportedSymbols.length == 1 && exportedSymbols[0].reexport &&\n                            exportedSymbols[0].name == '*') {\n                            // This is a named export from a module we have no metadata about. Record the named\n                            // export as a re-export.\n                            symbol.reexport = true;\n                        }\n                        exportSymbol(this.symbolOf(exportFrom, name_1), exportAs);\n                    }\n                }\n                else {\n                    // Re-export all the symbols from the module\n                    var exportedSymbols_1 = this.exportAll(exportFrom);\n                    for (var _d = 0, exportedSymbols_2 = exportedSymbols_1; _d < exportedSymbols_2.length; _d++) {\n                        var exportedSymbol = exportedSymbols_2[_d];\n                        var name_2 = exportedSymbol.name;\n                        exportSymbol(exportedSymbol, name_2);\n                    }\n                }\n            }\n        }\n        if (!module) {\n            // If no metadata is found for this import then it is considered external to the\n            // library and should be recorded as a re-export in the final metadata if it is\n            // eventually re-exported.\n            var symbol = this.symbolOf(moduleName, '*');\n            symbol.reexport = true;\n            result.push(symbol);\n        }\n        this.exports.set(moduleName, result);\n        return result;\n    };\n    /**\n     * Fill in the canonicalSymbol which is the symbol that should be imported by factories.\n     * The canonical symbol is the one exported by the index file for the bundle or definition\n     * symbol for private symbols that are not exported by bundle index.\n     */\n    MetadataBundler.prototype.canonicalizeSymbols = function (exportedSymbols) {\n        var symbols = Array.from(this.symbolMap.values());\n        this.exported = new Set(exportedSymbols);\n        symbols.forEach(this.canonicalizeSymbol, this);\n    };\n    MetadataBundler.prototype.canonicalizeSymbol = function (symbol) {\n        var rootExport = getRootExport(symbol);\n        var declaration = getSymbolDeclaration(symbol);\n        var isPrivate = !this.exported.has(rootExport);\n        var canonicalSymbol = isPrivate ? declaration : rootExport;\n        symbol.isPrivate = isPrivate;\n        symbol.declaration = declaration;\n        symbol.canonicalSymbol = canonicalSymbol;\n        symbol.reexport = declaration.reexport;\n    };\n    MetadataBundler.prototype.getEntries = function (exportedSymbols) {\n        var _this = this;\n        var result = {};\n        var exportedNames = new Set(exportedSymbols.map(function (s) { return s.name; }));\n        var privateName = 0;\n        function newPrivateName() {\n            while (true) {\n                var digits = [];\n                var index = privateName++;\n                var base = PRIVATE_NAME_CHARS;\n                while (!digits.length || index > 0) {\n                    digits.unshift(base[index % base.length]);\n                    index = Math.floor(index / base.length);\n                }\n                digits.unshift('\\u0275');\n                var result_1 = digits.join('');\n                if (!exportedNames.has(result_1))\n                    return result_1;\n            }\n        }\n        exportedSymbols.forEach(function (symbol) { return _this.convertSymbol(symbol); });\n        var symbolsMap = new Map();\n        Array.from(this.symbolMap.values()).forEach(function (symbol) {\n            if (symbol.referenced && !symbol.reexport) {\n                var name_3 = symbol.name;\n                var identifier = symbol.declaration.module + \":\" + symbol.declaration.name;\n                if (symbol.isPrivate && !symbol.privateName) {\n                    name_3 = newPrivateName();\n                    symbol.privateName = name_3;\n                }\n                if (symbolsMap.has(identifier)) {\n                    var names = symbolsMap.get(identifier);\n                    names.push(name_3);\n                }\n                else {\n                    symbolsMap.set(identifier, [name_3]);\n                }\n                result[name_3] = symbol.value;\n            }\n        });\n        // check for duplicated entries\n        symbolsMap.forEach(function (names, identifier) {\n            if (names.length > 1) {\n                var _a = identifier.split(':'), module_1 = _a[0], declaredName = _a[1];\n                // prefer the export that uses the declared name (if any)\n                var reference_1 = names.indexOf(declaredName);\n                if (reference_1 === -1) {\n                    reference_1 = 0;\n                }\n                // keep one entry and replace the others by references\n                names.forEach(function (name, i) {\n                    if (i !== reference_1) {\n                        result[name] = { __symbolic: 'reference', name: names[reference_1] };\n                    }\n                });\n            }\n        });\n        return result;\n    };\n    MetadataBundler.prototype.getReExports = function (exportedSymbols) {\n        var modules = new Map();\n        var exportAlls = new Set();\n        for (var _i = 0, exportedSymbols_3 = exportedSymbols; _i < exportedSymbols_3.length; _i++) {\n            var symbol = exportedSymbols_3[_i];\n            if (symbol.reexport) {\n                // symbol.declaration is guarenteed to be defined during the phase this method is called.\n                var declaration = symbol.declaration;\n                var module_2 = declaration.module;\n                if (declaration.name == '*') {\n                    // Reexport all the symbols.\n                    exportAlls.add(declaration.module);\n                }\n                else {\n                    // Re-export the symbol as the exported name.\n                    var entry = modules.get(module_2);\n                    if (!entry) {\n                        entry = [];\n                        modules.set(module_2, entry);\n                    }\n                    var as = symbol.name;\n                    var name_4 = declaration.name;\n                    entry.push({ name: name_4, as: as });\n                }\n            }\n        }\n        return Array.from(exportAlls.values()).map(function (from) { return ({ from: from }); }).concat(Array.from(modules.entries()).map(function (_a) {\n            var from = _a[0], exports = _a[1];\n            return ({ export: exports, from: from });\n        }));\n    };\n    MetadataBundler.prototype.convertSymbol = function (symbol) {\n        // canonicalSymbol is ensured to be defined before this is called.\n        var canonicalSymbol = symbol.canonicalSymbol;\n        if (!canonicalSymbol.referenced) {\n            canonicalSymbol.referenced = true;\n            // declaration is ensured to be definded before this method is called.\n            var declaration = canonicalSymbol.declaration;\n            var module_3 = this.getMetadata(declaration.module);\n            if (module_3) {\n                var value = module_3.metadata[declaration.name];\n                if (value && !declaration.name.startsWith('___')) {\n                    canonicalSymbol.value = this.convertEntry(declaration.module, value);\n                }\n            }\n        }\n    };\n    MetadataBundler.prototype.convertEntry = function (moduleName, value) {\n        if (schema.isClassMetadata(value)) {\n            return this.convertClass(moduleName, value);\n        }\n        if (schema.isFunctionMetadata(value)) {\n            return this.convertFunction(moduleName, value);\n        }\n        if (schema.isInterfaceMetadata(value)) {\n            return value;\n        }\n        return this.convertValue(moduleName, value);\n    };\n    MetadataBundler.prototype.convertClass = function (moduleName, value) {\n        var _this = this;\n        return {\n            __symbolic: 'class',\n            arity: value.arity,\n            extends: this.convertExpression(moduleName, value.extends),\n            decorators: value.decorators && value.decorators.map(function (d) { return _this.convertExpression(moduleName, d); }),\n            members: this.convertMembers(moduleName, value.members),\n            statics: value.statics && this.convertStatics(moduleName, value.statics)\n        };\n    };\n    MetadataBundler.prototype.convertMembers = function (moduleName, members) {\n        var _this = this;\n        var result = {};\n        for (var name_5 in members) {\n            var value = members[name_5];\n            result[name_5] = value.map(function (v) { return _this.convertMember(moduleName, v); });\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertMember = function (moduleName, member) {\n        var _this = this;\n        var result = { __symbolic: member.__symbolic };\n        result.decorators =\n            member.decorators && member.decorators.map(function (d) { return _this.convertExpression(moduleName, d); });\n        if (schema.isMethodMetadata(member)) {\n            result.parameterDecorators = member.parameterDecorators &&\n                member.parameterDecorators.map(function (d) { return d && d.map(function (p) { return _this.convertExpression(moduleName, p); }); });\n            if (schema.isConstructorMetadata(member)) {\n                if (member.parameters) {\n                    result.parameters =\n                        member.parameters.map(function (p) { return _this.convertExpression(moduleName, p); });\n                }\n            }\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertStatics = function (moduleName, statics) {\n        var result = {};\n        for (var key in statics) {\n            var value = statics[key];\n            result[key] = schema.isFunctionMetadata(value) ? this.convertFunction(moduleName, value) : value;\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertFunction = function (moduleName, value) {\n        var _this = this;\n        return {\n            __symbolic: 'function',\n            parameters: value.parameters,\n            defaults: value.defaults && value.defaults.map(function (v) { return _this.convertValue(moduleName, v); }),\n            value: this.convertValue(moduleName, value.value)\n        };\n    };\n    MetadataBundler.prototype.convertValue = function (moduleName, value) {\n        var _this = this;\n        if (isPrimitive(value)) {\n            return value;\n        }\n        if (schema.isMetadataError(value)) {\n            return this.convertError(moduleName, value);\n        }\n        if (schema.isMetadataSymbolicExpression(value)) {\n            return this.convertExpression(moduleName, value);\n        }\n        if (Array.isArray(value)) {\n            return value.map(function (v) { return _this.convertValue(moduleName, v); });\n        }\n        // Otherwise it is a metadata object.\n        var object = value;\n        var result = {};\n        for (var key in object) {\n            result[key] = this.convertValue(moduleName, object[key]);\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertExpression = function (moduleName, value) {\n        if (value) {\n            switch (value.__symbolic) {\n                case 'error':\n                    return this.convertError(moduleName, value);\n                case 'reference':\n                    return this.convertReference(moduleName, value);\n                default:\n                    return this.convertExpressionNode(moduleName, value);\n            }\n        }\n        return value;\n    };\n    MetadataBundler.prototype.convertError = function (module, value) {\n        return {\n            __symbolic: 'error',\n            message: value.message,\n            line: value.line,\n            character: value.character,\n            context: value.context, module: module\n        };\n    };\n    MetadataBundler.prototype.convertReference = function (moduleName, value) {\n        var _this = this;\n        var createReference = function (symbol) {\n            var declaration = symbol.declaration;\n            if (declaration.module.startsWith('.')) {\n                // Reference to a symbol defined in the module. Ensure it is converted then return a\n                // references to the final symbol.\n                _this.convertSymbol(symbol);\n                return {\n                    __symbolic: 'reference',\n                    get name() {\n                        // Resolved lazily because private names are assigned late.\n                        var canonicalSymbol = symbol.canonicalSymbol;\n                        if (canonicalSymbol.isPrivate == null) {\n                            throw Error('Invalid state: isPrivate was not initialized');\n                        }\n                        return canonicalSymbol.isPrivate ? canonicalSymbol.privateName : canonicalSymbol.name;\n                    }\n                };\n            }\n            else {\n                // The symbol was a re-exported symbol from another module. Return a reference to the\n                // original imported symbol.\n                return { __symbolic: 'reference', name: declaration.name, module: declaration.module };\n            }\n        };\n        if (schema.isMetadataGlobalReferenceExpression(value)) {\n            var metadata = this.getMetadata(moduleName);\n            if (metadata && metadata.metadata && metadata.metadata[value.name]) {\n                // Reference to a symbol defined in the module\n                return createReference(this.canonicalSymbolOf(moduleName, value.name));\n            }\n            // If a reference has arguments, the arguments need to be converted.\n            if (value.arguments) {\n                return {\n                    __symbolic: 'reference',\n                    name: value.name,\n                    arguments: value.arguments.map(function (a) { return _this.convertValue(moduleName, a); })\n                };\n            }\n            // Global references without arguments (such as to Math or JSON) are unmodified.\n            return value;\n        }\n        if (schema.isMetadataImportedSymbolReferenceExpression(value)) {\n            // References to imported symbols are separated into two, references to bundled modules and\n            // references to modules external to the bundle. If the module reference is relative it is\n            // assumed to be in the bundle. If it is Global it is assumed to be outside the bundle.\n            // References to symbols outside the bundle are left unmodified. References to symbol inside\n            // the bundle need to be converted to a bundle import reference reachable from the bundle\n            // index.\n            if (value.module.startsWith('.')) {\n                // Reference is to a symbol defined inside the module. Convert the reference to a reference\n                // to the canonical symbol.\n                var referencedModule = resolveModule(value.module, moduleName);\n                var referencedName = value.name;\n                return createReference(this.canonicalSymbolOf(referencedModule, referencedName));\n            }\n            // Value is a reference to a symbol defined outside the module.\n            if (value.arguments) {\n                // If a reference has arguments the arguments need to be converted.\n                return {\n                    __symbolic: 'reference',\n                    name: value.name,\n                    module: value.module,\n                    arguments: value.arguments.map(function (a) { return _this.convertValue(moduleName, a); })\n                };\n            }\n            return value;\n        }\n        if (schema.isMetadataModuleReferenceExpression(value)) {\n            // Cannot support references to bundled modules as the internal modules of a bundle are erased\n            // by the bundler.\n            if (value.module.startsWith('.')) {\n                return {\n                    __symbolic: 'error',\n                    message: 'Unsupported bundled module reference',\n                    context: { module: value.module }\n                };\n            }\n            // References to unbundled modules are unmodified.\n            return value;\n        }\n    };\n    MetadataBundler.prototype.convertExpressionNode = function (moduleName, value) {\n        var result = { __symbolic: value.__symbolic };\n        for (var key in value) {\n            result[key] = this.convertValue(moduleName, value[key]);\n        }\n        return result;\n    };\n    MetadataBundler.prototype.symbolOf = function (module, name) {\n        var symbolKey = module + \":\" + name;\n        var symbol = this.symbolMap.get(symbolKey);\n        if (!symbol) {\n            symbol = { module: module, name: name };\n            this.symbolMap.set(symbolKey, symbol);\n        }\n        return symbol;\n    };\n    MetadataBundler.prototype.canonicalSymbolOf = function (module, name) {\n        // Ensure the module has been seen.\n        this.exportAll(module);\n        var symbol = this.symbolOf(module, name);\n        if (!symbol.canonicalSymbol) {\n            this.canonicalizeSymbol(symbol);\n        }\n        return symbol;\n    };\n    return MetadataBundler;\n}());\nexports.MetadataBundler = MetadataBundler;\nvar CompilerHostAdapter = (function () {\n    function CompilerHostAdapter(host) {\n        this.host = host;\n        this.collector = new collector.MetadataCollector();\n    }\n    CompilerHostAdapter.prototype.getMetadataFor = function (fileName) {\n        var sourceFile = this.host.getSourceFile(fileName + '.ts', ts__default.ScriptTarget.Latest);\n        return this.collector.getMetadata(sourceFile);\n    };\n    return CompilerHostAdapter;\n}());\nexports.CompilerHostAdapter = CompilerHostAdapter;\nfunction resolveModule(importName, from) {\n    if (importName.startsWith('.') && from) {\n        var normalPath = path__default.normalize(path__default.join(path__default.dirname(from), importName));\n        if (!normalPath.startsWith('.') && from.startsWith('.')) {\n            // path.normalize() preserves leading '../' but not './'. This adds it back.\n            normalPath = \".\" + path__default.sep + normalPath;\n        }\n        // Replace windows path delimiters with forward-slashes. Otherwise the paths are not\n        // TypeScript compatible when building the bundle.\n        return normalPath.replace(/\\\\/g, '/');\n    }\n    return importName;\n}\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\nfunction getRootExport(symbol) {\n    return symbol.reexportedAs ? getRootExport(symbol.reexportedAs) : symbol;\n}\nfunction getSymbolDeclaration(symbol) {\n    return symbol.exports ? getSymbolDeclaration(symbol.exports) : symbol;\n}\n\n});\n\nvar index_writer = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar INDEX_HEADER = \"/**\\n * Generated bundle index. Do not edit.\\n */\\n\";\nfunction privateEntriesToIndex(index, privates) {\n    var results = [INDEX_HEADER];\n    // Export all of the index symbols.\n    results.push(\"export * from '\" + index + \"';\", '');\n    // Simplify the exports\n    var exports = new Map();\n    for (var _i = 0, privates_1 = privates; _i < privates_1.length; _i++) {\n        var entry = privates_1[_i];\n        var entries = exports.get(entry.module);\n        if (!entries) {\n            entries = [];\n            exports.set(entry.module, entries);\n        }\n        entries.push(entry);\n    }\n    var compareEntries = compare(function (e) { return e.name; });\n    var compareModules = compare(function (e) { return e[0]; });\n    var orderedExports = Array.from(exports)\n        .map(function (_a) {\n        var module = _a[0], entries = _a[1];\n        return [module, entries.sort(compareEntries)];\n    })\n        .sort(compareModules);\n    for (var _a = 0, orderedExports_1 = orderedExports; _a < orderedExports_1.length; _a++) {\n        var _b = orderedExports_1[_a], module_1 = _b[0], entries = _b[1];\n        var symbols = entries.map(function (e) { return e.name + \" as \" + e.privateName; });\n        results.push(\"export {\" + symbols + \"} from '\" + module_1 + \"';\");\n    }\n    return results.join('\\n');\n}\nexports.privateEntriesToIndex = privateEntriesToIndex;\nfunction compare(select) {\n    return function (a, b) {\n        var ak = select(a);\n        var bk = select(b);\n        return ak > bk ? 1 : ak < bk ? -1 : 0;\n    };\n}\n\n});\n\nvar bundle_index_host = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\n\nvar DTS = /\\.d\\.ts$/;\nvar JS_EXT = /(\\.js|)$/;\nfunction createSyntheticIndexHost(delegate, syntheticIndex) {\n    var normalSyntheticIndexName = path__default.normalize(syntheticIndex.name);\n    var indexContent = syntheticIndex.content;\n    var indexMetadata = syntheticIndex.metadata;\n    var newHost = Object.create(delegate);\n    newHost.fileExists = function (fileName) {\n        return path__default.normalize(fileName) == normalSyntheticIndexName || delegate.fileExists(fileName);\n    };\n    newHost.readFile = function (fileName) {\n        return path__default.normalize(fileName) == normalSyntheticIndexName ? indexContent :\n            delegate.readFile(fileName);\n    };\n    newHost.getSourceFile =\n        function (fileName, languageVersion, onError) {\n            if (path__default.normalize(fileName) == normalSyntheticIndexName) {\n                return ts__default.createSourceFile(fileName, indexContent, languageVersion, true);\n            }\n            return delegate.getSourceFile(fileName, languageVersion, onError);\n        };\n    newHost.writeFile =\n        function (fileName, data, writeByteOrderMark, onError, sourceFiles) {\n            delegate.writeFile(fileName, data, writeByteOrderMark, onError, sourceFiles);\n            if (fileName.match(DTS) && sourceFiles && sourceFiles.length == 1 &&\n                path__default.normalize(sourceFiles[0].fileName) == normalSyntheticIndexName) {\n                // If we are writing the synthetic index, write the metadata along side.\n                var metadataName = fileName.replace(DTS, '.metadata.json');\n                fs__default.writeFileSync(metadataName, indexMetadata, { encoding: 'utf8' });\n            }\n        };\n    return newHost;\n}\nfunction createBundleIndexHost(ngOptions, rootFiles, host) {\n    var files = rootFiles.filter(function (f) { return !DTS.test(f); });\n    if (files.length != 1) {\n        return {\n            host: host,\n            errors: [{\n                    file: null,\n                    start: null,\n                    length: null,\n                    messageText: 'Angular compiler option \"flatModuleIndex\" requires one and only one .ts file in the \"files\" field.',\n                    category: ts__default.DiagnosticCategory.Error,\n                    code: 0\n                }]\n        };\n    }\n    var file = files[0];\n    var indexModule = file.replace(/\\.ts$/, '');\n    var bundler$$1 = new bundler.MetadataBundler(indexModule, ngOptions.flatModuleId, new bundler.CompilerHostAdapter(host));\n    var metadataBundle = bundler$$1.getMetadataBundle();\n    var metadata = JSON.stringify(metadataBundle.metadata);\n    var name = path__default.join(path__default.dirname(indexModule), ngOptions.flatModuleOutFile.replace(JS_EXT, '.ts'));\n    var libraryIndex = \"./\" + path__default.basename(indexModule);\n    var content = index_writer.privateEntriesToIndex(libraryIndex, metadataBundle.privates);\n    host = createSyntheticIndexHost(host, { name: name, content: content, metadata: metadata });\n    return { host: host, indexName: name };\n}\nexports.createBundleIndexHost = createBundleIndexHost;\n\n});\n\nvar index = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(collector);\n__export(schema);\n__export(bundle_index_host);\n\n});\n\nvar api = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR_CODE = 100;\nexports.UNKNOWN_ERROR_CODE = 500;\nexports.SOURCE = 'angular';\nfunction isTsDiagnostic(diagnostic) {\n    return diagnostic != null && diagnostic.source !== 'angular';\n}\nexports.isTsDiagnostic = isTsDiagnostic;\nfunction isNgDiagnostic(diagnostic) {\n    return diagnostic != null && diagnostic.source === 'angular';\n}\nexports.isNgDiagnostic = isNgDiagnostic;\nvar EmitFlags;\n(function (EmitFlags) {\n    EmitFlags[EmitFlags[\"DTS\"] = 1] = \"DTS\";\n    EmitFlags[EmitFlags[\"JS\"] = 2] = \"JS\";\n    EmitFlags[EmitFlags[\"Metadata\"] = 4] = \"Metadata\";\n    EmitFlags[EmitFlags[\"I18nBundle\"] = 8] = \"I18nBundle\";\n    EmitFlags[EmitFlags[\"Codegen\"] = 16] = \"Codegen\";\n    EmitFlags[EmitFlags[\"Default\"] = 19] = \"Default\";\n    EmitFlags[EmitFlags[\"All\"] = 31] = \"All\";\n})(EmitFlags = exports.EmitFlags || (exports.EmitFlags = {}));\n\n});\n\nvar util = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\nexports.GENERATED_FILES = /(.*?)\\.(ngfactory|shim\\.ngstyle|ngstyle|ngsummary)\\.(js|d\\.ts|ts)$/;\nexports.DTS = /\\.d\\.ts$/;\n// Note: This is an internal property in TypeScript. Use it only for assertions and tests.\nfunction tsStructureIsReused(program) {\n    return program.structureIsReused;\n}\nexports.tsStructureIsReused = tsStructureIsReused;\nfunction createMessageDiagnostic(messageText) {\n    return {\n        file: undefined,\n        start: undefined,\n        length: undefined,\n        category: ts__default.DiagnosticCategory.Message, messageText: messageText,\n        code: api.DEFAULT_ERROR_CODE,\n        source: api.SOURCE,\n    };\n}\nexports.createMessageDiagnostic = createMessageDiagnostic;\nfunction isInRootDir(fileName, options) {\n    return !options.rootDir || pathStartsWithPrefix(options.rootDir, fileName);\n}\nexports.isInRootDir = isInRootDir;\nfunction relativeToRootDirs(filePath, rootDirs) {\n    if (!filePath)\n        return filePath;\n    for (var _i = 0, _a = rootDirs || []; _i < _a.length; _i++) {\n        var dir = _a[_i];\n        var rel = pathStartsWithPrefix(dir, filePath);\n        if (rel) {\n            return rel;\n        }\n    }\n    return filePath;\n}\nexports.relativeToRootDirs = relativeToRootDirs;\nfunction pathStartsWithPrefix(prefix, fullPath) {\n    var rel = path__default.relative(prefix, fullPath);\n    return rel.startsWith('..') ? null : rel;\n}\n/**\n * Converts a ng.Diagnostic into a ts.Diagnostic.\n * This looses some information, and also uses an incomplete object as `file`.\n *\n * I.e. only use this where the API allows only a ts.Diagnostic.\n */\nfunction ngToTsDiagnostic(ng) {\n    var file;\n    var start;\n    var length;\n    if (ng.span) {\n        // Note: We can't use a real ts.SourceFile,\n        // but we can at least mirror the properties `fileName` and `text`, which\n        // are mostly used for error reporting.\n        file = { fileName: ng.span.start.file.url, text: ng.span.start.file.content };\n        start = ng.span.start.offset;\n        length = ng.span.end.offset - start;\n    }\n    return {\n        file: file,\n        messageText: ng.messageText,\n        category: ng.category,\n        code: ng.code, start: start, length: length,\n    };\n}\nexports.ngToTsDiagnostic = ngToTsDiagnostic;\n\n});\n\nvar metadata_reader = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __assign = (commonjsGlobal && commonjsGlobal.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\nfunction createMetadataReaderCache() {\n    var data = new Map();\n    return { data: data };\n}\nexports.createMetadataReaderCache = createMetadataReaderCache;\nfunction readMetadata(filePath, host, cache) {\n    var metadatas = cache && cache.data.get(filePath);\n    if (metadatas) {\n        return metadatas;\n    }\n    if (host.fileExists(filePath)) {\n        // If the file doesn't exists then we cannot return metadata for the file.\n        // This will occur if the user referenced a declared module for which no file\n        // exists for the module (i.e. jQuery or angularjs).\n        if (util.DTS.test(filePath)) {\n            metadatas = readMetadataFile(host, filePath);\n            if (!metadatas) {\n                // If there is a .d.ts file but no metadata file we need to produce a\n                // metadata from the .d.ts file as metadata files capture reexports\n                // (starting with v3).\n                metadatas = [upgradeMetadataWithDtsData(host, { '__symbolic': 'module', 'version': 1, 'metadata': {} }, filePath)];\n            }\n        }\n        else {\n            var metadata = host.getSourceFileMetadata(filePath);\n            metadatas = metadata ? [metadata] : [];\n        }\n    }\n    if (cache && (!host.cacheMetadata || host.cacheMetadata(filePath))) {\n        cache.data.set(filePath, metadatas);\n    }\n    return metadatas;\n}\nexports.readMetadata = readMetadata;\nfunction readMetadataFile(host, dtsFilePath) {\n    var metadataPath = dtsFilePath.replace(util.DTS, '.metadata.json');\n    if (!host.fileExists(metadataPath)) {\n        return undefined;\n    }\n    try {\n        var metadataOrMetadatas = JSON.parse(host.readFile(metadataPath));\n        var metadatas = metadataOrMetadatas ?\n            (Array.isArray(metadataOrMetadatas) ? metadataOrMetadatas : [metadataOrMetadatas]) :\n            [];\n        if (metadatas.length) {\n            var maxMetadata = metadatas.reduce(function (p, c) { return p.version > c.version ? p : c; });\n            if (maxMetadata.version < index.METADATA_VERSION) {\n                metadatas.push(upgradeMetadataWithDtsData(host, maxMetadata, dtsFilePath));\n            }\n        }\n        return metadatas;\n    }\n    catch (e) {\n        console.error(\"Failed to read JSON file \" + metadataPath);\n        throw e;\n    }\n}\nfunction upgradeMetadataWithDtsData(host, oldMetadata, dtsFilePath) {\n    // patch v1 to v3 by adding exports and the `extends` clause.\n    // patch v3 to v4 by adding `interface` symbols for TypeAlias\n    var newMetadata = {\n        '__symbolic': 'module',\n        'version': index.METADATA_VERSION,\n        'metadata': __assign({}, oldMetadata.metadata),\n    };\n    if (oldMetadata.exports) {\n        newMetadata.exports = oldMetadata.exports;\n    }\n    if (oldMetadata.importAs) {\n        newMetadata.importAs = oldMetadata.importAs;\n    }\n    if (oldMetadata.origins) {\n        newMetadata.origins = oldMetadata.origins;\n    }\n    var dtsMetadata = host.getSourceFileMetadata(dtsFilePath);\n    if (dtsMetadata) {\n        for (var prop in dtsMetadata.metadata) {\n            if (!newMetadata.metadata[prop]) {\n                newMetadata.metadata[prop] = dtsMetadata.metadata[prop];\n            }\n        }\n        // Only copy exports from exports from metadata prior to version 3.\n        // Starting with version 3 the collector began collecting exports and\n        // this should be redundant. Also, with bundler will rewrite the exports\n        // which will hoist the exports from modules referenced indirectly causing\n        // the imports to be different than the .d.ts files and using the .d.ts file\n        // exports would cause the StaticSymbolResolver to redirect symbols to the\n        // incorrect location.\n        if ((!oldMetadata.version || oldMetadata.version < 3) && dtsMetadata.exports) {\n            newMetadata.exports = dtsMetadata.exports;\n        }\n    }\n    return newMetadata;\n}\n\n});\n\nvar language_services = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n\nThe API from compiler-cli that language-service can see.\nIt is important that none the exported modules require anything other than\nAngular modules and Typescript as this will indirectly add a dependency\nto the language service.\n\n*/\n\nexports.getExpressionDiagnostics = expression_diagnostics.getExpressionDiagnostics;\nexports.getExpressionScope = expression_diagnostics.getExpressionScope;\nexports.getTemplateExpressionDiagnostics = expression_diagnostics.getTemplateExpressionDiagnostics;\n\nexports.AstType = expression_type.AstType;\nexports.DiagnosticKind = expression_type.DiagnosticKind;\nexports.TypeDiagnostic = expression_type.TypeDiagnostic;\n\nexports.BuiltinType = symbols.BuiltinType;\n\nexports.getClassFromStaticSymbol = typescript_symbols.getClassFromStaticSymbol;\nexports.getClassMembers = typescript_symbols.getClassMembers;\nexports.getClassMembersFromDeclaration = typescript_symbols.getClassMembersFromDeclaration;\nexports.getPipesTable = typescript_symbols.getPipesTable;\nexports.getSymbolQuery = typescript_symbols.getSymbolQuery;\n\nexports.MetadataCollector = index.MetadataCollector;\n\nexports.createMetadataReaderCache = metadata_reader.createMetadataReaderCache;\nexports.readMetadata = metadata_reader.readMetadata;\n\n});\n\nvar language_services_2 = language_services.getExpressionScope;\nvar language_services_3 = language_services.getTemplateExpressionDiagnostics;\nvar language_services_4 = language_services.AstType;\nvar language_services_7 = language_services.BuiltinType;\nvar language_services_10 = language_services.getClassMembersFromDeclaration;\nvar language_services_11 = language_services.getPipesTable;\nvar language_services_12 = language_services.getSymbolQuery;\nvar language_services_13 = language_services.MetadataCollector;\nvar language_services_14 = language_services.createMetadataReaderCache;\nvar language_services_15 = language_services.readMetadata;\n\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window$1 = typeof window !== 'undefined' && window;\nvar __self$1 = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global$1 = typeof commonjsGlobal !== 'undefined' && commonjsGlobal;\nvar _root = __window$1 || __global$1 || __self$1;\nvar root_1 = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n\n\nvar root = {\n\troot: root_1\n};\n\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nvar isFunction_2 = isFunction;\n\n\nvar isFunction_1 = {\n\tisFunction: isFunction_2\n};\n\nvar isArray_1 = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n\n\nvar isArray = {\n\tisArray: isArray_1\n};\n\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nvar isObject_2 = isObject;\n\n\nvar isObject_1 = {\n\tisObject: isObject_2\n};\n\n// typeof any so that it we don't have to cast when comparing a result to the error object\nvar errorObject_1 = { e: {} };\n\n\nvar errorObject = {\n\terrorObject: errorObject_1\n};\n\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.errorObject.e = e;\n        return errorObject.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nvar tryCatch_2 = tryCatch;\n\n\n\nvar tryCatch_1 = {\n\ttryCatch: tryCatch_2\n};\n\nvar __extends$2 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends$2(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nvar UnsubscriptionError_2 = UnsubscriptionError;\n\n\nvar UnsubscriptionError_1 = {\n\tUnsubscriptionError: UnsubscriptionError_2\n};\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.errorObject.e.errors) : [errorObject.errorObject.e]);\n            }\n        }\n        if (isArray.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nvar Subscription_2 = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n\n\nvar Subscription_1 = {\n\tSubscription: Subscription_2\n};\n\nvar empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n\n\nvar Observer = {\n\tempty: empty\n};\n\nvar rxSubscriber = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nvar Symbol = root.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n\n});\n\nvar __extends$1 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends$1(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nvar Subscriber_2 = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends$1(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n\n\nvar Subscriber_1 = {\n\tSubscriber: Subscriber_2\n};\n\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nvar toSubscriber_2 = toSubscriber;\n\n\nvar toSubscriber_1 = {\n\ttoSubscriber: toSubscriber_2\n};\n\nvar observable = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n\n});\n\n/* tslint:disable:no-empty */\nfunction noop$1() { }\nvar noop_2 = noop$1;\n\n\nvar noop_1 = {\n\tnoop: noop_2\n};\n\n/* tslint:enable:max-line-length */\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i - 0] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nvar pipe_2 = pipe;\n/* @internal */\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop_1.noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\nvar pipeFromArray_1 = pipeFromArray;\n\n\nvar pipe_1 = {\n\tpipe: pipe_2,\n\tpipeFromArray: pipeFromArray_1\n};\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable$$1 = new Observable();\n        observable$$1.source = this;\n        observable$$1.operator = operator;\n        return observable$$1;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.root.Rx && root.root.Rx.config && root.root.Rx.config.Promise) {\n                PromiseCtor = root.root.Rx.config.Promise;\n            }\n            else if (root.root.Promise) {\n                PromiseCtor = root.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable.observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i - 0] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipe_1.pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.root.Rx && root.root.Rx.config && root.root.Rx.config.Promise) {\n                PromiseCtor = root.root.Rx.config.Promise;\n            }\n            else if (root.root.Promise) {\n                PromiseCtor = root.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nvar Observable_2 = Observable;\n\n\nvar Observable_1 = {\n\tObservable: Observable_2\n};\n\nvar __extends$4 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = (function (_super) {\n    __extends$4(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_1.Observable));\nvar ScalarObservable_2 = ScalarObservable;\n\n\nvar ScalarObservable_1 = {\n\tScalarObservable: ScalarObservable_2\n};\n\nvar __extends$5 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends$5(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nvar EmptyObservable_2 = EmptyObservable;\n\n\nvar EmptyObservable_1 = {\n\tEmptyObservable: EmptyObservable_2\n};\n\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nvar isScheduler_2 = isScheduler;\n\n\nvar isScheduler_1 = {\n\tisScheduler: isScheduler_2\n};\n\nvar __extends$3 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable = (function (_super) {\n    __extends$3(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable_1.EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_1.Observable));\nvar ArrayObservable_2 = ArrayObservable;\n\n\nvar ArrayObservable_1 = {\n\tArrayObservable: ArrayObservable_2\n};\n\nvar isArrayLike_1 = (function (x) { return x && typeof x.length === 'number'; });\n\n\nvar isArrayLike = {\n\tisArrayLike: isArrayLike_1\n};\n\nfunction isPromise$2(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\nvar isPromise_2 = isPromise$2;\n\n\nvar isPromise_1 = {\n\tisPromise: isPromise_2\n};\n\nvar iterator = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nfunction symbolIteratorPonyfill(root$$2) {\n    var Symbol = root$$2.Symbol;\n    if (typeof Symbol === 'function') {\n        if (!Symbol.iterator) {\n            Symbol.iterator = Symbol('iterator polyfill');\n        }\n        return Symbol.iterator;\n    }\n    else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root$$2.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root$$2.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nexports.symbolIteratorPonyfill = symbolIteratorPonyfill;\nexports.iterator = symbolIteratorPonyfill(root.root);\n/**\n * @deprecated use iterator instead\n */\nexports.$$iterator = exports.iterator;\n\n});\n\nvar __extends$7 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = (function (_super) {\n    __extends$7(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nvar InnerSubscriber_2 = InnerSubscriber;\n\n\nvar InnerSubscriber_1 = {\n\tInnerSubscriber: InnerSubscriber_2\n};\n\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_1.Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            destination.syncErrorThrowable = true;\n            return result.subscribe(destination);\n        }\n    }\n    else if (isArrayLike.isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise_1.isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root.root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (result && typeof result[iterator.iterator] === 'function') {\n        var iterator$$1 = result[iterator.iterator]();\n        do {\n            var item = iterator$$1.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (result && typeof result[observable.observable] === 'function') {\n        var obs = result[observable.observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        var value = isObject_1.isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = (\"You provided \" + value + \" where a stream was expected.\")\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\nvar subscribeToResult_2 = subscribeToResult;\n\n\nvar subscribeToResult_1 = {\n\tsubscribeToResult: subscribeToResult_2\n};\n\nvar __extends$8 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = (function (_super) {\n    __extends$8(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nvar OuterSubscriber_2 = OuterSubscriber;\n\n\nvar OuterSubscriber_1 = {\n\tOuterSubscriber: OuterSubscriber_2\n};\n\nvar __extends$6 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return function mergeMapOperatorFunction(source) {\n        if (typeof resultSelector === 'number') {\n            concurrent = resultSelector;\n            resultSelector = null;\n        }\n        return source.lift(new MergeMapOperator(project, resultSelector, concurrent));\n    };\n}\nvar mergeMap_2 = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nvar MergeMapOperator_1 = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    __extends$6(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nvar MergeMapSubscriber_1 = MergeMapSubscriber;\n\n\nvar mergeMap_1 = {\n\tmergeMap: mergeMap_2,\n\tMergeMapOperator: MergeMapOperator_1,\n\tMergeMapSubscriber: MergeMapSubscriber_1\n};\n\nfunction identity(x) {\n    return x;\n}\nvar identity_2 = identity;\n\n\nvar identity_1 = {\n\tidentity: identity_2\n};\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return mergeMap_1.mergeMap(identity_1.identity, null, concurrent);\n}\nvar mergeAll_2 = mergeAll;\n\n\nvar mergeAll_1 = {\n\tmergeAll: mergeAll_2\n};\n\n/* tslint:enable:max-line-length */\nfunction merge$3() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function (source) { return source.lift.call(mergeStatic$1.apply(void 0, [source].concat(observables))); };\n}\nvar merge_2$2 = merge$3;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nfunction mergeStatic$1() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler_1.isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\n        return observables[0];\n    }\n    return mergeAll_1.mergeAll(concurrent)(new ArrayObservable_1.ArrayObservable(observables, scheduler));\n}\nvar mergeStatic_1 = mergeStatic$1;\n\n\nvar merge_1 = {\n\tmerge: merge_2$2,\n\tmergeStatic: mergeStatic_1\n};\n\nvar merge_2$1 = merge_1;\nvar mergeStatic = merge_2$1.mergeStatic;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge$2() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return merge_1.merge.apply(void 0, observables)(this);\n}\nvar merge_4 = merge$2;\n\n\nvar merge_3 = {\n\tmergeStatic: mergeStatic,\n\tmerge: merge_4\n};\n\nvar merge_2 = merge_3.mergeStatic;\n\nvar __extends$11 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends$11(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nvar ObjectUnsubscribedError_2 = ObjectUnsubscribedError;\n\n\nvar ObjectUnsubscribedError_1 = {\n\tObjectUnsubscribedError: ObjectUnsubscribedError_2\n};\n\nvar __extends$12 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends$12(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nvar SubjectSubscription_2 = SubjectSubscription;\n\n\nvar SubjectSubscription_1 = {\n\tSubjectSubscription: SubjectSubscription_2\n};\n\nvar __extends$10 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends$10(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nvar SubjectSubscriber_1 = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends$10(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nvar Subject_2 = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends$10(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nvar AnonymousSubject_1 = AnonymousSubject;\n\n\nvar Subject_1 = {\n\tSubjectSubscriber: SubjectSubscriber_1,\n\tSubject: Subject_2,\n\tAnonymousSubject: AnonymousSubject_1\n};\n\nvar __extends$13 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nfunction refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator$1(source));\n    };\n}\nvar refCount_2 = refCount;\nvar RefCountOperator$1 = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber$1(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber$1 = (function (_super) {\n    __extends$13(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar refCount_1 = {\n\trefCount: refCount_2\n};\n\nvar __extends$9 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable = (function (_super) {\n    __extends$9(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this._refCount = 0;\n        this._isComplete = false;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription_1.Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription_1.Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return refCount_1.refCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable_1.Observable));\nvar ConnectableObservable_2 = ConnectableObservable;\nvar connectableProto = ConnectableObservable.prototype;\nvar connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = (function (_super) {\n    __extends$9(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(Subject_1.SubjectSubscriber));\nvar RefCountSubscriber = (function (_super) {\n    __extends$9(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar ConnectableObservable_1 = {\n\tConnectableObservable: ConnectableObservable_2,\n\tconnectableObservableDescriptor: connectableObservableDescriptor\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, ConnectableObservable_1.connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nvar multicast_2 = multicast;\nvar MulticastOperator = (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nvar MulticastOperator_1 = MulticastOperator;\n\n\nvar multicast_1 = {\n\tmulticast: multicast_2,\n\tMulticastOperator: MulticastOperator_1\n};\n\nfunction shareSubjectFactory() {\n    return new Subject_1.Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share$1() {\n    return function (source) { return refCount_1.refCount()(multicast_1.multicast(shareSubjectFactory)(source)); };\n}\nvar share_2$2 = share$1;\n\n\n\nvar share_1 = {\n\tshare: share_2$2\n};\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n *\n * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.\n * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.\n * Observable.of(\"test\").publish().refCount() will not re-emit \"test\" on new subscriptions, Observable.of(\"test\").share() will\n * re-emit \"test\" to new subscriptions.\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return share_1.share()(this);\n}\nvar share_3 = share;\n\n/**\n * @license Angular v5.0.2\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nvar InjectionToken = (function () {\n    function InjectionToken(_desc) {\n        this._desc = _desc;\n        /**\n         * \\@internal\n         */\n        this.ngMetadataName = 'InjectionToken';\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * \\@ng.Component({...})\n * class MyClass {...}\n * ```\n * \\@stable\n * @record\n */\n\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__paramaters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {?} objOrType\n     * @return {?}\n     */\n    function DecoratorFactory(objOrType) {\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call(this, objOrType);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new (/** @type {?} */ (DecoratorFactory))(objOrType);\n        var /** @type {?} */ TypeDecorator = /** @type {?} */ (function TypeDecorator(cls) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                (/** @type {?} */ (cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        });\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (DecoratorFactory)).annotationCls = DecoratorFactory;\n    return /** @type {?} */ (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var /** @type {?} */ values = props.apply(void 0, args);\n            for (var /** @type {?} */ propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((_a = (/** @type {?} */ (ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        (/** @type {?} */ (ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ parameters = cls.hasOwnProperty(PARAMETERS) ?\n                (/** @type {?} */ (cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Attribute$1$1 = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ChangeDetectionStrategy$1 = {\n    /**\n       * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n       */\n    OnPush: 0,\n    /**\n       * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n       */\n    Default: 1,\n};\nChangeDetectionStrategy$1[ChangeDetectionStrategy$1.OnPush] = \"OnPush\";\nChangeDetectionStrategy$1[ChangeDetectionStrategy$1.Default] = \"Default\";\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Directive decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Directive$1 = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * Type of the Component decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Component$1 = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy$1.Default }, c));\n}, Directive$1);\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Pipe decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Pipe$1 = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar NgModule$1 = makeDecorator('NgModule', function (ngModule) { return ngModule; });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ViewEncapsulation$1 = {\n    /**\n       * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n       * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n       * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n       * selectors.\n       *\n       * This is the default option.\n       */\n    Emulated: 0,\n    /**\n       * Use the native encapsulation mechanism of the renderer.\n       *\n       * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    Native: 1,\n    /**\n       * Don't provide any template or style encapsulation.\n       */\n    None: 2,\n};\nViewEncapsulation$1[ViewEncapsulation$1.Emulated] = \"Emulated\";\nViewEncapsulation$1[ViewEncapsulation$1.Native] = \"Native\";\nViewEncapsulation$1[ViewEncapsulation$1.None] = \"None\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nvar Version$1 = (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * \\@stable\n */\nvar VERSION$2 = new Version$1('5.0.2');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Inject decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Inject$1 = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Type of the Optional decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Injectable = makeDecorator('Injectable');\n/**\n * Type of the Self decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _global = __window || __global || __self;\nvar _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var /** @type {?} */ Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                var /** @type {?} */ key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    (/** @type {?} */ (Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify$1(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify$1).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    (/** @type {?} */ (forwardRefFn)).__forward_ref__ = forwardRef;\n    (/** @type {?} */ (forwardRefFn)).toString = function () { return stringify$1(this()); };\n    return (/** @type {?} */ (/** @type {?} */ (forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef$1(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return (/** @type {?} */ (type))();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nvar _NullInjector = (function () {\n    function _NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    _NullInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"NullInjectorError: No provider for \" + stringify$1(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return _NullInjector;\n}());\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nvar Injector = (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    Injector.create = /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new StaticInjector(providers, parent);\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new _NullInjector();\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = /** @type {?} */ ([]);\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME = /** @type {?} */ ({});\nvar ɵ2 = GET_PROPERTY_NAME;\nvar USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ2 });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'ɵ';\nvar StaticInjector = (function () {\n    function StaticInjector(providers, parent) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        this.parent = parent;\n        var /** @type {?} */ records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    StaticInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        var /** @type {?} */ record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ tokenPath = e[NG_TEMP_TOKEN_PATH];\n            e.message = formatError('\\n' + e.message, tokenPath);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StaticInjector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokens = /** @type {?} */ ([]), /** @type {?} */ records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify$1(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    var /** @type {?} */ deps = computeDeps(provider);\n    var /** @type {?} */ fn = IDENT;\n    var /** @type {?} */ value = EMPTY;\n    var /** @type {?} */ useNew = false;\n    var /** @type {?} */ provide = resolveForwardRef$1(provider.provide);\n    if (USE_VALUE$1 in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = (/** @type {?} */ (provider)).useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        fn = (/** @type {?} */ (provider)).useFactory;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        // Just use IDENT\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef$1((/** @type {?} */ (provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef$1(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var /** @type {?} */ i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var /** @type {?} */ token = resolveForwardRef$1(provider.provide);\n            var /** @type {?} */ resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var /** @type {?} */ multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = /** @type {?} */ ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var /** @type {?} */ record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue);\n    }\n    catch (/** @type {?} */ e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var /** @type {?} */ path$$1 = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path$$1.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue) {\n    var /** @type {?} */ value;\n    if (record) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var /** @type {?} */ obj = undefined;\n            var /** @type {?} */ useNew = record.useNew;\n            var /** @type {?} */ fn = record.fn;\n            var /** @type {?} */ depRecords = record.deps;\n            var /** @type {?} */ deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var /** @type {?} */ i = 0; i < depRecords.length; i++) {\n                    var /** @type {?} */ depRecord = depRecords[i];\n                    var /** @type {?} */ options = depRecord.options;\n                    var /** @type {?} */ childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND));\n                }\n            }\n            record.value = value = useNew ? new ((_a = (/** @type {?} */ (fn))).bind.apply(_a, [void 0].concat(deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else {\n        value = parent.get(token, notFoundValue);\n    }\n    return value;\n    var _a;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    var /** @type {?} */ deps = EMPTY;\n    var /** @type {?} */ providerDeps = (/** @type {?} */ (provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var /** @type {?} */ i = 0; i < providerDeps.length; i++) {\n            var /** @type {?} */ options = 6;\n            var /** @type {?} */ token = resolveForwardRef$1(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var /** @type {?} */ j = 0, /** @type {?} */ annotations = token; j < annotations.length; j++) {\n                    var /** @type {?} */ annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject$1) {\n                        token = (/** @type {?} */ (annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef$1(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        var /** @type {?} */ token = resolveForwardRef$1((/** @type {?} */ (provider)).useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE$1 in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction formatError(text, obj) {\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var /** @type {?} */ context = stringify$1(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify$1).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var /** @type {?} */ parts = /** @type {?} */ ([]);\n        for (var /** @type {?} */ key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var /** @type {?} */ value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify$1(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var /** @type {?} */ key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return (/** @type {?} */ (error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return (/** @type {?} */ (error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nvar ErrorHandler = (function () {\n    function ErrorHandler() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ originalError = this._findOriginalError(error);\n        var /** @type {?} */ context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var /** @type {?} */ errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    var /** @type {?} */ msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    var /** @type {?} */ res = [];\n    for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n        var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify$1(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @record\n */\n\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var /** @type {?} */ keys = [key];\n    var /** @type {?} */ errMsg = constructResolvingMessage(keys);\n    var /** @type {?} */ error = /** @type {?} */ ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify$1(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify$1(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var /** @type {?} */ signature = [];\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n        var /** @type {?} */ parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify$1).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify$1(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify$1(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify$1(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef$1(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: /**\n         * @return {?} the number of keys registered in the system.\n         */\n        function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\n/**\n * \\@internal\n */\nvar KeyRegistry = (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return /** @type {?} */ ((this._allKeys.get(token)));\n        }\n        var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\nvar Type$1$1 = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar ReflectionCapabilities = (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    function (paramTypes, paramAnnotations) {\n        var /** @type {?} */ result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var /** @type {?} */ i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (type, parentCtor) {\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(type.toString())) {\n            return null;\n        }\n        // Prefer the direct API.\n        if ((/** @type {?} */ (type)).parameters && (/** @type {?} */ (type)).parameters !== parentCtor.parameters) {\n            return (/** @type {?} */ (type)).parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var /** @type {?} */ tsickleCtorParams = (/** @type {?} */ (type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var /** @type {?} */ paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var /** @type {?} */ paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var /** @type {?} */ paramAnnotations = type.hasOwnProperty(PARAMETERS) && (/** @type {?} */ (type))[PARAMETERS];\n        var /** @type {?} */ paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array((/** @type {?} */ (type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(type);\n        var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).annotations && (/** @type {?} */ (typeOrFunc)).annotations !== parentCtor.annotations) {\n            var /** @type {?} */ annotations = (/** @type {?} */ (typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).decorators && (/** @type {?} */ (typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata((/** @type {?} */ (typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return (/** @type {?} */ (typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).propMetadata &&\n            (/** @type {?} */ (typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            var /** @type {?} */ propMetadata = (/** @type {?} */ (typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).propDecorators &&\n            (/** @type {?} */ (typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            var /** @type {?} */ propDecorators_1 = (/** @type {?} */ (typeOrFunc)).propDecorators;\n            var /** @type {?} */ propMetadata_1 = /** @type {?} */ ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return (/** @type {?} */ (typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ propMetadata = {};\n        if (parentCtor !== Object) {\n            var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var /** @type {?} */ decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return type instanceof Type$1$1 && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return /** @type {?} */ (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return /** @type {?} */ (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return /** @type {?} */ (new Function('o', 'args', functionBody));\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify$1(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return \"./\" + stringify$1(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var /** @type {?} */ decoratorType = decoratorInvocation.type;\n        var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n        var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n    var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = /**\n     * @param {?} caps\n     * @return {?}\n     */\n    function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\n/**\n * An internal resolved representation of a {\\@link Provider} used by the {\\@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * \\@experimental\n * @record\n */\n\nvar ResolvedReflectiveProvider_ = (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n    }\n    Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.resolvedFactories[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nvar ResolvedReflectiveFactory = (function () {\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    var /** @type {?} */ factoryFn;\n    var /** @type {?} */ resolvedDeps;\n    if (provider.useClass) {\n        var /** @type {?} */ useClass = resolveForwardRef$1(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n    var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n    var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var /** @type {?} */ resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type$1$1) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && (/** @type {?} */ (b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var /** @type {?} */ token = null;\n    var /** @type {?} */ optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject$1) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var /** @type {?} */ visibility = null;\n    for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n        var /** @type {?} */ paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type$1$1) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject$1) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef$1(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nvar ReflectiveInjector = (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     */\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {@link ReflectiveInjector#resolve resolve} and\n     * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     */\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve resolve} and\n     * {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve resolve} and\n     * {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var /** @type {?} */ len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n        (/** @type {?} */ (inj)).parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = /**\n     * @return {?}\n     */\n    function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.multiProvider) {\n            var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n            for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var /** @type {?} */ factory = ResolvedReflectiveFactory$$1.factory;\n        var /** @type {?} */ deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (/** @type {?} */ e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var /** @type {?} */ obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (/** @type {?} */ e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = /**\n     * @param {?} dep\n     * @return {?}\n     */\n    function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    function (keyId) {\n        for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    function (key, notFoundValue, visibility) {\n        var /** @type {?} */ inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var /** @type {?} */ inj_ = /** @type {?} */ (inj);\n            var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    var /** @type {?} */ res = new Array(injector._providers.length);\n    for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise$1(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nvar ApplicationInitStatus = (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationInitStatus.prototype.runInitializers = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var /** @type {?} */ asyncInitPromises = [];\n        var /** @type {?} */ complete = function () {\n            (/** @type {?} */ (_this)).done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n                var /** @type {?} */ initResult = this.appInits[i]();\n                if (isPromise$1(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject$1, args: [APP_INITIALIZER,] }, { type: Optional },] },\n    ]; };\n    return ApplicationInitStatus;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nvar APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Console.ctorParameters = function () { return []; };\n    return Console;\n}());\n\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nvar Compiler = (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleSync = /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAsync = /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = /**\n     * Clears all caches.\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { };\n    Compiler.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Compiler.ctorParameters = function () { return []; };\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nvar CompilerFactory = (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nvar ComponentRef = (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactory = (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    var /** @type {?} */ error = Error(\"No component factory found for \" + stringify$1(component) + \". Did you add it to @NgModule.entryComponents?\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\n\nvar _NullComponentFactoryResolver = (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactoryResolver = (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"selector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.selector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.componentType; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"ngContentSelectors\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.ngContentSelectors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.inputs; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.outputs; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nvar NgModuleRef = (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar NgModuleFactory = (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * \\@experimental\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar trace;\nvar events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    var /** @type {?} */ wtf = (/** @type {?} */ (_global /** TODO #9100 */) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nvar EventEmitter = (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    function (generatorOrNext, error, complete) {\n        var /** @type {?} */ schedulerFn;\n        var /** @type {?} */ errorFn = function (err) { return null; };\n        var /** @type {?} */ completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n    };\n    return EventEmitter;\n}(Subject_2));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar NgZone = (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        var /** @type {?} */ self = /** @type {?} */ ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if ((/** @type {?} */ (Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['wtfZoneSpec']);\n        }\n        if (enableLongStackTrace && (/** @type {?} */ (Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = /**\n     * @return {?}\n     */\n    function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.run = /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.run(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    NgZone.prototype.runTask = /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs, name) {\n        var /** @type {?} */ zone = (/** @type {?} */ ((this)))._inner;\n        var /** @type {?} */ task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return /** @type {?} */ (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._outer.run(fn));\n    };\n    return NgZone;\n}());\n/**\n * @return {?}\n */\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n *\n * \\@internal\n */\nvar NoopNgZone = (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.run = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runGuarded = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runOutsideAngular = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runTask = /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nvar Testability = (function () {\n    function Testability(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * \\@internal\n         */\n        this._pendingCount = 0;\n        /**\n         * \\@internal\n         */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        /**\n         * \\@internal\n         */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     */\n    /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     */\n    /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    Testability.prototype.isStable = /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    function () {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    (/** @type {?} */ ((_this._callbacks.pop())))(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    };\n    /**\n     * Run callback when the application is stable\n     * @param callback function to be called after the application is stable\n     */\n    /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    Testability.prototype.whenStable = /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    function (callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     */\n    /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone, },\n    ]; };\n    return Testability;\n}());\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nvar TestabilityRegistry = (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterApplication = /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\n\nvar _NoopGetTestability = (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = /**\n     * @param {?} registry\n     * @return {?}\n     */\n    function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var /** @type {?} */ marker = new InjectionToken(\"Platform: \" + name);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                createPlatform(Injector.create(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    var /** @type {?} */ platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * Provides additional options to the bootstraping process.\n *\n * \\@stable\n * @record\n */\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@stable\n */\nvar PlatformRef = (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var /** @type {?} */ ngZoneOption = options ? options.ngZone : undefined;\n        var /** @type {?} */ ngZone = getNgZone(ngZoneOption);\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var /** @type {?} */ ngZoneInjector = Injector.create([{ provide: NgZone, useValue: ngZone }], _this.injector);\n            var /** @type {?} */ moduleRef = /** @type {?} */ (moduleFactory.create(ngZoneInjector));\n            var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).runOutsideAngular(function () { return /** @type {?} */ ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), function () {\n                var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * @stable\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModule = /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n        var /** @type {?} */ options = optionsReducer({}, compilerOptions);\n        var /** @type {?} */ compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef.prototype._moduleDoBootstrap = /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    function (moduleRef) {\n        var /** @type {?} */ appRef = /** @type {?} */ (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify$1(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef.prototype.onDestroy = /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: /**\n         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         * @return {?}\n         */\n        function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    PlatformRef.prototype.destroy = /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PlatformRef.ctorParameters = function () { return [\n        { type: Injector, },\n    ]; };\n    return PlatformRef;\n}());\n/**\n * @param {?=} ngZoneOption\n * @return {?}\n */\nfunction getNgZone(ngZoneOption) {\n    var /** @type {?} */ ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var /** @type {?} */ result = callback();\n        if (isPromise$1(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * @template T\n * @param {?} dst\n * @param {?} objs\n * @return {?}\n */\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, (/** @type {?} */ (objs)));\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@stable\n */\nvar ApplicationRef = (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var /** @type {?} */ isCurrentlyStable = new Observable_2(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var /** @type {?} */ isStable = new Observable_2(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var /** @type {?} */ stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var /** @type {?} */ unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        (/** @type {?} */ (this)).isStable =\n            merge_2(isCurrentlyStable, share_3.call(isStable));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    ApplicationRef.prototype.bootstrap = /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var /** @type {?} */ componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                /** @type {?} */ ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    ApplicationRef.prototype.tick = /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var /** @type {?} */ scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (/** @type {?} */ e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.attachView = /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.detachView = /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._loadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var /** @type {?} */ listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._unloadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationRef.prototype.ngOnDestroy = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: /**\n         * Returns the number of attached views.\n         * @return {?}\n         */\n        function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationRef.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Console, },\n        { type: Injector, },\n        { type: ErrorHandler, },\n        { type: ComponentFactoryResolver, },\n        { type: ApplicationInitStatus, },\n    ]; };\n    return ApplicationRef;\n}());\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nvar Renderer = (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * \\@experimental\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar RendererFactory2 = (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * \\@experimental\n * @abstract\n */\nvar Renderer2 = (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * \\@stable\n */\nvar ElementRef = (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nvar QueryList = (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n    }\n    Object.defineProperty(QueryList.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"first\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"last\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[this.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._results = flatten$2(res);\n        (/** @type {?} */ (this)).dirty = false;\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = /**\n     * internal\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.destroy = /**\n     * internal\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten$2(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten$2(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {\\@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n * \\@stable\n * @abstract\n */\nvar TemplateRef = (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nvar ViewContainerRef = (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ChangeDetectorRef = (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ViewRef = (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nvar EmbeddedViewRef = (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EventListener = (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugNode = (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugElement = (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.addChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.removeChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement.prototype.insertChildrenAfter = /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    function (child, newChildren) {\n        var _this = this;\n        var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement.prototype.insertBefore = /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (refChild, newChild) {\n        var /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.query = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAll = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAllNodes = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return /** @type {?} */ (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement.prototype.triggerEventHandler = /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    var /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n    var /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n *\n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nvar WrappedValue = (function () {\n    function WrappedValue(wrapped) {\n        this.wrapped = wrapped;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new WrappedValue(value); };\n    return WrappedValue;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nvar SimpleChange = (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) &&\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n    var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var /** @type {?} */ item1 = iterator1.next();\n        var /** @type {?} */ item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n        var /** @type {?} */ item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ nextIt = this._itHead;\n        var /** @type {?} */ nextRemove = this._removalsHead;\n        var /** @type {?} */ addRemoveOffset = 0;\n        var /** @type {?} */ moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var /** @type {?} */ record = !nextRemove ||\n                nextIt && /** @type {?} */ ((nextIt.currentIndex)) < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                /** @type {?} */ ((nextIt)) :\n                nextRemove;\n            var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var /** @type {?} */ currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = /** @type {?} */ ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var /** @type {?} */ localCurrentIndex = /** @type {?} */ ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                            var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var /** @type {?} */ index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var /** @type {?} */ previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify$1(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ record = this._itHead;\n        var /** @type {?} */ mayBeDirty = false;\n        var /** @type {?} */ index;\n        var /** @type {?} */ item;\n        var /** @type {?} */ itemTrackBy;\n        if (Array.isArray(collection)) {\n            (/** @type {?} */ (this)).length = collection.length;\n            for (var /** @type {?} */ index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            (/** @type {?} */ (this)).length = index;\n        }\n        this._truncate(record);\n        (/** @type {?} */ (this)).collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            var /** @type {?} */ nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // todo(vicb) when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var /** @type {?} */ previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var /** @type {?} */ nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prevRemoved;\n        var /** @type {?} */ next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prev;\n        var /** @type {?} */ next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    function (record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * \\@stable\n */\nvar IterableChangeRecord_ = (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\nvar _DuplicateItemRecordList = (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            /** @type {?} */ ((\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */ ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var /** @type {?} */ prev = record._prevDup;\n        var /** @type {?} */ next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ key = trackById;\n        var /** @type {?} */ recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ recordList = /** @type {?} */ ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var /** @type {?} */ previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var /** @type {?} */ moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = /**\n     * @template K, V\n     * @return {?}\n     */\n    function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = /**\n     * @param {?=} map\n     * @return {?}\n     */\n    function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify$1(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    function (map) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var /** @type {?} */ record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var /** @type {?} */ record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    function (before, record) {\n        if (before) {\n            var /** @type {?} */ prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (this._records.has(key)) {\n            var /** @type {?} */ record_1 = /** @type {?} */ ((this._records.get(key)));\n            this._maybeAddToChanges(record_1, value);\n            var /** @type {?} */ prev = record_1._prev;\n            var /** @type {?} */ next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var /** @type {?} */ record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * \\@stable\n */\nvar KeyValueChangeRecord_ = (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n */\n\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nvar IterableDiffers = (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent != null) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n            return new IterableDiffers(factories);\n        }\n        else {\n            return new IterableDiffers(factories);\n        }\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    function (iterable) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    return IterableDiffers;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A differ that tracks changes made to an object over time.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nvar KeyValueDiffers = (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = /**\n     * @param {?} kv\n     * @return {?}\n     */\n    function (kv) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nvar ApplicationModule = (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule$1, args: [{\n                    providers: [\n                        ApplicationRef,\n                        ApplicationInitStatus,\n                        Compiler,\n                        APP_ID_RANDOM_PROVIDER,\n                        { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                        {\n                            provide: LOCALE_ID,\n                            useFactory: _localeFactory,\n                            deps: [[new Inject$1(LOCALE_ID), new Optional(), new SkipSelf()]]\n                        },\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef, },\n    ]; };\n    return ApplicationModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar SecurityContext$1 = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext$1[SecurityContext$1.NONE] = \"NONE\";\nSecurityContext$1[SecurityContext$1.HTML] = \"HTML\";\nSecurityContext$1[SecurityContext$1.STYLE] = \"STYLE\";\nSecurityContext$1[SecurityContext$1.SCRIPT] = \"SCRIPT\";\nSecurityContext$1[SecurityContext$1.URL] = \"URL\";\nSecurityContext$1[SecurityContext$1.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nvar Sanitizer = (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * @record\n */\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    clearProviderOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var /** @type {?} */ msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    var /** @type {?} */ err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    (/** @type {?} */ (err))[ERROR_DEBUG_CONTEXT] = context;\n    (/** @type {?} */ (err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    var /** @type {?} */ key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify$1(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), oldValue, value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    var /** @type {?} */ currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var /** @type {?} */ currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (/** @type {?} */ e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var /** @type {?} */ parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    var /** @type {?} */ parentView = view.parent;\n    if (parentView) {\n        return /** @type {?} */ ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName$1(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} deps\n * @return {?}\n */\nfunction splitDepsDsl(deps) {\n    return deps.map(function (value) {\n        var /** @type {?} */ token;\n        var /** @type {?} */ flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    var /** @type {?} */ renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (/** @type {?} */ ((renderParent.element)).componentRendererType && /** @type {?} */ ((/** @type {?} */ ((renderParent.element)).componentRendererType)).encapsulation === ViewEncapsulation$1.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n    var /** @type {?} */ value = /** @type {?} */ (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    var /** @type {?} */ renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var /** @type {?} */ hostView = /** @type {?} */ ((compView)).parent;\n    var /** @type {?} */ hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    var /** @type {?} */ startIndex = /** @type {?} */ ((hostElDef)).nodeIndex + 1;\n    var /** @type {?} */ endIndex = /** @type {?} */ ((hostElDef)).nodeIndex + /** @type {?} */ ((hostElDef)).childCount;\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = /** @type {?} */ ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!/** @type {?} */ ((hostView)).parent) {\n        // a root view\n        var /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var /** @type {?} */ rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var /** @type {?} */ compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !/** @type {?} */ ((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            /** @type {?} */ ((target)).push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var /** @type {?} */ match = /** @type {?} */ ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    var /** @type {?} */ elDef = /** @type {?} */ ((def.element));\n    var /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n    var /** @type {?} */ renderer = view.renderer;\n    var /** @type {?} */ el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n        var /** @type {?} */ output = def.outputs[i];\n        var /** @type {?} */ handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName$1(output.target, output.eventName));\n        var /** @type {?} */ listenTarget = output.target;\n        var /** @type {?} */ listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var /** @type {?} */ disposable = /** @type {?} */ (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = def.bindings.length;\n    var /** @type {?} */ changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n    var /** @type {?} */ renderNode$$1 = elData.renderElement;\n    var /** @type {?} */ name = /** @type {?} */ ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var /** @type {?} */ bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var /** @type {?} */ renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var /** @type {?} */ renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext$1.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var /** @type {?} */ unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var /** @type {?} */ renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n    var /** @type {?} */ def = data._def;\n    var /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            providers[i] = _createProviderInstance$1(data, provDef);\n        }\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    if (depDef.flags & 1 /* SkipSelf */) {\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    switch (tokenKey$$1) {\n        case InjectorRefTokenKey$1:\n        case NgModuleRefTokenKey:\n            return data;\n    }\n    var /** @type {?} */ providerDef = data._def.providersByKey[tokenKey$$1];\n    if (providerDef) {\n        var /** @type {?} */ providerInstance = data._providers[providerDef.index];\n        if (providerInstance === undefined) {\n            providerInstance = data._providers[providerDef.index] =\n                _createProviderInstance$1(data, providerDef);\n        }\n        return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var /** @type {?} */ injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var /** @type {?} */ def = ngModule._def;\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var /** @type {?} */ instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                instance.ngOnDestroy();\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var /** @type {?} */ prevView = /** @type {?} */ ((viewIndex)) > 0 ? embeddedViews[/** @type {?} */ ((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even accross component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var /** @type {?} */ parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var /** @type {?} */ view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    var /** @type {?} */ view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    var /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n    var /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EMPTY_CONTEXT = new Object();\nvar ComponentFactory_ = (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ inputsArr = [];\n            var /** @type {?} */ inputs = /** @type {?} */ ((this._inputs));\n            for (var /** @type {?} */ propName in inputs) {\n                var /** @type {?} */ templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ outputsArr = [];\n            for (var /** @type {?} */ propName in this._outputs) {\n                var /** @type {?} */ templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n        var /** @type {?} */ componentNodeIndex = /** @type {?} */ ((/** @type {?} */ ((viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n        var /** @type {?} */ view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION$2.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ view = this._view;\n            var /** @type {?} */ elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = /** @type {?} */ ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ len = this._embeddedViews.length;\n        for (var /** @type {?} */ i = len - 1; i >= 0; i--) {\n            var /** @type {?} */ view = /** @type {?} */ ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = this._embeddedViews[index];\n        if (view) {\n            var /** @type {?} */ ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */ ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var /** @type {?} */ contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ viewRef_ = /** @type {?} */ (viewRef);\n        var /** @type {?} */ viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        return this._embeddedViews.indexOf((/** @type {?} */ (viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = /**\n     * @return {?}\n     */\n    function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = /**\n     * @return {?}\n     */\n    function () { this._view.state &= ~4 /* Attached */; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ fs$$1 = this._view.root.rendererFactory;\n        if (fs$$1.begin) {\n            fs$$1.begin();\n        }\n        Services.checkAndUpdateView(this._view);\n        if (fs$$1.end) {\n            fs$$1.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = /**\n     * @return {?}\n     */\n    function () { this._view.state |= 4 /* Attached */; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = /**\n     * @return {?}\n     */\n    function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((/** @type {?} */ ((this._def.element)).template)), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var /** @type {?} */ allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        var /** @type {?} */ el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (parentElement) {\n        var /** @type {?} */ comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    function (parentElement, value) {\n        var /** @type {?} */ node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (parentElement, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (node, viewRootNodes) {\n        var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n        var /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (viewRootNodes) {\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            var /** @type {?} */ node = viewRootNodes[i];\n            var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    function (hostElement, viewAllNodes) {\n        for (var /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n            /** @type {?} */ ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    function (renderElement, methodName, args) {\n        (/** @type {?} */ (renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = /**\n     * @return {?}\n     */\n    function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NgModuleRef_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: 0 /* None */ }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify$1(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var /** @type {?} */ compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var /** @type {?} */ allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var /** @type {?} */ allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var /** @type {?} */ instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n            var /** @type {?} */ output = def.outputs[i];\n            var /** @type {?} */ subscription = instance[/** @type {?} */ ((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).nodeIndex, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    var /** @type {?} */ bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var /** @type {?} */ allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var /** @type {?} */ providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n        case 256 /* TypeValueProvider */:\n            return /** @type {?} */ ((providerDef)).value;\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var /** @type {?} */ startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && /** @type {?} */ ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = /** @type {?} */ ((elDef.parent));\n    }\n    while (view) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(view, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(view, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (/** @type {?} */ ((elDef.element)).template) {\n                        return asElementData(view, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                    return createInjector(view, elDef);\n                default:\n                    var /** @type {?} */ providerDef_1 = /** @type {?} */ (((allowPrivateServices ? /** @type {?} */ ((elDef.element)).allProviders : /** @type {?} */ ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef_1) {\n                        var /** @type {?} */ providerData = asProviderData(view, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(view, providerDef_1) };\n                            view.nodes[providerDef_1.nodeIndex] = /** @type {?} */ (providerData);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(view);\n        elDef = /** @type {?} */ ((viewParentEl(view)));\n        view = /** @type {?} */ ((view.parent));\n    }\n    var /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var /** @type {?} */ compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((def.parent)).nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ propName = /** @type {?} */ ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        var /** @type {?} */ binding_1 = def.bindings[bindingIdx];\n        changes[/** @type {?} */ ((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var /** @type {?} */ nodes = view.def.nodes;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ nodeDef = nodes[i];\n        var /** @type {?} */ parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                callElementProvidersLifecycles(view, parent_1, lifecycles);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles) {\n    for (var /** @type {?} */ i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles) {\n    var /** @type {?} */ providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var /** @type {?} */ provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    var /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var /** @type {?} */ tplDef = /** @type {?} */ ((view.parentNodeDef));\n        view = view.parent;\n        // content queries\n        var /** @type {?} */ end = tplDef.nodeIndex + tplDef.childCount;\n        for (var /** @type {?} */ i = 0; i <= end; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (/** @type {?} */ ((nodeDef.query)).filterId & queryIds) === /** @type {?} */ ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var /** @type {?} */ directiveInstance;\n    var /** @type {?} */ newValues = /** @type {?} */ ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var /** @type {?} */ elementDef = /** @type {?} */ ((/** @type {?} */ ((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var /** @type {?} */ bindings = /** @type {?} */ ((nodeDef.query)).bindings;\n    var /** @type {?} */ notify = false;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var /** @type {?} */ binding = bindings[i];\n        var /** @type {?} */ boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        var /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && /** @type {?} */ ((nodeDef.element)).template &&\n            (/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var /** @type {?} */ elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n                for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                    var /** @type {?} */ embeddedView = embeddedViews[k];\n                    var /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var /** @type {?} */ projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n                    var /** @type {?} */ projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var /** @type {?} */ ngContentIndex = /** @type {?} */ ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[/** @type {?} */ ((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[/** @type {?} */ ((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[/** @type {?} */ ((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[/** @type {?} */ ((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[/** @type {?} */ ((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[/** @type {?} */ ((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[/** @type {?} */ ((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[/** @type {?} */ ((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[/** @type {?} */ ((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[/** @type {?} */ ((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var /** @type {?} */ i = 0; i < values.length; i++) {\n                    value[/** @type {?} */ ((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = values[0];\n                var /** @type {?} */ params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    var /** @type {?} */ renderNode$$1;\n    var /** @type {?} */ renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ value = /** @type {?} */ ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ value = '';\n        for (var /** @type {?} */ i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = /** @type {?} */ ((def.text)).prefix + value;\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    var /** @type {?} */ valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    var /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var /** @type {?} */ rendererType = /** @type {?} */ ((nodeDef.element)).componentRendererType;\n    var /** @type {?} */ compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var /** @type {?} */ nodes = new Array(def.nodes.length);\n    var /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var /** @type {?} */ view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    var /** @type {?} */ renderHost;\n    if (isComponentView(view)) {\n        var /** @type {?} */ hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((/** @type {?} */ ((hostDef)).parent)).nodeIndex).renderElement;\n    }\n    var /** @type {?} */ def = view.def;\n    var /** @type {?} */ nodes = view.nodes;\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var /** @type {?} */ nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var /** @type {?} */ el = /** @type {?} */ (createElement(view, renderHost, nodeDef));\n                var /** @type {?} */ componentView = /** @type {?} */ ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = /** @type {?} */ ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = /** @type {?} */ (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = /** @type {?} */ (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = /** @type {?} */ (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var /** @type {?} */ projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" not dirty\", \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    var /** @type {?} */ len = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        var /** @type {?} */ def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nvar ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    var /** @type {?} */ viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var /** @type {?} */ nodeCount = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < nodeCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.clearProviderOverrides = services.clearProviderOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        clearProviderOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) {\n            return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n        updateRenderer: function (view, checkType) {\n            return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        clearProviderOverrides: debugClearProviderOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    var /** @type {?} */ root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n    var /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n    var /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, defWithOverride, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n}\n/**\n * @return {?}\n */\nfunction debugClearProviderOverrides() {\n    providerOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    for (var /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var /** @type {?} */ elIndicesWithOverwrittenProviders = [];\n        var /** @type {?} */ lastElementDef = null;\n        for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var /** @type {?} */ i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var /** @type {?} */ provider = /** @type {?} */ ((nodeDef.provider));\n                var /** @type {?} */ override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function calcHasOverrides(def) {\n        var /** @type {?} */ hasOverrides = false;\n        var /** @type {?} */ hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var /** @type {?} */ override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n            var /** @type {?} */ provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var /** @type {?} */ override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nvar DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var /** @type {?} */ changed = (/** @type {?} */ (checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        var /** @type {?} */ values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var /** @type {?} */ bindingValues = {};\n            for (var /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n                var /** @type {?} */ binding = nodeDef.bindings[i];\n                var /** @type {?} */ value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var /** @type {?} */ elDef = /** @type {?} */ ((nodeDef.parent));\n            var /** @type {?} */ el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!/** @type {?} */ ((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var /** @type {?} */ attr in bindingValues) {\n                    var /** @type {?} */ value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    (/** @type {?} */ (checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (/** @type {?} */ e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ elDef = this.nodeDef;\n        var /** @type {?} */ elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = /** @type {?} */ ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = /** @type {?} */ ((viewParentEl(elView)));\n                elView = /** @type {?} */ ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ tokens = [];\n            if (this.elDef) {\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var /** @type {?} */ logViewDef;\n        var /** @type {?} */ logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var /** @type {?} */ currRenderNodeIndex = -1;\n        var /** @type {?} */ nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var /** @type {?} */ renderNodeIndex = -1;\n    for (var /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n        var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = /** @type {?} */ ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).nodeIndex);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var /** @type {?} */ refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    var /** @type {?} */ oldAction = _currentAction;\n    var /** @type {?} */ oldView = _currentView;\n    var /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var /** @type {?} */ result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.begin = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.end = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n    }\n    Object.defineProperty(DebugRenderer2.prototype, \"data\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.delegate.data; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        var /** @type {?} */ el = this.delegate.createElement(name, namespace);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ comment = this.delegate.createComment(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ text = this.delegate.createText(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        var /** @type {?} */ debugRefEl = /** @type {?} */ ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        var /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var /** @type {?} */ debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\nvar NgModuleFactory_ = (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory_.prototype.create = /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (parentInjector) {\n        initServicesIfNeeded();\n        var /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @license Angular v5.0.2\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The kind of diagnostic message.\n *\n * @experimental\n */\nvar DiagnosticKind;\n(function (DiagnosticKind) {\n    DiagnosticKind[DiagnosticKind[\"Error\"] = 0] = \"Error\";\n    DiagnosticKind[DiagnosticKind[\"Warning\"] = 1] = \"Warning\";\n})(DiagnosticKind || (DiagnosticKind = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isParseSourceSpan(value) {\n    return value && !!value.start;\n}\nfunction spanOf(span) {\n    if (!span)\n        return undefined;\n    if (isParseSourceSpan(span)) {\n        return { start: span.start.offset, end: span.end.offset };\n    }\n    else {\n        if (span.endSourceSpan) {\n            return { start: span.sourceSpan.start.offset, end: span.endSourceSpan.end.offset };\n        }\n        else if (span.children && span.children.length) {\n            return {\n                start: span.sourceSpan.start.offset,\n                end: spanOf(span.children[span.children.length - 1]).end\n            };\n        }\n        return { start: span.sourceSpan.start.offset, end: span.sourceSpan.end.offset };\n    }\n}\nfunction inSpan(position, span, exclusive) {\n    return span != null && (exclusive ? position >= span.start && position < span.end :\n        position >= span.start && position <= span.end);\n}\nfunction offsetSpan(span, amount) {\n    return { start: span.start + amount, end: span.end + amount };\n}\nfunction isNarrower(spanA, spanB) {\n    return spanA.start >= spanB.start && spanA.end <= spanB.end;\n}\nfunction hasTemplateReference(type) {\n    if (type.diDeps) {\n        for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n            var diDep = _a[_i];\n            if (diDep.token && diDep.token.identifier &&\n                identifierName(diDep.token.identifier) == 'TemplateRef')\n                return true;\n        }\n    }\n    return false;\n}\nfunction getSelectors(info) {\n    var map = new Map();\n    var selectors = flatten(info.directives.map(function (directive) {\n        var selectors = CssSelector.parse(directive.selector);\n        selectors.forEach(function (selector) { return map.set(selector, directive); });\n        return selectors;\n    }));\n    return { selectors: selectors, map: map };\n}\nfunction flatten(a) {\n    return (_a = []).concat.apply(_a, a);\n    var _a;\n}\nfunction removeSuffix(value, suffix) {\n    if (value.endsWith(suffix))\n        return value.substring(0, value.length - suffix.length);\n    return value;\n}\nfunction uniqueByName(elements) {\n    if (elements) {\n        var result = [];\n        var set = new Set();\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            if (!set.has(element.name)) {\n                set.add(element.name);\n                result.push(element);\n            }\n        }\n        return result;\n    }\n}\n\nfunction diagnosticInfoFromTemplateInfo(info) {\n    return {\n        fileName: info.fileName,\n        offset: info.template.span.start,\n        query: info.template.query,\n        members: info.template.members,\n        htmlAst: info.htmlAst,\n        templateAst: info.templateAst\n    };\n}\nfunction findTemplateAstAt(ast, position, allowWidening) {\n    if (allowWidening === void 0) { allowWidening = false; }\n    var path$$1 = [];\n    var visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visit = function (ast, context) {\n            var span = spanOf(ast);\n            if (inSpan(position, span)) {\n                var len = path$$1.length;\n                if (!len || allowWidening || isNarrower(span, spanOf(path$$1[len - 1]))) {\n                    path$$1.push(ast);\n                }\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        class_1.prototype.visitEmbeddedTemplate = function (ast, context) {\n            return this.visitChildren(context, function (visit) {\n                // Ignore reference, variable and providers\n                visit(ast.attrs);\n                visit(ast.directives);\n                visit(ast.children);\n            });\n        };\n        class_1.prototype.visitElement = function (ast, context) {\n            return this.visitChildren(context, function (visit) {\n                // Ingnore providers\n                visit(ast.attrs);\n                visit(ast.inputs);\n                visit(ast.outputs);\n                visit(ast.references);\n                visit(ast.directives);\n                visit(ast.children);\n            });\n        };\n        class_1.prototype.visitDirective = function (ast, context) {\n            // Ignore the host properties of a directive\n            var result = this.visitChildren(context, function (visit) { visit(ast.inputs); });\n            // We never care about the diretive itself, just its inputs.\n            if (path$$1[path$$1.length - 1] == ast) {\n                path$$1.pop();\n            }\n            return result;\n        };\n        return class_1;\n    }(RecursiveTemplateAstVisitor));\n    templateVisitAll(visitor, ast);\n    return new AstPath(path$$1, position);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction findAstAt(ast, position, excludeEmpty) {\n    if (excludeEmpty === void 0) { excludeEmpty = false; }\n    var path$$1 = [];\n    var visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visit = function (ast) {\n            if ((!excludeEmpty || ast.span.start < ast.span.end) && inSpan(position, ast.span)) {\n                path$$1.push(ast);\n                visitAstChildren(ast, this);\n            }\n        };\n        return class_1;\n    }(NullAstVisitor));\n    // We never care about the ASTWithSource node and its visit() method calls its ast's visit so\n    // the visit() method above would never see it.\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    visitor.visit(ast);\n    return new AstPath(path$$1, position);\n}\nfunction getExpressionCompletions(scope, ast, position, query) {\n    var path$$1 = findAstAt(ast, position);\n    if (path$$1.empty)\n        return undefined;\n    var tail = path$$1.tail;\n    var result = scope;\n    function getType(ast) { return new language_services_4(scope, query, {}).getType(ast); }\n    // If the completion request is in a not in a pipe or property access then the global scope\n    // (that is the scope of the implicit receiver) is the right scope as the user is typing the\n    // beginning of an expression.\n    tail.visit({\n        visitBinary: function (ast) { },\n        visitChain: function (ast) { },\n        visitConditional: function (ast) { },\n        visitFunctionCall: function (ast) { },\n        visitImplicitReceiver: function (ast) { },\n        visitInterpolation: function (ast) { result = undefined; },\n        visitKeyedRead: function (ast) { },\n        visitKeyedWrite: function (ast) { },\n        visitLiteralArray: function (ast) { },\n        visitLiteralMap: function (ast) { },\n        visitLiteralPrimitive: function (ast) { },\n        visitMethodCall: function (ast) { },\n        visitPipe: function (ast) {\n            if (position >= ast.exp.span.end &&\n                (!ast.args || !ast.args.length || position < ast.args[0].span.start)) {\n                // We are in a position a pipe name is expected.\n                result = query.getPipes();\n            }\n        },\n        visitPrefixNot: function (ast) { },\n        visitNonNullAssert: function (ast) { },\n        visitPropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitPropertyWrite: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitQuote: function (ast) {\n            // For a quote, return the members of any (if there are any).\n            result = query.getBuiltinType(language_services_7.Any).members();\n        },\n        visitSafeMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitSafePropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n    });\n    return result && result.values();\n}\nfunction getExpressionSymbol(scope, ast, position, query) {\n    var path$$1 = findAstAt(ast, position, /* excludeEmpty */ true);\n    if (path$$1.empty)\n        return undefined;\n    var tail = path$$1.tail;\n    function getType(ast) { return new language_services_4(scope, query, {}).getType(ast); }\n    var symbol = undefined;\n    var span = undefined;\n    // If the completion request is in a not in a pipe or property access then the global scope\n    // (that is the scope of the implicit receiver) is the right scope as the user is typing the\n    // beginning of an expression.\n    tail.visit({\n        visitBinary: function (ast) { },\n        visitChain: function (ast) { },\n        visitConditional: function (ast) { },\n        visitFunctionCall: function (ast) { },\n        visitImplicitReceiver: function (ast) { },\n        visitInterpolation: function (ast) { },\n        visitKeyedRead: function (ast) { },\n        visitKeyedWrite: function (ast) { },\n        visitLiteralArray: function (ast) { },\n        visitLiteralMap: function (ast) { },\n        visitLiteralPrimitive: function (ast) { },\n        visitMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitPipe: function (ast) {\n            if (position >= ast.exp.span.end &&\n                (!ast.args || !ast.args.length || position < ast.args[0].span.start)) {\n                // We are in a position a pipe name is expected.\n                var pipes = query.getPipes();\n                if (pipes) {\n                    symbol = pipes.get(ast.name);\n                    span = ast.span;\n                }\n            }\n        },\n        visitPrefixNot: function (ast) { },\n        visitNonNullAssert: function (ast) { },\n        visitPropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitPropertyWrite: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitQuote: function (ast) { },\n        visitSafeMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitSafePropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n    });\n    if (symbol && span) {\n        return { symbol: symbol, span: span };\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar values = [\n    'ID',\n    'CDATA',\n    'NAME',\n    ['ltr', 'rtl'],\n    ['rect', 'circle', 'poly', 'default'],\n    'NUMBER',\n    ['nohref'],\n    ['ismap'],\n    ['declare'],\n    ['DATA', 'REF', 'OBJECT'],\n    ['GET', 'POST'],\n    'IDREF',\n    ['TEXT', 'PASSWORD', 'CHECKBOX', 'RADIO', 'SUBMIT', 'RESET', 'FILE', 'HIDDEN', 'IMAGE', 'BUTTON'],\n    ['checked'],\n    ['disabled'],\n    ['readonly'],\n    ['multiple'],\n    ['selected'],\n    ['button', 'submit', 'reset'],\n    ['void', 'above', 'below', 'hsides', 'lhs', 'rhs', 'vsides', 'box', 'border'],\n    ['none', 'groups', 'rows', 'cols', 'all'],\n    ['left', 'center', 'right', 'justify', 'char'],\n    ['top', 'middle', 'bottom', 'baseline'],\n    'IDREFS',\n    ['row', 'col', 'rowgroup', 'colgroup'],\n    ['defer']\n];\nvar groups = [\n    { id: 0 },\n    {\n        onclick: 1,\n        ondblclick: 1,\n        onmousedown: 1,\n        onmouseup: 1,\n        onmouseover: 1,\n        onmousemove: 1,\n        onmouseout: 1,\n        onkeypress: 1,\n        onkeydown: 1,\n        onkeyup: 1\n    },\n    { lang: 2, dir: 3 },\n    { onload: 1, onunload: 1 },\n    { name: 1 },\n    { href: 1 },\n    { type: 1 },\n    { alt: 1 },\n    { tabindex: 5 },\n    { media: 1 },\n    { nohref: 6 },\n    { usemap: 1 },\n    { src: 1 },\n    { onfocus: 1, onblur: 1 },\n    { charset: 1 },\n    { declare: 8, classid: 1, codebase: 1, data: 1, codetype: 1, archive: 1, standby: 1 },\n    { title: 1 },\n    { value: 1 },\n    { cite: 1 },\n    { datetime: 1 },\n    { accept: 1 },\n    { shape: 4, coords: 1 },\n    { for: 11\n    },\n    { action: 1, method: 10, enctype: 1, onsubmit: 1, onreset: 1, 'accept-charset': 1 },\n    { valuetype: 9 },\n    { longdesc: 1 },\n    { width: 1 },\n    { disabled: 14 },\n    { readonly: 15, onselect: 1 },\n    { accesskey: 1 },\n    { size: 5, multiple: 16 },\n    { onchange: 1 },\n    { label: 1 },\n    { selected: 17 },\n    { type: 12, checked: 13, size: 1, maxlength: 5 },\n    { rows: 5, cols: 5 },\n    { type: 18 },\n    { height: 1 },\n    { summary: 1, border: 1, frame: 19, rules: 20, cellspacing: 1, cellpadding: 1, datapagesize: 1 },\n    { align: 21, char: 1, charoff: 1, valign: 22 },\n    { span: 5 },\n    { abbr: 1, axis: 1, headers: 23, scope: 24, rowspan: 5, colspan: 5 },\n    { profile: 1 },\n    { 'http-equiv': 2, name: 2, content: 1, scheme: 1 },\n    { class: 1, style: 1 },\n    { hreflang: 2, rel: 1, rev: 1 },\n    { ismap: 7 },\n    { defer: 25, event: 1, for: 1 }\n];\nvar elements = {\n    TT: [0, 1, 2, 16, 44],\n    I: [0, 1, 2, 16, 44],\n    B: [0, 1, 2, 16, 44],\n    BIG: [0, 1, 2, 16, 44],\n    SMALL: [0, 1, 2, 16, 44],\n    EM: [0, 1, 2, 16, 44],\n    STRONG: [0, 1, 2, 16, 44],\n    DFN: [0, 1, 2, 16, 44],\n    CODE: [0, 1, 2, 16, 44],\n    SAMP: [0, 1, 2, 16, 44],\n    KBD: [0, 1, 2, 16, 44],\n    VAR: [0, 1, 2, 16, 44],\n    CITE: [0, 1, 2, 16, 44],\n    ABBR: [0, 1, 2, 16, 44],\n    ACRONYM: [0, 1, 2, 16, 44],\n    SUB: [0, 1, 2, 16, 44],\n    SUP: [0, 1, 2, 16, 44],\n    SPAN: [0, 1, 2, 16, 44],\n    BDO: [0, 2, 16, 44],\n    BR: [0, 16, 44],\n    BODY: [0, 1, 2, 3, 16, 44],\n    ADDRESS: [0, 1, 2, 16, 44],\n    DIV: [0, 1, 2, 16, 44],\n    A: [0, 1, 2, 4, 5, 6, 8, 13, 14, 16, 21, 29, 44, 45],\n    MAP: [0, 1, 2, 4, 16, 44],\n    AREA: [0, 1, 2, 5, 7, 8, 10, 13, 16, 21, 29, 44],\n    LINK: [0, 1, 2, 5, 6, 9, 14, 16, 44, 45],\n    IMG: [0, 1, 2, 4, 7, 11, 12, 16, 25, 26, 37, 44, 46],\n    OBJECT: [0, 1, 2, 4, 6, 8, 11, 15, 16, 26, 37, 44],\n    PARAM: [0, 4, 6, 17, 24],\n    HR: [0, 1, 2, 16, 44],\n    P: [0, 1, 2, 16, 44],\n    H1: [0, 1, 2, 16, 44],\n    H2: [0, 1, 2, 16, 44],\n    H3: [0, 1, 2, 16, 44],\n    H4: [0, 1, 2, 16, 44],\n    H5: [0, 1, 2, 16, 44],\n    H6: [0, 1, 2, 16, 44],\n    PRE: [0, 1, 2, 16, 44],\n    Q: [0, 1, 2, 16, 18, 44],\n    BLOCKQUOTE: [0, 1, 2, 16, 18, 44],\n    INS: [0, 1, 2, 16, 18, 19, 44],\n    DEL: [0, 1, 2, 16, 18, 19, 44],\n    DL: [0, 1, 2, 16, 44],\n    DT: [0, 1, 2, 16, 44],\n    DD: [0, 1, 2, 16, 44],\n    OL: [0, 1, 2, 16, 44],\n    UL: [0, 1, 2, 16, 44],\n    LI: [0, 1, 2, 16, 44],\n    FORM: [0, 1, 2, 4, 16, 20, 23, 44],\n    LABEL: [0, 1, 2, 13, 16, 22, 29, 44],\n    INPUT: [0, 1, 2, 4, 7, 8, 11, 12, 13, 16, 17, 20, 27, 28, 29, 31, 34, 44, 46],\n    SELECT: [0, 1, 2, 4, 8, 13, 16, 27, 30, 31, 44],\n    OPTGROUP: [0, 1, 2, 16, 27, 32, 44],\n    OPTION: [0, 1, 2, 16, 17, 27, 32, 33, 44],\n    TEXTAREA: [0, 1, 2, 4, 8, 13, 16, 27, 28, 29, 31, 35, 44],\n    FIELDSET: [0, 1, 2, 16, 44],\n    LEGEND: [0, 1, 2, 16, 29, 44],\n    BUTTON: [0, 1, 2, 4, 8, 13, 16, 17, 27, 29, 36, 44],\n    TABLE: [0, 1, 2, 16, 26, 38, 44],\n    CAPTION: [0, 1, 2, 16, 44],\n    COLGROUP: [0, 1, 2, 16, 26, 39, 40, 44],\n    COL: [0, 1, 2, 16, 26, 39, 40, 44],\n    THEAD: [0, 1, 2, 16, 39, 44],\n    TBODY: [0, 1, 2, 16, 39, 44],\n    TFOOT: [0, 1, 2, 16, 39, 44],\n    TR: [0, 1, 2, 16, 39, 44],\n    TH: [0, 1, 2, 16, 39, 41, 44],\n    TD: [0, 1, 2, 16, 39, 41, 44],\n    HEAD: [2, 42],\n    TITLE: [2],\n    BASE: [5],\n    META: [2, 43],\n    STYLE: [2, 6, 9, 16],\n    SCRIPT: [6, 12, 14, 47],\n    NOSCRIPT: [0, 1, 2, 16, 44],\n    HTML: [2]\n};\nvar defaultAttributes = [0, 1, 2, 4];\nfunction elementNames() {\n    return Object.keys(elements).sort().map(function (v) { return v.toLowerCase(); });\n}\nfunction compose(indexes) {\n    var result = {};\n    if (indexes) {\n        for (var _i = 0, indexes_1 = indexes; _i < indexes_1.length; _i++) {\n            var index = indexes_1[_i];\n            var group = groups[index];\n            for (var name_1 in group)\n                if (group.hasOwnProperty(name_1))\n                    result[name_1] = values[group[name_1]];\n        }\n    }\n    return result;\n}\nfunction attributeNames(element) {\n    return Object.keys(compose(elements[element.toUpperCase()] || defaultAttributes)).sort();\n}\n\n// This section is describes the DOM property surface of a DOM element and is derivgulp formated\n// from\n// from the SCHEMA strings from the security context information. SCHEMA is copied here because\n// it would be an unnecessary risk to allow this array to be imported from the security context\n// schema registry.\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        /* added manually to avoid breaking changes */\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar EVENT = 'event';\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\nvar SchemaInformation = (function () {\n    function SchemaInformation() {\n        var _this = this;\n        this.schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var parts = encodedType.split('|');\n            var properties = parts[1].split(',');\n            var typeParts = (parts[0] + '^').split('^');\n            var typeName = typeParts[0];\n            var type = {};\n            typeName.split(',').forEach(function (tag) { return _this.schema[tag.toLowerCase()] = type; });\n            var superName = typeParts[1];\n            var superType = superName && _this.schema[superName.toLowerCase()];\n            if (superType) {\n                for (var key in superType) {\n                    type[key] = superType[key];\n                }\n            }\n            properties.forEach(function (property) {\n                if (property == '') {\n                }\n                else if (property.startsWith('*')) {\n                    type[property.substring(1)] = EVENT;\n                }\n                else if (property.startsWith('!')) {\n                    type[property.substring(1)] = BOOLEAN;\n                }\n                else if (property.startsWith('#')) {\n                    type[property.substring(1)] = NUMBER;\n                }\n                else if (property.startsWith('%')) {\n                    type[property.substring(1)] = OBJECT;\n                }\n                else {\n                    type[property] = STRING;\n                }\n            });\n        });\n    }\n    SchemaInformation.prototype.allKnownElements = function () { return Object.keys(this.schema); };\n    SchemaInformation.prototype.eventsOf = function (elementName) {\n        var elementType = this.schema[elementName.toLowerCase()] || {};\n        return Object.keys(elementType).filter(function (property) { return elementType[property] === EVENT; });\n    };\n    SchemaInformation.prototype.propertiesOf = function (elementName) {\n        var elementType = this.schema[elementName.toLowerCase()] || {};\n        return Object.keys(elementType).filter(function (property) { return elementType[property] !== EVENT; });\n    };\n    SchemaInformation.prototype.typeOf = function (elementName, property) {\n        return (this.schema[elementName.toLowerCase()] || {})[property];\n    };\n    Object.defineProperty(SchemaInformation, \"instance\", {\n        get: function () {\n            var result = SchemaInformation._instance;\n            if (!result) {\n                result = SchemaInformation._instance = new SchemaInformation();\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SchemaInformation;\n}());\nfunction eventNames(elementName) {\n    return SchemaInformation.instance.eventsOf(elementName);\n}\nfunction propertyNames(elementName) {\n    return SchemaInformation.instance.propertiesOf(elementName);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar hiddenHtmlElements = {\n    html: true,\n    script: true,\n    noscript: true,\n    base: true,\n    body: true,\n    title: true,\n    head: true,\n    link: true,\n};\nfunction getTemplateCompletions(templateInfo) {\n    var result = undefined;\n    var htmlAst = templateInfo.htmlAst, templateAst = templateInfo.templateAst, template = templateInfo.template;\n    // The templateNode starts at the delimiter character so we add 1 to skip it.\n    if (templateInfo.position != null) {\n        var templatePosition_1 = templateInfo.position - template.span.start;\n        var path_1 = findNode(htmlAst, templatePosition_1);\n        var mostSpecific = path_1.tail;\n        if (path_1.empty || !mostSpecific) {\n            result = elementCompletions(templateInfo, path_1);\n        }\n        else {\n            var astPosition_1 = templatePosition_1 - mostSpecific.sourceSpan.start.offset;\n            mostSpecific.visit({\n                visitElement: function (ast) {\n                    var startTagSpan = spanOf(ast.sourceSpan);\n                    var tagLen = ast.name.length;\n                    if (templatePosition_1 <=\n                        startTagSpan.start + tagLen + 1 /* 1 for the opening angle bracked */) {\n                        // If we are in the tag then return the element completions.\n                        result = elementCompletions(templateInfo, path_1);\n                    }\n                    else if (templatePosition_1 < startTagSpan.end) {\n                        // We are in the attribute section of the element (but not in an attribute).\n                        // Return the attribute completions.\n                        result = attributeCompletions(templateInfo, path_1);\n                    }\n                },\n                visitAttribute: function (ast) {\n                    if (!ast.valueSpan || !inSpan(templatePosition_1, spanOf(ast.valueSpan))) {\n                        // We are in the name of an attribute. Show attribute completions.\n                        result = attributeCompletions(templateInfo, path_1);\n                    }\n                    else if (ast.valueSpan && inSpan(templatePosition_1, spanOf(ast.valueSpan))) {\n                        result = attributeValueCompletions(templateInfo, templatePosition_1, ast);\n                    }\n                },\n                visitText: function (ast) {\n                    // Check if we are in a entity.\n                    result = entityCompletions(getSourceText(template, spanOf(ast)), astPosition_1);\n                    if (result)\n                        return result;\n                    result = interpolationCompletions(templateInfo, templatePosition_1);\n                    if (result)\n                        return result;\n                    var element = path_1.first(Element);\n                    if (element) {\n                        var definition = getHtmlTagDefinition(element.name);\n                        if (definition.contentType === TagContentType.PARSABLE_DATA) {\n                            result = voidElementAttributeCompletions(templateInfo, path_1);\n                            if (!result) {\n                                // If the element can hold content Show element completions.\n                                result = elementCompletions(templateInfo, path_1);\n                            }\n                        }\n                    }\n                    else {\n                        // If no element container, implies parsable data so show elements.\n                        result = voidElementAttributeCompletions(templateInfo, path_1);\n                        if (!result) {\n                            result = elementCompletions(templateInfo, path_1);\n                        }\n                    }\n                },\n                visitComment: function (ast) { },\n                visitExpansion: function (ast) { },\n                visitExpansionCase: function (ast) { }\n            }, null);\n        }\n    }\n    return result;\n}\nfunction attributeCompletions(info, path$$1) {\n    var item = path$$1.tail instanceof Element ? path$$1.tail : path$$1.parentOf(path$$1.tail);\n    if (item instanceof Element) {\n        return attributeCompletionsForElement(info, item.name, item);\n    }\n    return undefined;\n}\nfunction attributeCompletionsForElement(info, elementName, element) {\n    var attributes = getAttributeInfosForElement(info, elementName, element);\n    // Map all the attributes to a completion\n    return attributes.map(function (attr) { return ({\n        kind: attr.fromHtml ? 'html attribute' : 'attribute',\n        name: nameOfAttr(attr),\n        sort: attr.name\n    }); });\n}\nfunction getAttributeInfosForElement(info, elementName, element) {\n    var attributes = [];\n    // Add html attributes\n    var htmlAttributes = attributeNames(elementName) || [];\n    if (htmlAttributes) {\n        attributes.push.apply(attributes, htmlAttributes.map(function (name) { return ({ name: name, fromHtml: true }); }));\n    }\n    // Add html properties\n    var htmlProperties = propertyNames(elementName);\n    if (htmlProperties) {\n        attributes.push.apply(attributes, htmlProperties.map(function (name) { return ({ name: name, input: true }); }));\n    }\n    // Add html events\n    var htmlEvents = eventNames(elementName);\n    if (htmlEvents) {\n        attributes.push.apply(attributes, htmlEvents.map(function (name) { return ({ name: name, output: true }); }));\n    }\n    var _a = getSelectors(info), selectors = _a.selectors, selectorMap = _a.map;\n    if (selectors && selectors.length) {\n        // All the attributes that are selectable should be shown.\n        var applicableSelectors = selectors.filter(function (selector) { return !selector.element || selector.element == elementName; });\n        var selectorAndAttributeNames = applicableSelectors.map(function (selector) { return ({ selector: selector, attrs: selector.attrs.filter(function (a) { return !!a; }) }); });\n        var attrs_1 = flatten(selectorAndAttributeNames.map(function (selectorAndAttr) {\n            var directive = selectorMap.get(selectorAndAttr.selector);\n            var result = selectorAndAttr.attrs.map(function (name) { return ({ name: name, input: name in directive.inputs, output: name in directive.outputs }); });\n            return result;\n        }));\n        // Add template attribute if a directive contains a template reference\n        selectorAndAttributeNames.forEach(function (selectorAndAttr) {\n            var selector = selectorAndAttr.selector;\n            var directive = selectorMap.get(selector);\n            if (directive && hasTemplateReference(directive.type) && selector.attrs.length &&\n                selector.attrs[0]) {\n                attrs_1.push({ name: selector.attrs[0], template: true });\n            }\n        });\n        // All input and output properties of the matching directives should be added.\n        var elementSelector = element ?\n            createElementCssSelector(element) :\n            createElementCssSelector(new Element(elementName, [], [], null, null, null));\n        var matcher = new SelectorMatcher();\n        matcher.addSelectables(selectors);\n        matcher.match(elementSelector, function (selector) {\n            var directive = selectorMap.get(selector);\n            if (directive) {\n                attrs_1.push.apply(attrs_1, Object.keys(directive.inputs).map(function (name) { return ({ name: name, input: true }); }));\n                attrs_1.push.apply(attrs_1, Object.keys(directive.outputs).map(function (name) { return ({ name: name, output: true }); }));\n            }\n        });\n        // If a name shows up twice, fold it into a single value.\n        attrs_1 = foldAttrs(attrs_1);\n        // Now expand them back out to ensure that input/output shows up as well as input and\n        // output.\n        attributes.push.apply(attributes, flatten(attrs_1.map(expandedAttr)));\n    }\n    return attributes;\n}\nfunction attributeValueCompletions(info, position, attr) {\n    var path$$1 = findTemplateAstAt(info.templateAst, position);\n    var mostSpecific = path$$1.tail;\n    var dinfo = diagnosticInfoFromTemplateInfo(info);\n    if (mostSpecific) {\n        var visitor = new ExpressionVisitor(info, position, attr, function () { return language_services_2(dinfo, path$$1, false); });\n        mostSpecific.visit(visitor, null);\n        if (!visitor.result || !visitor.result.length) {\n            // Try allwoing widening the path\n            var widerPath_1 = findTemplateAstAt(info.templateAst, position, /* allowWidening */ true);\n            if (widerPath_1.tail) {\n                var widerVisitor = new ExpressionVisitor(info, position, attr, function () { return language_services_2(dinfo, widerPath_1, false); });\n                widerPath_1.tail.visit(widerVisitor, null);\n                return widerVisitor.result;\n            }\n        }\n        return visitor.result;\n    }\n}\nfunction elementCompletions(info, path$$1) {\n    var htmlNames = elementNames().filter(function (name) { return !(name in hiddenHtmlElements); });\n    // Collect the elements referenced by the selectors\n    var directiveElements = getSelectors(info)\n        .selectors.map(function (selector) { return selector.element; })\n        .filter(function (name) { return !!name; });\n    var components = directiveElements.map(function (name) { return ({ kind: 'component', name: name, sort: name }); });\n    var htmlElements = htmlNames.map(function (name) { return ({ kind: 'element', name: name, sort: name }); });\n    // Return components and html elements\n    return uniqueByName(htmlElements.concat(components));\n}\nfunction entityCompletions(value, position) {\n    // Look for entity completions\n    var re = /&[A-Za-z]*;?(?!\\d)/g;\n    var found;\n    var result = undefined;\n    while (found = re.exec(value)) {\n        var len = found[0].length;\n        if (position >= found.index && position < (found.index + len)) {\n            result = Object.keys(NAMED_ENTITIES)\n                .map(function (name) { return ({ kind: 'entity', name: \"&\" + name + \";\", sort: name }); });\n            break;\n        }\n    }\n    return result;\n}\nfunction interpolationCompletions(info, position) {\n    // Look for an interpolation in at the position.\n    var templatePath = findTemplateAstAt(info.templateAst, position);\n    var mostSpecific = templatePath.tail;\n    if (mostSpecific) {\n        var visitor = new ExpressionVisitor(info, position, undefined, function () { return language_services_2(diagnosticInfoFromTemplateInfo(info), templatePath, false); });\n        mostSpecific.visit(visitor, null);\n        return uniqueByName(visitor.result);\n    }\n}\n// There is a special case of HTML where text that contains a unclosed tag is treated as\n// text. For exaple '<h1> Some <a text </h1>' produces a text nodes inside of the H1\n// element \"Some <a text\". We, however, want to treat this as if the user was requesting\n// the attributes of an \"a\" element, not requesting completion in the a text element. This\n// code checks for this case and returns element completions if it is detected or undefined\n// if it is not.\nfunction voidElementAttributeCompletions(info, path$$1) {\n    var tail = path$$1.tail;\n    if (tail instanceof Text) {\n        var match = tail.value.match(/<(\\w(\\w|\\d|-)*:)?(\\w(\\w|\\d|-)*)\\s/);\n        // The position must be after the match, otherwise we are still in a place where elements\n        // are expected (such as `<|a` or `<a|`; we only want attributes for `<a |` or after).\n        if (match &&\n            path$$1.position >= (match.index || 0) + match[0].length + tail.sourceSpan.start.offset) {\n            return attributeCompletionsForElement(info, match[3]);\n        }\n    }\n}\nvar ExpressionVisitor = (function (_super) {\n    __extends(ExpressionVisitor, _super);\n    function ExpressionVisitor(info, position, attr, getExpressionScope$$1) {\n        var _this = _super.call(this) || this;\n        _this.info = info;\n        _this.position = position;\n        _this.attr = attr;\n        _this.getExpressionScope = getExpressionScope$$1 || (function () { return info.template.members; });\n        return _this;\n    }\n    ExpressionVisitor.prototype.visitDirectiveProperty = function (ast) {\n        this.attributeValueCompletions(ast.value);\n    };\n    ExpressionVisitor.prototype.visitElementProperty = function (ast) {\n        this.attributeValueCompletions(ast.value);\n    };\n    ExpressionVisitor.prototype.visitEvent = function (ast) { this.attributeValueCompletions(ast.handler); };\n    ExpressionVisitor.prototype.visitElement = function (ast) {\n        var _this = this;\n        if (this.attr && getSelectors(this.info) && this.attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {\n            // The value is a template expression but the expression AST was not produced when the\n            // TemplateAst was produce so\n            // do that now.\n            var key_1 = this.attr.name.substr(TEMPLATE_ATTR_PREFIX.length);\n            // Find the selector\n            var selectorInfo = getSelectors(this.info);\n            var selectors = selectorInfo.selectors;\n            var selector_1 = selectors.filter(function (s) { return s.attrs.some(function (attr, i) { return i % 2 == 0 && attr == key_1; }); })[0];\n            var templateBindingResult = this.info.expressionParser.parseTemplateBindings(key_1, this.attr.value, null);\n            // find the template binding that contains the position\n            if (!this.attr.valueSpan)\n                return;\n            var valueRelativePosition_1 = this.position - this.attr.valueSpan.start.offset - 1;\n            var bindings = templateBindingResult.templateBindings;\n            var binding = bindings.find(function (binding) { return inSpan(valueRelativePosition_1, binding.span, /* exclusive */ true); }) ||\n                bindings.find(function (binding) { return inSpan(valueRelativePosition_1, binding.span); });\n            var keyCompletions = function () {\n                var keys = [];\n                if (selector_1) {\n                    var attrNames = selector_1.attrs.filter(function (_, i) { return i % 2 == 0; });\n                    keys = attrNames.filter(function (name) { return name.startsWith(key_1) && name != key_1; })\n                        .map(function (name) { return lowerName(name.substr(key_1.length)); });\n                }\n                keys.push('let');\n                _this.result = keys.map(function (key) { return ({ kind: 'key', name: key, sort: key }); });\n            };\n            if (!binding || (binding.key == key_1 && !binding.expression)) {\n                // We are in the root binding. We should return `let` and keys that are left in the\n                // selector.\n                keyCompletions();\n            }\n            else if (binding.keyIsVar) {\n                var equalLocation = this.attr.value.indexOf('=');\n                this.result = [];\n                if (equalLocation >= 0 && valueRelativePosition_1 >= equalLocation) {\n                    // We are after the '=' in a let clause. The valid values here are the members of the\n                    // template reference's type parameter.\n                    var directiveMetadata = selectorInfo.map.get(selector_1);\n                    if (directiveMetadata) {\n                        var contextTable = this.info.template.query.getTemplateContext(directiveMetadata.type.reference);\n                        if (contextTable) {\n                            this.result = this.symbolsToCompletions(contextTable.values());\n                        }\n                    }\n                }\n                else if (binding.key && valueRelativePosition_1 <= (binding.key.length - key_1.length)) {\n                    keyCompletions();\n                }\n            }\n            else {\n                // If the position is in the expression or after the key or there is no key, return the\n                // expression completions\n                if ((binding.expression && inSpan(valueRelativePosition_1, binding.expression.ast.span)) ||\n                    (binding.key &&\n                        valueRelativePosition_1 > binding.span.start + (binding.key.length - key_1.length)) ||\n                    !binding.key) {\n                    var span = new ParseSpan(0, this.attr.value.length);\n                    this.attributeValueCompletions(binding.expression ? binding.expression.ast :\n                        new PropertyRead(span, new ImplicitReceiver(span), ''), valueRelativePosition_1);\n                }\n                else {\n                    keyCompletions();\n                }\n            }\n        }\n    };\n    ExpressionVisitor.prototype.visitBoundText = function (ast) {\n        var expressionPosition = this.position - ast.sourceSpan.start.offset;\n        if (inSpan(expressionPosition, ast.value.span)) {\n            var completions = getExpressionCompletions(this.getExpressionScope(), ast.value, expressionPosition, this.info.template.query);\n            if (completions) {\n                this.result = this.symbolsToCompletions(completions);\n            }\n        }\n    };\n    ExpressionVisitor.prototype.attributeValueCompletions = function (value, position) {\n        var symbols = getExpressionCompletions(this.getExpressionScope(), value, position == null ? this.attributeValuePosition : position, this.info.template.query);\n        if (symbols) {\n            this.result = this.symbolsToCompletions(symbols);\n        }\n    };\n    ExpressionVisitor.prototype.symbolsToCompletions = function (symbols) {\n        return symbols.filter(function (s) { return !s.name.startsWith('__') && s.public; })\n            .map(function (symbol) { return ({ kind: symbol.kind, name: symbol.name, sort: symbol.name }); });\n    };\n    Object.defineProperty(ExpressionVisitor.prototype, \"attributeValuePosition\", {\n        get: function () {\n            if (this.attr && this.attr.valueSpan) {\n                return this.position - this.attr.valueSpan.start.offset - 1;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ExpressionVisitor;\n}(NullTemplateVisitor));\nfunction getSourceText(template, span) {\n    return template.source.substring(span.start, span.end);\n}\nfunction nameOfAttr(attr) {\n    var name = attr.name;\n    if (attr.output) {\n        name = removeSuffix(name, 'Events');\n        name = removeSuffix(name, 'Changed');\n    }\n    var result = [name];\n    if (attr.input) {\n        result.unshift('[');\n        result.push(']');\n    }\n    if (attr.output) {\n        result.unshift('(');\n        result.push(')');\n    }\n    if (attr.template) {\n        result.unshift('*');\n    }\n    return result.join('');\n}\nvar templateAttr = /^(\\w+:)?(template$|^\\*)/;\nfunction createElementCssSelector(element) {\n    var cssSelector = new CssSelector();\n    var elNameNoNs = splitNsName(element.name)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var _i = 0, _a = element.attrs; _i < _a.length; _i++) {\n        var attr = _a[_i];\n        if (!attr.name.match(templateAttr)) {\n            var _b = splitNsName(attr.name), _ = _b[0], attrNameNoNs = _b[1];\n            cssSelector.addAttribute(attrNameNoNs, attr.value);\n            if (attr.name.toLowerCase() == 'class') {\n                var classes = attr.value.split(/s+/g);\n                classes.forEach(function (className) { return cssSelector.addClassName(className); });\n            }\n        }\n    }\n    return cssSelector;\n}\nfunction foldAttrs(attrs) {\n    var inputOutput = new Map();\n    var templates = new Map();\n    var result = [];\n    attrs.forEach(function (attr) {\n        if (attr.fromHtml) {\n            return attr;\n        }\n        if (attr.template) {\n            var duplicate = templates.get(attr.name);\n            if (!duplicate) {\n                result.push({ name: attr.name, template: true });\n                templates.set(attr.name, attr);\n            }\n        }\n        if (attr.input || attr.output) {\n            var duplicate = inputOutput.get(attr.name);\n            if (duplicate) {\n                duplicate.input = duplicate.input || attr.input;\n                duplicate.output = duplicate.output || attr.output;\n            }\n            else {\n                var cloneAttr = { name: attr.name };\n                if (attr.input)\n                    cloneAttr.input = true;\n                if (attr.output)\n                    cloneAttr.output = true;\n                result.push(cloneAttr);\n                inputOutput.set(attr.name, cloneAttr);\n            }\n        }\n    });\n    return result;\n}\nfunction expandedAttr(attr) {\n    if (attr.input && attr.output) {\n        return [\n            attr, { name: attr.name, input: true, output: false },\n            { name: attr.name, input: false, output: true }\n        ];\n    }\n    return [attr];\n}\nfunction lowerName(name) {\n    return name && (name[0].toLowerCase() + name.substr(1));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction locateSymbol(info) {\n    if (!info.position)\n        return undefined;\n    var templatePosition = info.position - info.template.span.start;\n    var path$$1 = findTemplateAstAt(info.templateAst, templatePosition);\n    if (path$$1.tail) {\n        var symbol_1 = undefined;\n        var span_1 = undefined;\n        var attributeValueSymbol_1 = function (ast, inEvent) {\n            if (inEvent === void 0) { inEvent = false; }\n            var attribute = findAttribute(info);\n            if (attribute) {\n                if (inSpan(templatePosition, spanOf(attribute.valueSpan))) {\n                    var dinfo = diagnosticInfoFromTemplateInfo(info);\n                    var scope = language_services_2(dinfo, path$$1, inEvent);\n                    if (attribute.valueSpan) {\n                        var expressionOffset = attribute.valueSpan.start.offset + 1;\n                        var result = getExpressionSymbol(scope, ast, templatePosition - expressionOffset, info.template.query);\n                        if (result) {\n                            symbol_1 = result.symbol;\n                            span_1 = offsetSpan(result.span, expressionOffset);\n                        }\n                    }\n                    return true;\n                }\n            }\n            return false;\n        };\n        path$$1.tail.visit({\n            visitNgContent: function (ast) { },\n            visitEmbeddedTemplate: function (ast) { },\n            visitElement: function (ast) {\n                var component = ast.directives.find(function (d) { return d.directive.isComponent; });\n                if (component) {\n                    symbol_1 = info.template.query.getTypeSymbol(component.directive.type.reference);\n                    symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'component');\n                    span_1 = spanOf(ast);\n                }\n                else {\n                    // Find a directive that matches the element name\n                    var directive = ast.directives.find(function (d) { return d.directive.selector != null && d.directive.selector.indexOf(ast.name) >= 0; });\n                    if (directive) {\n                        symbol_1 = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                        symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'directive');\n                        span_1 = spanOf(ast);\n                    }\n                }\n            },\n            visitReference: function (ast) {\n                symbol_1 = ast.value && info.template.query.getTypeSymbol(tokenReference(ast.value));\n                span_1 = spanOf(ast);\n            },\n            visitVariable: function (ast) { },\n            visitEvent: function (ast) {\n                if (!attributeValueSymbol_1(ast.handler, /* inEvent */ true)) {\n                    symbol_1 = findOutputBinding(info, path$$1, ast);\n                    symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'event');\n                    span_1 = spanOf(ast);\n                }\n            },\n            visitElementProperty: function (ast) { attributeValueSymbol_1(ast.value); },\n            visitAttr: function (ast) { },\n            visitBoundText: function (ast) {\n                var expressionPosition = templatePosition - ast.sourceSpan.start.offset;\n                if (inSpan(expressionPosition, ast.value.span)) {\n                    var dinfo = diagnosticInfoFromTemplateInfo(info);\n                    var scope = language_services_2(dinfo, path$$1, /* includeEvent */ false);\n                    var result = getExpressionSymbol(scope, ast.value, expressionPosition, info.template.query);\n                    if (result) {\n                        symbol_1 = result.symbol;\n                        span_1 = offsetSpan(result.span, ast.sourceSpan.start.offset);\n                    }\n                }\n            },\n            visitText: function (ast) { },\n            visitDirective: function (ast) {\n                symbol_1 = info.template.query.getTypeSymbol(ast.directive.type.reference);\n                span_1 = spanOf(ast);\n            },\n            visitDirectiveProperty: function (ast) {\n                if (!attributeValueSymbol_1(ast.value)) {\n                    symbol_1 = findInputBinding(info, path$$1, ast);\n                    span_1 = spanOf(ast);\n                }\n            }\n        }, null);\n        if (symbol_1 && span_1) {\n            return { symbol: symbol_1, span: offsetSpan(span_1, info.template.span.start) };\n        }\n    }\n}\nfunction findAttribute(info) {\n    if (info.position) {\n        var templatePosition = info.position - info.template.span.start;\n        var path$$1 = findNode(info.htmlAst, templatePosition);\n        return path$$1.first(Attribute$1);\n    }\n}\nfunction findInputBinding(info, path$$1, binding) {\n    var element = path$$1.first(ElementAst);\n    if (element) {\n        for (var _i = 0, _a = element.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            var invertedInput = invertMap(directive.directive.inputs);\n            var fieldName = invertedInput[binding.templateName];\n            if (fieldName) {\n                var classSymbol = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                if (classSymbol) {\n                    return classSymbol.members().get(fieldName);\n                }\n            }\n        }\n    }\n}\nfunction findOutputBinding(info, path$$1, binding) {\n    var element = path$$1.first(ElementAst);\n    if (element) {\n        for (var _i = 0, _a = element.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            var invertedOutputs = invertMap(directive.directive.outputs);\n            var fieldName = invertedOutputs[binding.name];\n            if (fieldName) {\n                var classSymbol = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                if (classSymbol) {\n                    return classSymbol.members().get(fieldName);\n                }\n            }\n        }\n    }\n}\nfunction invertMap(obj) {\n    var result = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var name_1 = _a[_i];\n        var v = obj[name_1];\n        result[v] = name_1;\n    }\n    return result;\n}\n/**\n * Wrap a symbol and change its kind to component.\n */\nvar OverrideKindSymbol = (function () {\n    function OverrideKindSymbol(sym, kindOverride) {\n        this.sym = sym;\n        this.kind = kindOverride;\n    }\n    Object.defineProperty(OverrideKindSymbol.prototype, \"name\", {\n        get: function () { return this.sym.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"language\", {\n        get: function () { return this.sym.language; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"type\", {\n        get: function () { return this.sym.type; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"container\", {\n        get: function () { return this.sym.container; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"public\", {\n        get: function () { return this.sym.public; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"callable\", {\n        get: function () { return this.sym.callable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"nullable\", {\n        get: function () { return this.sym.nullable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"definition\", {\n        get: function () { return this.sym.definition; },\n        enumerable: true,\n        configurable: true\n    });\n    OverrideKindSymbol.prototype.members = function () { return this.sym.members(); };\n    OverrideKindSymbol.prototype.signatures = function () { return this.sym.signatures(); };\n    OverrideKindSymbol.prototype.selectSignature = function (types) { return this.sym.selectSignature(types); };\n    OverrideKindSymbol.prototype.indexed = function (argument) { return this.sym.indexed(argument); };\n    return OverrideKindSymbol;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getDefinition(info) {\n    var result = locateSymbol(info);\n    return result && result.symbol.definition;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getTemplateDiagnostics(fileName, astProvider, templates) {\n    var results = [];\n    var _loop_1 = function (template) {\n        var ast = astProvider.getTemplateAst(template, fileName);\n        if (ast) {\n            if (ast.parseErrors && ast.parseErrors.length) {\n                results.push.apply(results, ast.parseErrors.map(function (e) { return ({\n                    kind: DiagnosticKind.Error,\n                    span: offsetSpan(spanOf(e.span), template.span.start),\n                    message: e.msg\n                }); }));\n            }\n            else if (ast.templateAst && ast.htmlAst) {\n                var info = {\n                    templateAst: ast.templateAst,\n                    htmlAst: ast.htmlAst,\n                    offset: template.span.start,\n                    query: template.query,\n                    members: template.members\n                };\n                var expressionDiagnostics = language_services_3(info);\n                results.push.apply(results, expressionDiagnostics);\n            }\n            if (ast.errors) {\n                results.push.apply(results, ast.errors.map(function (e) { return ({ kind: e.kind, span: e.span || template.span, message: e.message }); }));\n            }\n        }\n    };\n    for (var _i = 0, templates_1 = templates; _i < templates_1.length; _i++) {\n        var template = templates_1[_i];\n        _loop_1(template);\n    }\n    return results;\n}\nfunction getDeclarationDiagnostics(declarations, modules) {\n    var results = [];\n    var directives = undefined;\n    var _loop_2 = function (declaration) {\n        var report = function (message, span) {\n            results.push({\n                kind: DiagnosticKind.Error,\n                span: span || declaration.declarationSpan, message: message\n            });\n        };\n        for (var _i = 0, _a = declaration.errors; _i < _a.length; _i++) {\n            var error = _a[_i];\n            report(error.message, error.span);\n        }\n        if (declaration.metadata) {\n            if (declaration.metadata.isComponent) {\n                if (!modules.ngModuleByPipeOrDirective.has(declaration.type)) {\n                    report(\"Component '\" + declaration.type.name + \"' is not included in a module and will not be available inside a template. Consider adding it to a NgModule declaration\");\n                }\n                if (!declaration.metadata.template.template &&\n                    !declaration.metadata.template.templateUrl) {\n                    report(\"Component \" + declaration.type.name + \" must have a template or templateUrl\");\n                }\n            }\n            else {\n                if (!directives) {\n                    directives = new Set();\n                    modules.ngModules.forEach(function (module) {\n                        module.declaredDirectives.forEach(function (directive) { directives.add(directive.reference); });\n                    });\n                }\n                if (!directives.has(declaration.type)) {\n                    report(\"Directive '\" + declaration.type.name + \"' is not included in a module and will not be available inside a template. Consider adding it to a NgModule declaration\");\n                }\n            }\n        }\n    };\n    for (var _i = 0, declarations_1 = declarations; _i < declarations_1.length; _i++) {\n        var declaration = declarations_1[_i];\n        _loop_2(declaration);\n    }\n    return results;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getHover(info) {\n    var result = locateSymbol(info);\n    if (result) {\n        return { text: hoverTextOf(result.symbol), span: result.span };\n    }\n}\nfunction hoverTextOf(symbol) {\n    var result = [{ text: symbol.kind }, { text: ' ' }, { text: symbol.name, language: symbol.language }];\n    var container = symbol.container;\n    if (container) {\n        result.push({ text: ' of ' }, { text: container.name, language: container.language });\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create an instance of an Angular `LanguageService`.\n *\n * @experimental\n */\nfunction createLanguageService(host) {\n    return new LanguageServiceImpl(host);\n}\nvar LanguageServiceImpl = (function () {\n    function LanguageServiceImpl(host) {\n        this.host = host;\n    }\n    Object.defineProperty(LanguageServiceImpl.prototype, \"metadataResolver\", {\n        get: function () { return this.host.resolver; },\n        enumerable: true,\n        configurable: true\n    });\n    LanguageServiceImpl.prototype.getTemplateReferences = function () { return this.host.getTemplateReferences(); };\n    LanguageServiceImpl.prototype.getDiagnostics = function (fileName) {\n        var results = [];\n        var templates = this.host.getTemplates(fileName);\n        if (templates && templates.length) {\n            results.push.apply(results, getTemplateDiagnostics(fileName, this, templates));\n        }\n        var declarations = this.host.getDeclarations(fileName);\n        if (declarations && declarations.length) {\n            var summary = this.host.getAnalyzedModules();\n            results.push.apply(results, getDeclarationDiagnostics(declarations, summary));\n        }\n        return uniqueBySpan(results);\n    };\n    LanguageServiceImpl.prototype.getPipesAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return templateInfo.pipes;\n        }\n        return [];\n    };\n    LanguageServiceImpl.prototype.getCompletionsAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getTemplateCompletions(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getDefinitionAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getDefinition(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getHoverAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getHover(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getTemplateAstAtPosition = function (fileName, position) {\n        var template = this.host.getTemplateAt(fileName, position);\n        if (template) {\n            var astResult = this.getTemplateAst(template, fileName);\n            if (astResult && astResult.htmlAst && astResult.templateAst && astResult.directive &&\n                astResult.directives && astResult.pipes && astResult.expressionParser)\n                return {\n                    position: position,\n                    fileName: fileName,\n                    template: template,\n                    htmlAst: astResult.htmlAst,\n                    directive: astResult.directive,\n                    directives: astResult.directives,\n                    pipes: astResult.pipes,\n                    templateAst: astResult.templateAst,\n                    expressionParser: astResult.expressionParser\n                };\n        }\n        return undefined;\n    };\n    LanguageServiceImpl.prototype.getTemplateAst = function (template, contextFile) {\n        var _this = this;\n        var result = undefined;\n        try {\n            var resolvedMetadata = this.metadataResolver.getNonNormalizedDirectiveMetadata(template.type);\n            var metadata = resolvedMetadata && resolvedMetadata.metadata;\n            if (metadata) {\n                var rawHtmlParser = new HtmlParser();\n                var htmlParser = new I18NHtmlParser(rawHtmlParser);\n                var expressionParser = new Parser(new Lexer());\n                var config = new CompilerConfig();\n                var parser = new TemplateParser(config, this.host.resolver.getReflector(), expressionParser, new DomElementSchemaRegistry(), htmlParser, null, []);\n                var htmlResult = htmlParser.parse(template.source, '', true);\n                var analyzedModules = this.host.getAnalyzedModules();\n                var errors = undefined;\n                var ngModule = analyzedModules.ngModuleByPipeOrDirective.get(template.type);\n                if (!ngModule) {\n                    // Reported by the the declaration diagnostics.\n                    ngModule = findSuitableDefaultModule(analyzedModules);\n                }\n                if (ngModule) {\n                    var resolvedDirectives = ngModule.transitiveModule.directives.map(function (d) { return _this.host.resolver.getNonNormalizedDirectiveMetadata(d.reference); });\n                    var directives = removeMissing(resolvedDirectives).map(function (d) { return d.metadata.toSummary(); });\n                    var pipes = ngModule.transitiveModule.pipes.map(function (p) { return _this.host.resolver.getOrLoadPipeMetadata(p.reference).toSummary(); });\n                    var schemas = ngModule.schemas;\n                    var parseResult = parser.tryParseHtml(htmlResult, metadata, directives, pipes, schemas);\n                    result = {\n                        htmlAst: htmlResult.rootNodes,\n                        templateAst: parseResult.templateAst,\n                        directive: metadata, directives: directives, pipes: pipes,\n                        parseErrors: parseResult.errors, expressionParser: expressionParser, errors: errors\n                    };\n                }\n            }\n        }\n        catch (e) {\n            var span = template.span;\n            if (e.fileName == contextFile) {\n                span = template.query.getSpanAt(e.line, e.column) || span;\n            }\n            result = { errors: [{ kind: DiagnosticKind.Error, message: e.message, span: span }] };\n        }\n        return result || {};\n    };\n    return LanguageServiceImpl;\n}());\nfunction removeMissing(values) {\n    return values.filter(function (e) { return !!e; });\n}\nfunction uniqueBySpan(elements) {\n    if (elements) {\n        var result = [];\n        var map = new Map();\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            var span = element.span;\n            var set = map.get(span.start);\n            if (!set) {\n                set = new Set();\n                map.set(span.start, set);\n            }\n            if (!set.has(span.end)) {\n                set.add(span.end);\n                result.push(element);\n            }\n        }\n        return result;\n    }\n}\nfunction findSuitableDefaultModule(modules) {\n    var result = undefined;\n    var resultSize = 0;\n    for (var _i = 0, _a = modules.ngModules; _i < _a.length; _i++) {\n        var module_1 = _a[_i];\n        var moduleSize = module_1.transitiveModule.directives.length;\n        if (moduleSize > resultSize) {\n            result = module_1;\n            resultSize = moduleSize;\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ReflectorModuleModuleResolutionHost = (function () {\n    function ReflectorModuleModuleResolutionHost(host, getProgram) {\n        var _this = this;\n        this.host = host;\n        this.getProgram = getProgram;\n        // Note: verboseInvalidExpressions is important so that\n        // the collector will collect errors instead of throwing\n        this.metadataCollector = new language_services_13({ verboseInvalidExpression: true });\n        if (host.directoryExists)\n            this.directoryExists = function (directoryName) { return _this.host.directoryExists(directoryName); };\n    }\n    ReflectorModuleModuleResolutionHost.prototype.fileExists = function (fileName) { return !!this.host.getScriptSnapshot(fileName); };\n    ReflectorModuleModuleResolutionHost.prototype.readFile = function (fileName) {\n        var snapshot = this.host.getScriptSnapshot(fileName);\n        if (snapshot) {\n            return snapshot.getText(0, snapshot.getLength());\n        }\n        // Typescript readFile() declaration should be `readFile(fileName: string): string | undefined\n        return undefined;\n    };\n    ReflectorModuleModuleResolutionHost.prototype.getSourceFileMetadata = function (fileName) {\n        var sf = this.getProgram().getSourceFile(fileName);\n        return sf ? this.metadataCollector.getMetadata(sf) : undefined;\n    };\n    ReflectorModuleModuleResolutionHost.prototype.cacheMetadata = function (fileName) {\n        // Don't cache the metadata for .ts files as they might change in the editor!\n        return fileName.endsWith('.d.ts');\n    };\n    return ReflectorModuleModuleResolutionHost;\n}());\nvar ReflectorHost = (function () {\n    function ReflectorHost(getProgram, serviceHost, options) {\n        this.options = options;\n        this.metadataReaderCache = language_services_14();\n        this.hostAdapter = new ReflectorModuleModuleResolutionHost(serviceHost, getProgram);\n        this.moduleResolutionCache =\n            ts.createModuleResolutionCache(serviceHost.getCurrentDirectory(), function (s) { return s; });\n    }\n    ReflectorHost.prototype.getMetadataFor = function (modulePath) {\n        return language_services_15(modulePath, this.hostAdapter, this.metadataReaderCache);\n    };\n    ReflectorHost.prototype.moduleNameToFileName = function (moduleName, containingFile) {\n        if (!containingFile) {\n            if (moduleName.indexOf('.') === 0) {\n                throw new Error('Resolution of relative paths requires a containing file.');\n            }\n            // Any containing file gives the same result for absolute imports\n            containingFile = path.join(this.options.basePath, 'index.ts');\n        }\n        var resolved = ts.resolveModuleName(moduleName, containingFile, this.options, this.hostAdapter)\n            .resolvedModule;\n        return resolved ? resolved.resolvedFileName : null;\n    };\n    return ReflectorHost;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a `LanguageServiceHost`\n */\nfunction createLanguageServiceFromTypescript(host, service) {\n    var ngHost = new TypeScriptServiceHost(host, service);\n    var ngServer = createLanguageService(ngHost);\n    ngHost.setSite(ngServer);\n    return ngServer;\n}\n/**\n * The language service never needs the normalized versions of the metadata. To avoid parsing\n * the content and resolving references, return an empty file. This also allows normalizing\n * template that are syntatically incorrect which is required to provide completions in\n * syntactically incorrect templates.\n */\nvar DummyHtmlParser = (function (_super) {\n    __extends(DummyHtmlParser, _super);\n    function DummyHtmlParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DummyHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return new ParseTreeResult([], []);\n    };\n    return DummyHtmlParser;\n}(HtmlParser));\n/**\n * Avoid loading resources in the language servcie by using a dummy loader.\n */\nvar DummyResourceLoader = (function (_super) {\n    __extends(DummyResourceLoader, _super);\n    function DummyResourceLoader() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DummyResourceLoader.prototype.get = function (url) { return Promise.resolve(''); };\n    return DummyResourceLoader;\n}(ResourceLoader));\n/**\n * An implemntation of a `LanguageServiceHost` for a TypeScript project.\n *\n * The `TypeScriptServiceHost` implements the Angular `LanguageServiceHost` using\n * the TypeScript language services.\n *\n * @experimental\n */\nvar TypeScriptServiceHost = (function () {\n    function TypeScriptServiceHost(host, tsService) {\n        this.host = host;\n        this.tsService = tsService;\n        this._staticSymbolCache = new StaticSymbolCache();\n        this._typeCache = [];\n        this.modulesOutOfDate = true;\n        this.fileVersions = new Map();\n    }\n    TypeScriptServiceHost.prototype.setSite = function (service) { this.service = service; };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"resolver\", {\n        /**\n         * Angular LanguageServiceHost implementation\n         */\n        get: function () {\n            var _this = this;\n            this.validate();\n            var result = this._resolver;\n            if (!result) {\n                var moduleResolver = new NgModuleResolver(this.reflector);\n                var directiveResolver = new DirectiveResolver(this.reflector);\n                var pipeResolver = new PipeResolver(this.reflector);\n                var elementSchemaRegistry = new DomElementSchemaRegistry();\n                var resourceLoader = new DummyResourceLoader();\n                var urlResolver = createOfflineCompileUrlResolver();\n                var htmlParser = new DummyHtmlParser();\n                // This tracks the CompileConfig in codegen.ts. Currently these options\n                // are hard-coded.\n                var config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation$1.Emulated, useJit: false });\n                var directiveNormalizer = new DirectiveNormalizer(resourceLoader, urlResolver, htmlParser, config);\n                result = this._resolver = new CompileMetadataResolver(config, htmlParser, moduleResolver, directiveResolver, pipeResolver, new JitSummaryResolver(), elementSchemaRegistry, directiveNormalizer, new Console(), this._staticSymbolCache, this.reflector, function (error, type) { return _this.collectError(error, type && type.filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.getTemplateReferences = function () {\n        this.ensureTemplateMap();\n        return this.templateReferences || [];\n    };\n    TypeScriptServiceHost.prototype.getTemplateAt = function (fileName, position) {\n        var sourceFile = this.getSourceFile(fileName);\n        if (sourceFile) {\n            this.context = sourceFile.fileName;\n            var node = this.findNode(sourceFile, position);\n            if (node) {\n                return this.getSourceFromNode(fileName, this.host.getScriptVersion(sourceFile.fileName), node);\n            }\n        }\n        else {\n            this.ensureTemplateMap();\n            // TODO: Cannocalize the file?\n            var componentType = this.fileToComponent.get(fileName);\n            if (componentType) {\n                return this.getSourceFromType(fileName, this.host.getScriptVersion(fileName), componentType);\n            }\n        }\n        return undefined;\n    };\n    TypeScriptServiceHost.prototype.getAnalyzedModules = function () {\n        this.validate();\n        return this.ensureAnalyzedModules();\n    };\n    TypeScriptServiceHost.prototype.ensureAnalyzedModules = function () {\n        var analyzedModules = this.analyzedModules;\n        if (!analyzedModules) {\n            var analyzeHost = { isSourceFile: function (filePath) { return true; } };\n            var programFiles = this.program.getSourceFiles().map(function (sf) { return sf.fileName; });\n            analyzedModules = this.analyzedModules =\n                analyzeNgModules(programFiles, analyzeHost, this.staticSymbolResolver, this.resolver);\n        }\n        return analyzedModules;\n    };\n    TypeScriptServiceHost.prototype.getTemplates = function (fileName) {\n        var _this = this;\n        this.ensureTemplateMap();\n        var componentType = this.fileToComponent.get(fileName);\n        if (componentType) {\n            var templateSource = this.getTemplateAt(fileName, 0);\n            if (templateSource) {\n                return [templateSource];\n            }\n        }\n        else {\n            var version_1 = this.host.getScriptVersion(fileName);\n            var result_1 = [];\n            // Find each template string in the file\n            var visit_1 = function (child) {\n                var templateSource = _this.getSourceFromNode(fileName, version_1, child);\n                if (templateSource) {\n                    result_1.push(templateSource);\n                }\n                else {\n                    ts.forEachChild(child, visit_1);\n                }\n            };\n            var sourceFile = this.getSourceFile(fileName);\n            if (sourceFile) {\n                this.context = sourceFile.path || sourceFile.fileName;\n                ts.forEachChild(sourceFile, visit_1);\n            }\n            return result_1.length ? result_1 : undefined;\n        }\n    };\n    TypeScriptServiceHost.prototype.getDeclarations = function (fileName) {\n        var _this = this;\n        var result = [];\n        var sourceFile = this.getSourceFile(fileName);\n        if (sourceFile) {\n            var visit_2 = function (child) {\n                var declaration = _this.getDeclarationFromNode(sourceFile, child);\n                if (declaration) {\n                    result.push(declaration);\n                }\n                else {\n                    ts.forEachChild(child, visit_2);\n                }\n            };\n            ts.forEachChild(sourceFile, visit_2);\n        }\n        return result;\n    };\n    TypeScriptServiceHost.prototype.getSourceFile = function (fileName) {\n        return this.tsService.getProgram().getSourceFile(fileName);\n    };\n    TypeScriptServiceHost.prototype.updateAnalyzedModules = function () {\n        this.validate();\n        if (this.modulesOutOfDate) {\n            this.analyzedModules = null;\n            this._reflector = null;\n            this.templateReferences = null;\n            this.fileToComponent = null;\n            this.ensureAnalyzedModules();\n            this.modulesOutOfDate = false;\n        }\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"program\", {\n        get: function () { return this.tsService.getProgram(); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"checker\", {\n        get: function () {\n            var checker = this._checker;\n            if (!checker) {\n                checker = this._checker = this.program.getTypeChecker();\n            }\n            return checker;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.validate = function () {\n        var _this = this;\n        var program = this.program;\n        if (this._staticSymbolResolver && this.lastProgram != program) {\n            // Invalidate file that have changed in the static symbol resolver\n            var invalidateFile = function (fileName) {\n                return _this._staticSymbolResolver.invalidateFile(fileName);\n            };\n            this.clearCaches();\n            var seen_1 = new Set();\n            for (var _i = 0, _a = this.program.getSourceFiles(); _i < _a.length; _i++) {\n                var sourceFile = _a[_i];\n                var fileName = sourceFile.fileName;\n                seen_1.add(fileName);\n                var version$$1 = this.host.getScriptVersion(fileName);\n                var lastVersion = this.fileVersions.get(fileName);\n                if (version$$1 != lastVersion) {\n                    this.fileVersions.set(fileName, version$$1);\n                    invalidateFile(fileName);\n                }\n            }\n            // Remove file versions that are no longer in the file and invalidate them.\n            var missing = Array.from(this.fileVersions.keys()).filter(function (f) { return !seen_1.has(f); });\n            missing.forEach(function (f) { return _this.fileVersions.delete(f); });\n            missing.forEach(invalidateFile);\n            this.lastProgram = program;\n        }\n    };\n    TypeScriptServiceHost.prototype.clearCaches = function () {\n        this._checker = null;\n        this._typeCache = [];\n        this._resolver = null;\n        this.collectedErrors = null;\n        this.modulesOutOfDate = true;\n    };\n    TypeScriptServiceHost.prototype.ensureTemplateMap = function () {\n        if (!this.fileToComponent || !this.templateReferences) {\n            var fileToComponent = new Map();\n            var templateReference = [];\n            var ngModuleSummary = this.getAnalyzedModules();\n            var urlResolver = createOfflineCompileUrlResolver();\n            for (var _i = 0, _a = ngModuleSummary.ngModules; _i < _a.length; _i++) {\n                var module_1 = _a[_i];\n                for (var _b = 0, _c = module_1.declaredDirectives; _b < _c.length; _b++) {\n                    var directive = _c[_b];\n                    var metadata = this.resolver.getNonNormalizedDirectiveMetadata(directive.reference).metadata;\n                    if (metadata.isComponent && metadata.template && metadata.template.templateUrl) {\n                        var templateName = urlResolver.resolve(this.reflector.componentModuleUrl(directive.reference), metadata.template.templateUrl);\n                        fileToComponent.set(templateName, directive.reference);\n                        templateReference.push(templateName);\n                    }\n                }\n            }\n            this.fileToComponent = fileToComponent;\n            this.templateReferences = templateReference;\n        }\n    };\n    TypeScriptServiceHost.prototype.getSourceFromDeclaration = function (fileName, version$$1, source, span, type, declaration, node, sourceFile) {\n        var queryCache = undefined;\n        var t = this;\n        if (declaration) {\n            return {\n                version: version$$1,\n                source: source,\n                span: span,\n                type: type,\n                get members() {\n                    return language_services_10(t.program, t.checker, sourceFile, declaration);\n                },\n                get query() {\n                    if (!queryCache) {\n                        var pipes_1 = t.service.getPipesAt(fileName, node.getStart());\n                        queryCache = language_services_12(t.program, t.checker, sourceFile, function () { return language_services_11(sourceFile, t.program, t.checker, pipes_1); });\n                    }\n                    return queryCache;\n                }\n            };\n        }\n    };\n    TypeScriptServiceHost.prototype.getSourceFromNode = function (fileName, version$$1, node) {\n        var result = undefined;\n        var t = this;\n        switch (node.kind) {\n            case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n            case ts.SyntaxKind.StringLiteral:\n                var _a = this.getTemplateClassDeclFromNode(node), declaration = _a[0], decorator = _a[1];\n                if (declaration && declaration.name) {\n                    var sourceFile = this.getSourceFile(fileName);\n                    return this.getSourceFromDeclaration(fileName, version$$1, this.stringOf(node) || '', shrink(spanOf$1(node)), this.reflector.getStaticSymbol(sourceFile.fileName, declaration.name.text), declaration, node, sourceFile);\n                }\n                break;\n        }\n        return result;\n    };\n    TypeScriptServiceHost.prototype.getSourceFromType = function (fileName, version$$1, type) {\n        var result = undefined;\n        var declaration = this.getTemplateClassFromStaticSymbol(type);\n        if (declaration) {\n            var snapshot = this.host.getScriptSnapshot(fileName);\n            if (snapshot) {\n                var source = snapshot.getText(0, snapshot.getLength());\n                result = this.getSourceFromDeclaration(fileName, version$$1, source, { start: 0, end: source.length }, type, declaration, declaration, declaration.getSourceFile());\n            }\n        }\n        return result;\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"reflectorHost\", {\n        get: function () {\n            var _this = this;\n            var result = this._reflectorHost;\n            if (!result) {\n                if (!this.context) {\n                    // Make up a context by finding the first script and using that as the base dir.\n                    this.context = this.host.getScriptFileNames()[0];\n                }\n                // Use the file context's directory as the base directory.\n                // The host's getCurrentDirectory() is not reliable as it is always \"\" in\n                // tsserver. We don't need the exact base directory, just one that contains\n                // a source file.\n                var source = this.tsService.getProgram().getSourceFile(this.context);\n                if (!source) {\n                    throw new Error('Internal error: no context could be determined');\n                }\n                var tsConfigPath = findTsConfig(source.fileName);\n                var basePath = path.dirname(tsConfigPath || this.context);\n                var options = { basePath: basePath, genDir: basePath };\n                var compilerOptions = this.host.getCompilationSettings();\n                if (compilerOptions && compilerOptions.baseUrl) {\n                    options.baseUrl = compilerOptions.baseUrl;\n                }\n                result = this._reflectorHost =\n                    new ReflectorHost(function () { return _this.tsService.getProgram(); }, this.host, options);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.collectError = function (error, filePath) {\n        if (filePath) {\n            var errorMap = this.collectedErrors;\n            if (!errorMap || !this.collectedErrors) {\n                errorMap = this.collectedErrors = new Map();\n            }\n            var errors = errorMap.get(filePath);\n            if (!errors) {\n                errors = [];\n                this.collectedErrors.set(filePath, errors);\n            }\n            errors.push(error);\n        }\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"staticSymbolResolver\", {\n        get: function () {\n            var _this = this;\n            var result = this._staticSymbolResolver;\n            if (!result) {\n                this._summaryResolver = new AotSummaryResolver({\n                    loadSummary: function (filePath) { return null; },\n                    isSourceFile: function (sourceFilePath) { return true; },\n                    toSummaryFileName: function (sourceFilePath) { return sourceFilePath; },\n                    fromSummaryFileName: function (filePath) { return filePath; },\n                }, this._staticSymbolCache);\n                result = this._staticSymbolResolver = new StaticSymbolResolver(this.reflectorHost, this._staticSymbolCache, this._summaryResolver, function (e, filePath) { return _this.collectError(e, filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"reflector\", {\n        get: function () {\n            var _this = this;\n            var result = this._reflector;\n            if (!result) {\n                var ssr = this.staticSymbolResolver;\n                result = this._reflector = new StaticReflector(this._summaryResolver, ssr, [], [], function (e, filePath) { return _this.collectError(e, filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.getTemplateClassFromStaticSymbol = function (type) {\n        var source = this.getSourceFile(type.filePath);\n        if (source) {\n            var declarationNode = ts.forEachChild(source, function (child) {\n                if (child.kind === ts.SyntaxKind.ClassDeclaration) {\n                    var classDeclaration = child;\n                    if (classDeclaration.name != null && classDeclaration.name.text === type.name) {\n                        return classDeclaration;\n                    }\n                }\n            });\n            return declarationNode;\n        }\n        return undefined;\n    };\n    /**\n     * Given a template string node, see if it is an Angular template string, and if so return the\n     * containing class.\n     */\n    TypeScriptServiceHost.prototype.getTemplateClassDeclFromNode = function (currentToken) {\n        // Verify we are in a 'template' property assignment, in an object literal, which is an call\n        // arg, in a decorator\n        var parentNode = currentToken.parent; // PropertyAssignment\n        if (!parentNode) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        if (parentNode.kind !== ts.SyntaxKind.PropertyAssignment) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        else {\n            // TODO: Is this different for a literal, i.e. a quoted property name like \"template\"?\n            if (parentNode.name.text !== 'template') {\n                return TypeScriptServiceHost.missingTemplate;\n            }\n        }\n        parentNode = parentNode.parent; // ObjectLiteralExpression\n        if (!parentNode || parentNode.kind !== ts.SyntaxKind.ObjectLiteralExpression) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        parentNode = parentNode.parent; // CallExpression\n        if (!parentNode || parentNode.kind !== ts.SyntaxKind.CallExpression) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        var callTarget = parentNode.expression;\n        var decorator = parentNode.parent; // Decorator\n        if (!decorator || decorator.kind !== ts.SyntaxKind.Decorator) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        var declaration = decorator.parent; // ClassDeclaration\n        if (!declaration || declaration.kind !== ts.SyntaxKind.ClassDeclaration) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        return [declaration, callTarget];\n    };\n    TypeScriptServiceHost.prototype.getCollectedErrors = function (defaultSpan, sourceFile) {\n        var errors = (this.collectedErrors && this.collectedErrors.get(sourceFile.fileName));\n        return (errors && errors.map(function (e) {\n            return { message: e.message, span: spanAt(sourceFile, e.line, e.column) || defaultSpan };\n        })) ||\n            [];\n    };\n    TypeScriptServiceHost.prototype.getDeclarationFromNode = function (sourceFile, node) {\n        if (node.kind == ts.SyntaxKind.ClassDeclaration && node.decorators &&\n            node.name) {\n            for (var _i = 0, _a = node.decorators; _i < _a.length; _i++) {\n                var decorator = _a[_i];\n                if (decorator.expression && decorator.expression.kind == ts.SyntaxKind.CallExpression) {\n                    var classDeclaration = node;\n                    if (classDeclaration.name) {\n                        var call = decorator.expression;\n                        var target = call.expression;\n                        var type = this.checker.getTypeAtLocation(target);\n                        if (type) {\n                            var staticSymbol = this.reflector.getStaticSymbol(sourceFile.fileName, classDeclaration.name.text);\n                            try {\n                                if (this.resolver.isDirective(staticSymbol)) {\n                                    var metadata = this.resolver.getNonNormalizedDirectiveMetadata(staticSymbol).metadata;\n                                    var declarationSpan = spanOf$1(target);\n                                    return {\n                                        type: staticSymbol,\n                                        declarationSpan: declarationSpan,\n                                        metadata: metadata,\n                                        errors: this.getCollectedErrors(declarationSpan, sourceFile)\n                                    };\n                                }\n                            }\n                            catch (e) {\n                                if (e.message) {\n                                    this.collectError(e, sourceFile.fileName);\n                                    var declarationSpan = spanOf$1(target);\n                                    return {\n                                        type: staticSymbol,\n                                        declarationSpan: declarationSpan,\n                                        errors: this.getCollectedErrors(declarationSpan, sourceFile)\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TypeScriptServiceHost.prototype.stringOf = function (node) {\n        switch (node.kind) {\n            case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n                return node.text;\n            case ts.SyntaxKind.StringLiteral:\n                return node.text;\n        }\n    };\n    TypeScriptServiceHost.prototype.findNode = function (sourceFile, position) {\n        function find(node) {\n            if (position >= node.getStart() && position < node.getEnd()) {\n                return ts.forEachChild(node, find) || node;\n            }\n        }\n        return find(sourceFile);\n    };\n    TypeScriptServiceHost.missingTemplate = [undefined, undefined];\n    return TypeScriptServiceHost;\n}());\nfunction findTsConfig(fileName) {\n    var dir = path.dirname(fileName);\n    while (fs.existsSync(dir)) {\n        var candidate = path.join(dir, 'tsconfig.json');\n        if (fs.existsSync(candidate))\n            return candidate;\n        var parentDir = path.dirname(dir);\n        if (parentDir === dir)\n            break;\n        dir = parentDir;\n    }\n}\nfunction spanOf$1(node) {\n    return { start: node.getStart(), end: node.getEnd() };\n}\nfunction shrink(span, offset) {\n    if (offset == null)\n        offset = 1;\n    return { start: span.start + offset, end: span.end - offset };\n}\nfunction spanAt(sourceFile, line, column) {\n    if (line != null && column != null) {\n        var position_1 = ts.getPositionOfLineAndCharacter(sourceFile, line, column);\n        var findChild = function findChild(node) {\n            if (node.kind > ts.SyntaxKind.LastToken && node.pos <= position_1 && node.end > position_1) {\n                var betterNode = ts.forEachChild(node, findChild);\n                return betterNode || node;\n            }\n        };\n        var node = ts.forEachChild(sourceFile, findChild);\n        if (node) {\n            return { start: node.getStart(), end: node.getEnd() };\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar projectHostMap = new WeakMap();\nfunction getExternalFiles(project) {\n    var host = projectHostMap.get(project);\n    if (host) {\n        return host.getTemplateReferences();\n    }\n}\nvar angularOnlyResults = process.argv.indexOf('--angularOnlyResults') >= 0;\nfunction angularOnlyFilter(ls) {\n    return {\n        cleanupSemanticCache: function () { return ls.cleanupSemanticCache(); },\n        getSyntacticDiagnostics: function (fileName) { return []; },\n        getSemanticDiagnostics: function (fileName) { return []; },\n        getCompilerOptionsDiagnostics: function () { return []; },\n        getSyntacticClassifications: function (fileName, span) { return []; },\n        getSemanticClassifications: function (fileName, span) { return []; },\n        getEncodedSyntacticClassifications: function (fileName, span) { return ({ undefined: undefined }); },\n        getEncodedSemanticClassifications: function (fileName, span) { return undefined; },\n        getCompletionsAtPosition: function (fileName, position) { return undefined; },\n        getCompletionEntryDetails: function (fileName, position, entryName) {\n            return undefined;\n        },\n        getCompletionEntrySymbol: function (fileName, position, entryName) { return undefined; },\n        getQuickInfoAtPosition: function (fileName, position) { return undefined; },\n        getNameOrDottedNameSpan: function (fileName, startPos, endPos) { return undefined; },\n        getBreakpointStatementAtPosition: function (fileName, position) { return undefined; },\n        getSignatureHelpItems: function (fileName, position) { return undefined; },\n        getRenameInfo: function (fileName, position) { return undefined; },\n        findRenameLocations: function (fileName, position, findInStrings, findInComments) {\n            return [];\n        },\n        getDefinitionAtPosition: function (fileName, position) { return []; },\n        getTypeDefinitionAtPosition: function (fileName, position) { return []; },\n        getImplementationAtPosition: function (fileName, position) { return []; },\n        getReferencesAtPosition: function (fileName, position) { return []; },\n        findReferences: function (fileName, position) { return []; },\n        getDocumentHighlights: function (fileName, position, filesToSearch) { return []; },\n        /** @deprecated */\n        getOccurrencesAtPosition: function (fileName, position) { return []; },\n        getNavigateToItems: function (searchValue) { return []; },\n        getNavigationBarItems: function (fileName) { return []; },\n        getNavigationTree: function (fileName) { return undefined; },\n        getOutliningSpans: function (fileName) { return []; },\n        getTodoComments: function (fileName, descriptors) { return []; },\n        getBraceMatchingAtPosition: function (fileName, position) { return []; },\n        getIndentationAtPosition: function (fileName, position, options) { return undefined; },\n        getFormattingEditsForRange: function (fileName, start, end, options) { return []; },\n        getFormattingEditsForDocument: function (fileName, options) { return []; },\n        getFormattingEditsAfterKeystroke: function (fileName, position, key, options) { return []; },\n        getDocCommentTemplateAtPosition: function (fileName, position) { return undefined; },\n        isValidBraceCompletionAtPosition: function (fileName, position, openingBrace) { return undefined; },\n        getCodeFixesAtPosition: function (fileName, start, end, errorCodes) { return []; },\n        getEmitOutput: function (fileName) { return undefined; },\n        getProgram: function () { return ls.getProgram(); },\n        dispose: function () { return ls.dispose(); },\n        getApplicableRefactors: function (fileName, positionOrRaneg) { return []; },\n        getEditsForRefactor: function (fileName, formatOptions, positionOrRange, refactorName, actionName) {\n            return undefined;\n        },\n    };\n}\nfunction create(info /* ts.server.PluginCreateInfo */) {\n    // Create the proxy\n    var proxy = Object.create(null);\n    var oldLS = info.languageService;\n    if (angularOnlyResults) {\n        oldLS = angularOnlyFilter(oldLS);\n    }\n    function tryCall(fileName, callback) {\n        if (fileName && !oldLS.getProgram().getSourceFile(fileName)) {\n            return undefined;\n        }\n        try {\n            return callback();\n        }\n        catch (e) {\n            return undefined;\n        }\n    }\n    function tryFilenameCall(m) {\n        return function (fileName) { return tryCall(fileName, function () { return (m.call(ls, fileName)); }); };\n    }\n    function tryFilenameOneCall(m) {\n        return function (fileName, p) { return tryCall(fileName, function () { return (m.call(ls, fileName, p)); }); };\n    }\n    function tryFilenameTwoCall(m) {\n        return function (fileName, p1, p2) { return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2)); }); };\n    }\n    function tryFilenameThreeCall(m) {\n        return function (fileName, p1, p2, p3) { return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2, p3)); }); };\n    }\n    function tryFilenameFourCall(m) {\n        return function (fileName, p1, p2, p3, p4) {\n            return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2, p3, p4)); });\n        };\n    }\n    function typescriptOnly(ls) {\n        return {\n            cleanupSemanticCache: function () { return ls.cleanupSemanticCache(); },\n            getSyntacticDiagnostics: tryFilenameCall(ls.getSyntacticDiagnostics),\n            getSemanticDiagnostics: tryFilenameCall(ls.getSemanticDiagnostics),\n            getCompilerOptionsDiagnostics: function () { return ls.getCompilerOptionsDiagnostics(); },\n            getSyntacticClassifications: tryFilenameOneCall(ls.getSemanticClassifications),\n            getSemanticClassifications: tryFilenameOneCall(ls.getSemanticClassifications),\n            getEncodedSyntacticClassifications: tryFilenameOneCall(ls.getEncodedSyntacticClassifications),\n            getEncodedSemanticClassifications: tryFilenameOneCall(ls.getEncodedSemanticClassifications),\n            getCompletionsAtPosition: tryFilenameOneCall(ls.getCompletionsAtPosition),\n            getCompletionEntryDetails: tryFilenameTwoCall(ls.getCompletionEntryDetails),\n            getCompletionEntrySymbol: tryFilenameTwoCall(ls.getCompletionEntrySymbol),\n            getQuickInfoAtPosition: tryFilenameOneCall(ls.getQuickInfoAtPosition),\n            getNameOrDottedNameSpan: tryFilenameTwoCall(ls.getNameOrDottedNameSpan),\n            getBreakpointStatementAtPosition: tryFilenameOneCall(ls.getBreakpointStatementAtPosition),\n            getSignatureHelpItems: tryFilenameOneCall(ls.getSignatureHelpItems),\n            getRenameInfo: tryFilenameOneCall(ls.getRenameInfo),\n            findRenameLocations: tryFilenameThreeCall(ls.findRenameLocations),\n            getDefinitionAtPosition: tryFilenameOneCall(ls.getDefinitionAtPosition),\n            getTypeDefinitionAtPosition: tryFilenameOneCall(ls.getTypeDefinitionAtPosition),\n            getImplementationAtPosition: tryFilenameOneCall(ls.getImplementationAtPosition),\n            getReferencesAtPosition: tryFilenameOneCall(ls.getReferencesAtPosition),\n            findReferences: tryFilenameOneCall(ls.findReferences),\n            getDocumentHighlights: tryFilenameTwoCall(ls.getDocumentHighlights),\n            /** @deprecated */\n            getOccurrencesAtPosition: tryFilenameOneCall(ls.getOccurrencesAtPosition),\n            getNavigateToItems: function (searchValue, maxResultCount, fileName, excludeDtsFiles) { return tryCall(fileName, function () { return ls.getNavigateToItems(searchValue, maxResultCount, fileName, excludeDtsFiles); }); },\n            getNavigationBarItems: tryFilenameCall(ls.getNavigationBarItems),\n            getNavigationTree: tryFilenameCall(ls.getNavigationTree),\n            getOutliningSpans: tryFilenameCall(ls.getOutliningSpans),\n            getTodoComments: tryFilenameOneCall(ls.getTodoComments),\n            getBraceMatchingAtPosition: tryFilenameOneCall(ls.getBraceMatchingAtPosition),\n            getIndentationAtPosition: tryFilenameTwoCall(ls.getIndentationAtPosition),\n            getFormattingEditsForRange: tryFilenameThreeCall(ls.getFormattingEditsForRange),\n            getFormattingEditsForDocument: tryFilenameOneCall(ls.getFormattingEditsForDocument),\n            getFormattingEditsAfterKeystroke: tryFilenameThreeCall(ls.getFormattingEditsAfterKeystroke),\n            getDocCommentTemplateAtPosition: tryFilenameOneCall(ls.getDocCommentTemplateAtPosition),\n            isValidBraceCompletionAtPosition: tryFilenameTwoCall(ls.isValidBraceCompletionAtPosition),\n            getCodeFixesAtPosition: tryFilenameFourCall(ls.getCodeFixesAtPosition),\n            getEmitOutput: tryFilenameCall(ls.getEmitOutput),\n            getProgram: function () { return ls.getProgram(); },\n            dispose: function () { return ls.dispose(); },\n            getApplicableRefactors: function (fileName, positionOrRaneg) { return []; },\n            getEditsForRefactor: function (fileName, formatOptions, positionOrRange, refactorName, actionName) {\n                return undefined;\n            },\n        };\n    }\n    oldLS = typescriptOnly(oldLS);\n    var _loop_1 = function (k) {\n        proxy[k] = function () { return oldLS[k].apply(oldLS, arguments); };\n    };\n    for (var k in oldLS) {\n        _loop_1(k);\n    }\n    function completionToEntry(c) {\n        return { kind: c.kind, name: c.name, sortText: c.sort, kindModifiers: '' };\n    }\n    function diagnosticToDiagnostic(d, file) {\n        var result = {\n            file: file,\n            start: d.span.start,\n            length: d.span.end - d.span.start,\n            messageText: d.message,\n            category: ts.DiagnosticCategory.Error,\n            code: 0,\n            source: 'ng'\n        };\n        return result;\n    }\n    function tryOperation(attempting, callback) {\n        try {\n            return callback();\n        }\n        catch (e) {\n            info.project.projectService.logger.info(\"Failed to \" + attempting + \": \" + e.toString());\n            info.project.projectService.logger.info(\"Stack trace: \" + e.stack);\n            return null;\n        }\n    }\n    var serviceHost = new TypeScriptServiceHost(info.languageServiceHost, info.languageService);\n    var ls = createLanguageService(serviceHost);\n    serviceHost.setSite(ls);\n    projectHostMap.set(info.project, serviceHost);\n    proxy.getCompletionsAtPosition = function (fileName, position) {\n        var base = oldLS.getCompletionsAtPosition(fileName, position) || {\n            isGlobalCompletion: false,\n            isMemberCompletion: false,\n            isNewIdentifierLocation: false,\n            entries: []\n        };\n        tryOperation('get completions', function () {\n            var results = ls.getCompletionsAt(fileName, position);\n            if (results && results.length) {\n                if (base === undefined) {\n                    base = {\n                        isGlobalCompletion: false,\n                        isMemberCompletion: false,\n                        isNewIdentifierLocation: false,\n                        entries: []\n                    };\n                }\n                for (var _i = 0, results_1 = results; _i < results_1.length; _i++) {\n                    var entry = results_1[_i];\n                    base.entries.push(completionToEntry(entry));\n                }\n            }\n        });\n        return base;\n    };\n    proxy.getQuickInfoAtPosition = function (fileName, position) {\n        var base = oldLS.getQuickInfoAtPosition(fileName, position);\n        // TODO(vicb): the tags property has been removed in TS 2.2\n        tryOperation('get quick info', function () {\n            var ours = ls.getHoverAt(fileName, position);\n            if (ours) {\n                var displayParts = [];\n                for (var _i = 0, _a = ours.text; _i < _a.length; _i++) {\n                    var part = _a[_i];\n                    displayParts.push({ kind: part.language || 'angular', text: part.text });\n                }\n                var tags = base && base.tags;\n                base = {\n                    displayParts: displayParts,\n                    documentation: [],\n                    kind: 'angular',\n                    kindModifiers: 'what does this do?',\n                    textSpan: { start: ours.span.start, length: ours.span.end - ours.span.start },\n                };\n                if (tags) {\n                    base.tags = tags;\n                }\n            }\n        });\n        return base;\n    };\n    proxy.getSemanticDiagnostics = function (fileName) {\n        var result = oldLS.getSemanticDiagnostics(fileName);\n        var base = result || [];\n        tryOperation('get diagnostics', function () {\n            info.project.projectService.logger.info(\"Computing Angular semantic diagnostics...\");\n            var ours = ls.getDiagnostics(fileName);\n            if (ours && ours.length) {\n                var file_1 = oldLS.getProgram().getSourceFile(fileName);\n                base.push.apply(base, ours.map(function (d) { return diagnosticToDiagnostic(d, file_1); }));\n            }\n        });\n        return base;\n    };\n    proxy.getDefinitionAtPosition = function (fileName, position) {\n        var base = oldLS.getDefinitionAtPosition(fileName, position);\n        if (base && base.length) {\n            return base;\n        }\n        return tryOperation('get definition', function () {\n            var ours = ls.getDefinitionAt(fileName, position);\n            if (ours && ours.length) {\n                base = base || [];\n                for (var _i = 0, ours_1 = ours; _i < ours_1.length; _i++) {\n                    var loc = ours_1[_i];\n                    base.push({\n                        fileName: loc.fileName,\n                        textSpan: { start: loc.span.start, length: loc.span.end - loc.span.start },\n                        name: '',\n                        kind: 'definition',\n                        containerName: loc.fileName,\n                        containerKind: 'file'\n                    });\n                }\n            }\n            return base;\n        }) || [];\n    };\n    return proxy;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * @stable\n */\nvar VERSION = new Version$1('5.0.2');\n\nexports.createLanguageService = createLanguageService;\nexports.TypeScriptServiceHost = TypeScriptServiceHost;\nexports.createLanguageServiceFromTypescript = createLanguageServiceFromTypescript;\nexports.VERSION = VERSION;\nexports.getExternalFiles = getExternalFiles;\nexports.create = create;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n});\n//# sourceMappingURL=language-service.umd.js.map\n"]}