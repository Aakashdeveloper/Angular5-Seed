/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/material/core"),require("@angular/cdk/a11y"),require("@angular/common"),require("@angular/cdk/overlay"),require("@angular/cdk/bidi"),require("@angular/cdk/keycodes"),require("@angular/cdk/portal"),require("rxjs/operators/filter"),require("rxjs/operators/first"),require("rxjs/operators/switchMap"),require("rxjs/operators/tap"),require("rxjs/operators/delay"),require("@angular/forms"),require("@angular/material/form-field"),require("@angular/platform-browser"),require("rxjs/Subject"),require("rxjs/observable/fromEvent"),require("rxjs/observable/merge"),require("rxjs/observable/of")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/material/core","@angular/cdk/a11y","@angular/common","@angular/cdk/overlay","@angular/cdk/bidi","@angular/cdk/keycodes","@angular/cdk/portal","rxjs/operators/filter","rxjs/operators/first","rxjs/operators/switchMap","rxjs/operators/tap","rxjs/operators/delay","@angular/forms","@angular/material/form-field","@angular/platform-browser","rxjs/Subject","rxjs/observable/fromEvent","rxjs/observable/merge","rxjs/observable/of"],t):t((e.ng=e.ng||{},e.ng.material=e.ng.material||{},e.ng.material.autocomplete=e.ng.material.autocomplete||{}),e.ng.core,e.ng.material.core,e.ng.cdk.a11y,e.ng.common,e.ng.cdk.overlay,e.ng.cdk.bidi,e.ng.cdk.keycodes,e.ng.cdk.portal,e.Rx.Observable,e.Rx.Observable,e.Rx.Observable,e.Rx.Observable,e.Rx.Observable,e.ng.forms,e.ng.material.formField,e.ng.platformBrowser,e.Rx,e.Rx.Observable,e.Rx.Observable,e.Rx.Observable)}(this,function(e,t,o,i,n,r,a,l,s,p,c,u,h,m,d,f,_,g,y,v,b){"use strict";function O(e){return function(){return e.scrollStrategies.reposition()}}function E(){return Error("Attempting to open an undefined instance of `mat-autocomplete`. Make sure that the id passed to the `matAutocomplete` is correct and that you're attempting to open it after the ngAfterContentInit hook.")}var C=0,P=function(){function e(e,t){this.source=e,this.option=t}return e}(),R=function(){function e(e,o){this._changeDetectorRef=e,this._elementRef=o,this.showPanel=!1,this._isOpen=!1,this.displayWith=null,this.optionSelected=new t.EventEmitter,this._classList={},this.id="mat-autocomplete-"+C++}return Object.defineProperty(e.prototype,"isOpen",{get:function(){return this._isOpen&&this.showPanel},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"classList",{set:function(e){var t=this;e&&e.length&&(e.split(" ").forEach(function(e){return t._classList[e.trim()]=!0}),this._elementRef.nativeElement.className="")},enumerable:!0,configurable:!0}),e.prototype.ngAfterContentInit=function(){this._keyManager=new i.ActiveDescendantKeyManager(this.options).withWrap(),this._setVisibility()},e.prototype._setScrollTop=function(e){this.panel&&(this.panel.nativeElement.scrollTop=e)},e.prototype._getScrollTop=function(){return this.panel?this.panel.nativeElement.scrollTop:0},e.prototype._setVisibility=function(){this.showPanel=!!this.options.length,this._classList["mat-autocomplete-visible"]=this.showPanel,this._classList["mat-autocomplete-hidden"]=!this.showPanel,this._changeDetectorRef.markForCheck()},e.prototype._emitSelectEvent=function(e){var t=new P(this,e);this.optionSelected.emit(t)},e.decorators=[{type:t.Component,args:[{selector:"mat-autocomplete",template:'<ng-template><div class="mat-autocomplete-panel" role="listbox" [id]="id" [ngClass]="_classList" #panel><ng-content></ng-content></div></ng-template>',styles:[".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative}.mat-autocomplete-panel:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}"],encapsulation:t.ViewEncapsulation.None,preserveWhitespaces:!1,changeDetection:t.ChangeDetectionStrategy.OnPush,exportAs:"matAutocomplete",host:{class:"mat-autocomplete"}}]}],e.ctorParameters=function(){return[{type:t.ChangeDetectorRef},{type:t.ElementRef}]},e.propDecorators={template:[{type:t.ViewChild,args:[t.TemplateRef]}],panel:[{type:t.ViewChild,args:["panel"]}],options:[{type:t.ContentChildren,args:[o.MatOption,{descendants:!0}]}],optionGroups:[{type:t.ContentChildren,args:[o.MatOptgroup]}],displayWith:[{type:t.Input}],optionSelected:[{type:t.Output}],classList:[{type:t.Input,args:["class"]}]},e}(),x=new t.InjectionToken("mat-autocomplete-scroll-strategy"),A={provide:x,deps:[r.Overlay],useFactory:O},T={provide:d.NG_VALUE_ACCESSOR,useExisting:t.forwardRef(function(){return S}),multi:!0},S=function(){function e(e,t,o,i,n,r,a,l,s){this._element=e,this._overlay=t,this._viewContainerRef=o,this._zone=i,this._changeDetectorRef=n,this._scrollStrategy=r,this._dir=a,this._formField=l,this._document=s,this._panelOpen=!1,this._manuallyFloatingPlaceholder=!1,this._escapeEventStream=new g.Subject,this._onChange=function(){},this._onTouched=function(){}}return e.prototype.ngOnDestroy=function(){this._destroyPanel(),this._escapeEventStream.complete()},Object.defineProperty(e.prototype,"panelOpen",{get:function(){return this._panelOpen&&this.autocomplete.showPanel},enumerable:!0,configurable:!0}),e.prototype.openPanel=function(){this._attachOverlay(),this._floatPlaceholder()},e.prototype.closePanel=function(){this._overlayRef&&this._overlayRef.hasAttached()&&(this._overlayRef.detach(),this._closingActionsSubscription.unsubscribe()),this._resetPlaceholder(),this._panelOpen&&(this.autocomplete._isOpen=this._panelOpen=!1,this._changeDetectorRef.detectChanges())},Object.defineProperty(e.prototype,"panelClosingActions",{get:function(){return v.merge(this.optionSelections,this.autocomplete._keyManager.tabOut,this._escapeEventStream,this._outsideClickStream)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"optionSelections",{get:function(){return v.merge.apply(void 0,this.autocomplete.options.map(function(e){return e.onSelectionChange}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"activeOption",{get:function(){return this.autocomplete&&this.autocomplete._keyManager?this.autocomplete._keyManager.activeItem:null},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"_outsideClickStream",{get:function(){var e=this;return this._document?v.merge(y.fromEvent(this._document,"click"),y.fromEvent(this._document,"touchend")).pipe(p.filter(function(t){var o=t.target,i=e._formField?e._formField._elementRef.nativeElement:null;return e._panelOpen&&o!==e._element.nativeElement&&(!i||!i.contains(o))&&!!e._overlayRef&&!e._overlayRef.overlayElement.contains(o)})):b.of(null)},enumerable:!0,configurable:!0}),e.prototype.writeValue=function(e){var t=this;Promise.resolve(null).then(function(){return t._setTriggerValue(e)})},e.prototype.registerOnChange=function(e){this._onChange=e},e.prototype.registerOnTouched=function(e){this._onTouched=e},e.prototype._handleKeydown=function(e){var t=e.keyCode;if(t===l.ESCAPE&&this.panelOpen)this._resetActiveItem(),this._escapeEventStream.next(),e.stopPropagation();else if(this.activeOption&&t===l.ENTER&&this.panelOpen)this.activeOption._selectViaInteraction(),this._resetActiveItem(),e.preventDefault();else{var o=this.autocomplete._keyManager.activeItem,i=t===l.UP_ARROW||t===l.DOWN_ARROW;this.panelOpen||t===l.TAB?this.autocomplete._keyManager.onKeydown(e):i&&this.openPanel(),(i||this.autocomplete._keyManager.activeItem!==o)&&this._scrollToOption()}},e.prototype._handleInput=function(e){document.activeElement===e.target&&(this._onChange(e.target.value),this.openPanel())},e.prototype._handleFocus=function(){this._element.nativeElement.readOnly||(this._attachOverlay(),this._floatPlaceholder(!0))},e.prototype._floatPlaceholder=function(e){void 0===e&&(e=!1),this._formField&&"auto"===this._formField.floatPlaceholder&&(e?this._formField._animateAndLockPlaceholder():this._formField.floatPlaceholder="always",this._manuallyFloatingPlaceholder=!0)},e.prototype._resetPlaceholder=function(){this._manuallyFloatingPlaceholder&&(this._formField.floatPlaceholder="auto",this._manuallyFloatingPlaceholder=!1)},e.prototype._scrollToOption=function(){var e=this.autocomplete._keyManager.activeItemIndex||0,t=o.MatOption.countGroupLabelsBeforeOption(e,this.autocomplete.options,this.autocomplete.optionGroups),i=48*(e+t),n=this.autocomplete._getScrollTop();if(i<n)this.autocomplete._setScrollTop(i);else if(i+48>n+256){var r=i-256+48;this.autocomplete._setScrollTop(Math.max(0,r))}},e.prototype._subscribeToClosingActions=function(){var e=this,t=this._zone.onStable.asObservable().pipe(c.first()),o=this.autocomplete.options.changes.pipe(h.tap(function(){return e._positionStrategy.recalculateLastPosition()}),m.delay(0));return v.merge(t,o).pipe(u.switchMap(function(){return e._resetActiveItem(),e.autocomplete._setVisibility(),e.panelClosingActions}),c.first()).subscribe(function(t){return e._setValueAndClose(t)})},e.prototype._destroyPanel=function(){this._overlayRef&&(this.closePanel(),this._overlayRef.dispose(),this._overlayRef=null)},e.prototype._setTriggerValue=function(e){var t=this.autocomplete&&this.autocomplete.displayWith?this.autocomplete.displayWith(e):e,o=null!=t?t:"";this._formField?this._formField._control.value=o:this._element.nativeElement.value=o},e.prototype._setValueAndClose=function(e){e&&e.source&&(this._clearPreviousSelectedOption(e.source),this._setTriggerValue(e.source.value),this._onChange(e.source.value),this._element.nativeElement.focus(),this.autocomplete._emitSelectEvent(e.source)),this.closePanel()},e.prototype._clearPreviousSelectedOption=function(e){this.autocomplete.options.forEach(function(t){t!=e&&t.selected&&t.deselect()})},e.prototype._attachOverlay=function(){if(!this.autocomplete)throw E();this._overlayRef?(this._overlayRef.getConfig().width=this._getHostWidth(),this._overlayRef.updateSize()):(this._portal=new s.TemplatePortal(this.autocomplete.template,this._viewContainerRef),this._overlayRef=this._overlay.create(this._getOverlayConfig())),this._overlayRef&&!this._overlayRef.hasAttached()&&(this._overlayRef.attach(this._portal),this._closingActionsSubscription=this._subscribeToClosingActions()),this.autocomplete._setVisibility(),this.autocomplete._isOpen=this._panelOpen=!0},e.prototype._getOverlayConfig=function(){return new r.OverlayConfig({positionStrategy:this._getOverlayPosition(),scrollStrategy:this._scrollStrategy(),width:this._getHostWidth(),direction:this._dir?this._dir.value:"ltr"})},e.prototype._getOverlayPosition=function(){return this._positionStrategy=this._overlay.position().connectedTo(this._getConnectedElement(),{originX:"start",originY:"bottom"},{overlayX:"start",overlayY:"top"}).withFallbackPosition({originX:"start",originY:"top"},{overlayX:"start",overlayY:"bottom"}),this._positionStrategy},e.prototype._getConnectedElement=function(){return this._formField?this._formField._connectionContainerRef:this._element},e.prototype._getHostWidth=function(){return this._getConnectedElement().nativeElement.getBoundingClientRect().width},e.prototype._resetActiveItem=function(){this.autocomplete._keyManager.setActiveItem(-1)},e.decorators=[{type:t.Directive,args:[{selector:"input[matAutocomplete], textarea[matAutocomplete]",host:{role:"combobox",autocomplete:"off","aria-autocomplete":"list","[attr.aria-activedescendant]":"activeOption?.id","[attr.aria-expanded]":"panelOpen.toString()","[attr.aria-owns]":"autocomplete?.id","(focusin)":"_handleFocus()","(blur)":"_onTouched()","(input)":"_handleInput($event)","(keydown)":"_handleKeydown($event)"},providers:[T]}]}],e.ctorParameters=function(){return[{type:t.ElementRef},{type:r.Overlay},{type:t.ViewContainerRef},{type:t.NgZone},{type:t.ChangeDetectorRef},{type:void 0,decorators:[{type:t.Inject,args:[x]}]},{type:a.Directionality,decorators:[{type:t.Optional}]},{type:f.MatFormField,decorators:[{type:t.Optional},{type:t.Host}]},{type:void 0,decorators:[{type:t.Optional},{type:t.Inject,args:[_.DOCUMENT]}]}]},e.propDecorators={autocomplete:[{type:t.Input,args:["matAutocomplete"]}]},e}(),M=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[o.MatOptionModule,r.OverlayModule,o.MatCommonModule,n.CommonModule],exports:[R,o.MatOptionModule,S,o.MatCommonModule],declarations:[R,S],providers:[A]}]}],e.ctorParameters=function(){return[]},e}();e.MatAutocompleteSelectedEvent=P,e.MatAutocomplete=R,e.MatAutocompleteModule=M,e.AUTOCOMPLETE_OPTION_HEIGHT=48,e.AUTOCOMPLETE_PANEL_HEIGHT=256,e.MAT_AUTOCOMPLETE_SCROLL_STRATEGY=x,e.MAT_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER_FACTORY=O,e.MAT_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER=A,e.MAT_AUTOCOMPLETE_VALUE_ACCESSOR=T,e.getMatAutocompleteMissingPanelError=E,e.MatAutocompleteTrigger=S,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=/home/travis/build/angular/material2/dist/bundles/material-autocomplete.umd.min.js.map